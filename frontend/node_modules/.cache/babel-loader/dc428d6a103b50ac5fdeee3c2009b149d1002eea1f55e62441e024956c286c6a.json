{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'SetPassword',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var email = ref(\"\");\n    var password = ref(\"\");\n    var errorMessage = ref(\"\");\n    var successMessage = ref(\"\");\n    var router = useRouter();\n    var handleSetPassword = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/api/auth/set-password\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  email: email.value,\n                  password: password.value\n                })\n              });\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              data = _context.sent;\n              console.log(data);\n              if (response.ok) {\n                successMessage.value = \"Password set successfully. Redirecting to login...\";\n                setTimeout(function () {\n                  return router.push(\"/\");\n                }, 2000); // Redirect to login after 2s\n              } else {\n                errorMessage.value = data.error || \"Failed to set password.\";\n              }\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              errorMessage.value = \"An error occurred. Please try again.\";\n              console.error(\"Setting password failed:\", _context.t0);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      return function handleSetPassword() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var __returned__ = {\n      email: email,\n      password: password,\n      errorMessage: errorMessage,\n      successMessage: successMessage,\n      router: router,\n      handleSetPassword: handleSetPassword,\n      ref: ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","email","password","errorMessage","successMessage","router","handleSetPassword","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","value","sent","json","console","log","ok","setTimeout","push","error","t0","stop","apply","arguments"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/SetPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div class=\"w-full max-w-md bg-white rounded-lg shadow-md p-6\">\r\n        <h2 class=\"text-2xl font-bold text-gray-800 text-center mb-6\">Set Your Password</h2>\r\n        <form @submit.prevent=\"handleSetPassword\">\r\n          <div class=\"mb-4\">\r\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              v-model=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">New Password</label>\r\n            <input\r\n              v-model=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"Enter new password\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring focus:ring-indigo-500 focus:ring-opacity-50\"\r\n          >\r\n            Set Password\r\n          </button>\r\n        </form>\r\n        <p v-if=\"errorMessage\" class=\"text-red-500 text-center mt-4\">{{ errorMessage }}</p>\r\n        <p v-if=\"successMessage\" class=\"text-green-500 text-center mt-4\">{{ successMessage }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from \"vue\";\r\n  import { useRouter } from \"vue-router\";\r\n  \r\n  const email = ref(\"\");\r\n  const password = ref(\"\");\r\n  const errorMessage = ref(\"\");\r\n  const successMessage = ref(\"\");\r\n  const router = useRouter();\r\n  \r\n  const handleSetPassword = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/set-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: email.value, password: password.value }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      console.log(data)\r\n      if (response.ok) {\r\n        successMessage.value = \"Password set successfully. Redirecting to login...\";\r\n        setTimeout(() => router.push(\"/\"), 2000); // Redirect to login after 2s\r\n      } else {\r\n        errorMessage.value = data.error || \"Failed to set password.\";\r\n      }\r\n    } catch (error) {\r\n      errorMessage.value = \"An error occurred. Please try again.\";\r\n      console.error(\"Setting password failed:\", error);\r\n    }\r\n  };\r\n\r\n  </script>\r\n  "],"mappings":";;;;;;;;AAyCE,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;IAEtC,IAAMC,KAAK,GAAGF,GAAG,CAAC,EAAE,CAAC;IACrB,IAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;IACxB,IAAMI,YAAY,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC5B,IAAMK,cAAc,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC9B,IAAMM,MAAM,GAAGL,SAAS,CAAC,CAAC;IAE1B,IAAMM,iBAAiB;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,IAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAECC,KAAK,CAAC,6CAA6C,EAAE;gBAC1EC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBAAEvB,KAAK,EAAEA,KAAK,CAACwB,KAAK;kBAAEvB,QAAQ,EAAEA,QAAQ,CAACuB;gBAAM,CAAC;cACvE,CAAC,CAAC;YAAA;cANIb,QAAQ,GAAAI,QAAA,CAAAU,IAAA;cAAAV,QAAA,CAAAE,IAAA;cAAA,OAQKN,QAAQ,CAACe,IAAI,CAAC,CAAC;YAAA;cAA5Bd,IAAI,GAAAG,QAAA,CAAAU,IAAA;cACVE,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;cACjB,IAAID,QAAQ,CAACkB,EAAE,EAAE;gBACf1B,cAAc,CAACqB,KAAK,GAAG,oDAAoD;gBAC3EM,UAAU,CAAC;kBAAA,OAAM1B,MAAM,CAAC2B,IAAI,CAAC,GAAG,CAAC;gBAAA,GAAE,IAAI,CAAC,CAAC,CAAC;cAC5C,CAAC,MAAM;gBACL7B,YAAY,CAACsB,KAAK,GAAGZ,IAAI,CAACoB,KAAK,IAAI,yBAAyB;cAC9D;cAACjB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAkB,EAAA,GAAAlB,QAAA;cAEDb,YAAY,CAACsB,KAAK,GAAG,sCAAsC;cAC3DG,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAAjB,QAAA,CAAAkB,EAAO,CAAC;YAAC;YAAA;cAAA,OAAAlB,QAAA,CAAAmB,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA,CAEpD;MAAA,gBAtBKL,iBAAiBA,CAAA;QAAA,OAAAC,KAAA,CAAA6B,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsBtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}