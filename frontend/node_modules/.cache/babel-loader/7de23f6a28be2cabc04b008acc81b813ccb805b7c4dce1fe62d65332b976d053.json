{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref, reactive, computed } from 'vue';\nimport { Boxes, Bell, FileText } from 'lucide-vue-next';\nimport { useToast } from '@/composables/useToast';\nimport { useInventoryApi } from '@/composables/useInventoryApi';\nexport default {\n  __name: 'Settings',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var _useToast = useToast(),\n      showToast = _useToast.showToast;\n    var _useInventoryApi = useInventoryApi(),\n      apiSaveSettings = _useInventoryApi.saveSettings,\n      apiExportInventory = _useInventoryApi.exportInventory,\n      apiResetInventory = _useInventoryApi.resetInventory;\n    var originalSettings = {\n      reorderLevel: 10,\n      expirationThreshold: 30,\n      notifications: {\n        lowStock: true,\n        expiredItems: true,\n        newArrivals: false\n      },\n      reportFrequency: 'weekly',\n      includeGraphsInReports: true\n    };\n    var settings = reactive(_objectSpread({}, originalSettings));\n    var isFormChanged = computed(function () {\n      return JSON.stringify(settings) !== JSON.stringify(originalSettings);\n    });\n    var saveSettings = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return apiSaveSettings(settings);\n            case 3:\n              showToast('Settings saved successfully', 'success');\n              Object.assign(originalSettings, settings);\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              showToast('Failed to save settings', 'error');\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function saveSettings() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var exportInventory = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return apiExportInventory();\n            case 3:\n              showToast('Inventory exported successfully', 'success');\n              _context2.next = 9;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              showToast('Failed to export inventory', 'error');\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 6]]);\n      }));\n      return function exportInventory() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var confirmResetInventory = function confirmResetInventory() {\n      if (confirm('Are you sure you want to reset the inventory? This action cannot be undone.')) {\n        resetInventory();\n      }\n    };\n    var resetInventory = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return apiResetInventory();\n            case 3:\n              showToast('Inventory reset successfully', 'success');\n              _context3.next = 9;\n              break;\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              showToast('Failed to reset inventory', 'error');\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n      return function resetInventory() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var __returned__ = {\n      showToast: showToast,\n      apiSaveSettings: apiSaveSettings,\n      apiExportInventory: apiExportInventory,\n      apiResetInventory: apiResetInventory,\n      originalSettings: originalSettings,\n      settings: settings,\n      isFormChanged: isFormChanged,\n      saveSettings: saveSettings,\n      exportInventory: exportInventory,\n      confirmResetInventory: confirmResetInventory,\n      resetInventory: resetInventory,\n      ref: ref,\n      reactive: reactive,\n      computed: computed,\n      get Boxes() {\n        return Boxes;\n      },\n      get Bell() {\n        return Bell;\n      },\n      get FileText() {\n        return FileText;\n      },\n      get useToast() {\n        return useToast;\n      },\n      get useInventoryApi() {\n        return useInventoryApi;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","Boxes","Bell","FileText","useToast","useInventoryApi","_useToast","showToast","_useInventoryApi","apiSaveSettings","saveSettings","apiExportInventory","exportInventory","apiResetInventory","resetInventory","originalSettings","reorderLevel","expirationThreshold","notifications","lowStock","expiredItems","newArrivals","reportFrequency","includeGraphsInReports","settings","_objectSpread","isFormChanged","JSON","stringify","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","Object","assign","t0","stop","apply","arguments","_ref3","_callee2","_callee2$","_context2","confirmResetInventory","confirm","_ref4","_callee3","_callee3$","_context3"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/Settings.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n    <!-- Header Section -->\r\n    <h1 class=\"text-gray-800 text-3xl font-bold mb-2\">Inventory Clinic Settings</h1>\r\n    <p class=\"text-gray-600 mb-8\">\r\n      Manage your clinic's inventory preferences, track supplies, and configure notifications.\r\n    </p>\r\n\r\n    <form @submit.prevent=\"saveSettings\" class=\"space-y-8\">\r\n      <!-- Inventory Management Section -->\r\n      <section class=\"bg-white shadow-md rounded-lg p-6\">\r\n        <h2 class=\"text-gray-800 text-xl font-semibold mb-4 flex items-center\">\r\n          <Boxes class=\"mr-2\" />\r\n          Inventory Management\r\n        </h2>\r\n        <div class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"reorderLevel\" class=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Default Reorder Level\r\n            </label>\r\n            <input\r\n              v-model.number=\"settings.reorderLevel\"\r\n              type=\"number\"\r\n              id=\"reorderLevel\"\r\n              class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Enter default reorder threshold\"\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label for=\"expirationThreshold\" class=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Expiration Warning Threshold (days)\r\n            </label>\r\n            <input\r\n              v-model.number=\"settings.expirationThreshold\"\r\n              type=\"number\"\r\n              id=\"expirationThreshold\"\r\n              class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Enter days before expiration to warn\"\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- Notifications Section -->\r\n      <section class=\"bg-white shadow-md rounded-lg p-6\">\r\n        <h2 class=\"text-gray-800 text-xl font-semibold mb-4 flex items-center\">\r\n          <Bell class=\"mr-2\" />\r\n          Notification Preferences\r\n        </h2>\r\n        <div class=\"space-y-4\">\r\n          <label class=\"flex items-center\">\r\n            <input\r\n              v-model=\"settings.notifications.lowStock\"\r\n              type=\"checkbox\"\r\n              class=\"form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\r\n            />\r\n            <span class=\"ml-2 text-gray-700\">Enable Low Stock Alerts</span>\r\n          </label>\r\n          <label class=\"flex items-center\">\r\n            <input\r\n              v-model=\"settings.notifications.expiredItems\"\r\n              type=\"checkbox\"\r\n              class=\"form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\r\n            />\r\n            <span class=\"ml-2 text-gray-700\">Notify About Expired Items</span>\r\n          </label>\r\n          <label class=\"flex items-center\">\r\n            <input\r\n              v-model=\"settings.notifications.newArrivals\"\r\n              type=\"checkbox\"\r\n              class=\"form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\r\n            />\r\n            <span class=\"ml-2 text-gray-700\">Alert on New Inventory Arrivals</span>\r\n          </label>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- Reporting Section -->\r\n      <section class=\"bg-white shadow-md rounded-lg p-6\">\r\n        <h2 class=\"text-gray-800 text-xl font-semibold mb-4 flex items-center\">\r\n          <FileText class=\"mr-2\" />\r\n          Reporting\r\n        </h2>\r\n        <div class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"reportFrequency\" class=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Inventory Report Frequency\r\n            </label>\r\n            <select\r\n              v-model=\"settings.reportFrequency\"\r\n              id=\"reportFrequency\"\r\n              class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"daily\">Daily</option>\r\n              <option value=\"weekly\">Weekly</option>\r\n              <option value=\"monthly\">Monthly</option>\r\n              <option value=\"quarterly\">Quarterly</option>\r\n            </select>\r\n          </div>\r\n          <label class=\"flex items-center\">\r\n            <input\r\n              v-model=\"settings.includeGraphsInReports\"\r\n              type=\"checkbox\"\r\n              class=\"form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\r\n            />\r\n            <span class=\"ml-2 text-gray-700\">Include Graphs in Reports</span>\r\n          </label>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- Action Buttons -->\r\n      <div class=\"flex justify-between items-center\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n          :disabled=\"!isFormChanged\"\r\n        >\r\n          Save Settings\r\n        </button>\r\n        <div class=\"space-x-4\">\r\n          <button\r\n            @click=\"exportInventory\"\r\n            type=\"button\"\r\n            class=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n          >\r\n            Export Inventory\r\n          </button>\r\n          <button\r\n            @click=\"confirmResetInventory\"\r\n            type=\"button\"\r\n            class=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\r\n          >\r\n            Reset Inventory\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed } from 'vue'\r\nimport { Boxes, Bell, FileText } from 'lucide-vue-next'\r\nimport { useToast } from '@/composables/useToast'\r\nimport { useInventoryApi } from '@/composables/useInventoryApi'\r\n\r\nconst { showToast } = useToast()\r\nconst { saveSettings: apiSaveSettings, exportInventory: apiExportInventory, resetInventory: apiResetInventory } = useInventoryApi()\r\n\r\nconst originalSettings = {\r\n  reorderLevel: 10,\r\n  expirationThreshold: 30,\r\n  notifications: {\r\n    lowStock: true,\r\n    expiredItems: true,\r\n    newArrivals: false,\r\n  },\r\n  reportFrequency: 'weekly',\r\n  includeGraphsInReports: true,\r\n}\r\n\r\nconst settings = reactive({ ...originalSettings })\r\n\r\nconst isFormChanged = computed(() => {\r\n  return JSON.stringify(settings) !== JSON.stringify(originalSettings)\r\n})\r\n\r\nconst saveSettings = async () => {\r\n  try {\r\n    await apiSaveSettings(settings)\r\n    showToast('Settings saved successfully', 'success')\r\n    Object.assign(originalSettings, settings)\r\n  } catch (error) {\r\n    showToast('Failed to save settings', 'error')\r\n  }\r\n}\r\n\r\nconst exportInventory = async () => {\r\n  try {\r\n    await apiExportInventory()\r\n    showToast('Inventory exported successfully', 'success')\r\n  } catch (error) {\r\n    showToast('Failed to export inventory', 'error')\r\n  }\r\n}\r\n\r\nconst confirmResetInventory = () => {\r\n  if (confirm('Are you sure you want to reset the inventory? This action cannot be undone.')) {\r\n    resetInventory()\r\n  }\r\n}\r\n\r\nconst resetInventory = async () => {\r\n  try {\r\n    await apiResetInventory()\r\n    showToast('Inventory reset successfully', 'success')\r\n  } catch (error) {\r\n    showToast('Failed to reset inventory', 'error')\r\n  }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}