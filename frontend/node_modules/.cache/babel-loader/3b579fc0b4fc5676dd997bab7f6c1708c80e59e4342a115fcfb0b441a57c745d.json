{"ast":null,"code":"import _objectSpread from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { observeElementRect, observeElementOffset, elementScroll, observeWindowRect, observeWindowOffset, windowScroll, Virtualizer } from \"@tanstack/virtual-core\";\nexport * from \"@tanstack/virtual-core\";\nimport { computed, unref, shallowRef, watch, triggerRef, onScopeDispose } from \"vue\";\nfunction useVirtualizerBase(options) {\n  var virtualizer = new Virtualizer(unref(options));\n  var state = shallowRef(virtualizer);\n  var cleanup = virtualizer._didMount();\n  watch(function () {\n    return unref(options).getScrollElement();\n  }, function (el) {\n    if (el) {\n      virtualizer._willUpdate();\n    }\n  }, {\n    immediate: true\n  });\n  watch(function () {\n    return unref(options);\n  }, function (options2) {\n    virtualizer.setOptions(_objectSpread(_objectSpread({}, options2), {}, {\n      onChange: function onChange(instance, sync) {\n        var _a;\n        triggerRef(state);\n        (_a = options2.onChange) == null ? void 0 : _a.call(options2, instance, sync);\n      }\n    }));\n    virtualizer._willUpdate();\n    triggerRef(state);\n  }, {\n    immediate: true\n  });\n  onScopeDispose(cleanup);\n  return state;\n}\nfunction useVirtualizer(options) {\n  return useVirtualizerBase(computed(function () {\n    return _objectSpread({\n      observeElementRect: observeElementRect,\n      observeElementOffset: observeElementOffset,\n      scrollToFn: elementScroll\n    }, unref(options));\n  }));\n}\nfunction useWindowVirtualizer(options) {\n  return useVirtualizerBase(computed(function () {\n    return _objectSpread({\n      getScrollElement: function getScrollElement() {\n        return typeof document !== \"undefined\" ? window : null;\n      },\n      observeElementRect: observeWindowRect,\n      observeElementOffset: observeWindowOffset,\n      scrollToFn: windowScroll,\n      initialOffset: function initialOffset() {\n        return typeof document !== \"undefined\" ? window.scrollY : 0;\n      }\n    }, unref(options));\n  }));\n}\nexport { useVirtualizer, useWindowVirtualizer };","map":{"version":3,"names":["useVirtualizerBase","options","virtualizer","Virtualizer","unref","state","shallowRef","cleanup","_didMount","watch","getScrollElement","el","_willUpdate","immediate","options2","setOptions","_objectSpread","onChange","instance","sync","triggerRef","_a","call","onScopeDispose","useVirtualizer","computed","observeElementRect","observeElementOffset","scrollToFn","elementScroll","useWindowVirtualizer","document","window","observeWindowRect","observeWindowOffset","windowScroll","initialOffset","scrollY"],"sources":["../../src/index.ts"],"sourcesContent":["import {\n  Virtualizer,\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  windowScroll,\n} from '@tanstack/virtual-core'\nimport {\n  computed,\n  onScopeDispose,\n  shallowRef,\n  triggerRef,\n  unref,\n  watch,\n} from 'vue'\nimport type { PartialKeys, VirtualizerOptions } from '@tanstack/virtual-core'\nimport type { Ref } from 'vue'\n\nexport * from '@tanstack/virtual-core'\n\ntype MaybeRef<T> = T | Ref<T>\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: MaybeRef<VirtualizerOptions<TScrollElement, TItemElement>>,\n): Ref<Virtualizer<TScrollElement, TItemElement>> {\n  const virtualizer = new Virtualizer(unref(options))\n  const state = shallowRef(virtualizer)\n\n  const cleanup = virtualizer._didMount()\n\n  watch(\n    () => unref(options).getScrollElement(),\n    (el) => {\n      if (el) {\n        virtualizer._willUpdate()\n      }\n    },\n    {\n      immediate: true,\n    },\n  )\n\n  watch(\n    () => unref(options),\n    (options) => {\n      virtualizer.setOptions({\n        ...options,\n        onChange: (instance, sync) => {\n          triggerRef(state)\n          options.onChange?.(instance, sync)\n        },\n      })\n\n      virtualizer._willUpdate()\n      triggerRef(state)\n    },\n    {\n      immediate: true,\n    },\n  )\n\n  onScopeDispose(cleanup)\n\n  return state\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: MaybeRef<\n    PartialKeys<\n      VirtualizerOptions<TScrollElement, TItemElement>,\n      'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n    >\n  >,\n): Ref<Virtualizer<TScrollElement, TItemElement>> {\n  return useVirtualizerBase<TScrollElement, TItemElement>(\n    computed(() => ({\n      observeElementRect: observeElementRect,\n      observeElementOffset: observeElementOffset,\n      scrollToFn: elementScroll,\n      ...unref(options),\n    })),\n  )\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: MaybeRef<\n    PartialKeys<\n      VirtualizerOptions<Window, TItemElement>,\n      | 'observeElementRect'\n      | 'observeElementOffset'\n      | 'scrollToFn'\n      | 'getScrollElement'\n    >\n  >,\n): Ref<Virtualizer<Window, TItemElement>> {\n  return useVirtualizerBase<Window, TItemElement>(\n    computed(() => ({\n      getScrollElement: () => (typeof document !== 'undefined' ? window : null),\n      observeElementRect: observeWindowRect,\n      observeElementOffset: observeWindowOffset,\n      scrollToFn: windowScroll,\n      initialOffset: () =>\n        typeof document !== 'undefined' ? window.scrollY : 0,\n      ...unref(options),\n    })),\n  )\n}\n"],"mappings":";;;;AAwBA,SAASA,mBAIPC,OAAA,EACgD;EAChD,IAAMC,WAAA,GAAc,IAAIC,WAAA,CAAYC,KAAA,CAAMH,OAAO,CAAC;EAC5C,IAAAI,KAAA,GAAQC,UAAA,CAAWJ,WAAW;EAE9B,IAAAK,OAAA,GAAUL,WAAA,CAAYM,SAAA,CAAU;EAEtCC,KAAA,CACE;IAAA,OAAML,KAAA,CAAMH,OAAO,EAAES,gBAAA,CAAiB;EAAA,GACtC,UAACC,EAAA,EAAO;IACN,IAAIA,EAAA,EAAI;MACNT,WAAA,CAAYU,WAAA,CAAY;IAAA;EAE5B,GACA;IACEC,SAAA,EAAW;EAAA,CAEf;EAEAJ,KAAA,CACE;IAAA,OAAML,KAAA,CAAMH,OAAO;EAAA,GACnB,UAACa,QAAA,EAAY;IACXZ,WAAA,CAAYa,UAAA,CAAAC,aAAA,CAAAA,aAAA,KACPF,QAAA;MACHG,QAAA,EAAU,SAAVA,SAAWC,QAAA,EAAUC,IAAA,EAAS;;QAC5BC,UAAA,CAAWf,KAAK;QAChB,CAAAgB,EAAA,GAAAP,QAAA,CAAQG,QAAA,KAAR,gBAAAI,EAAA,CAAAC,IAAA,CAAAR,QAAA,EAAmBI,QAAA,EAAUC,IAAA;MAAI;IAAA,EAEpC;IAEDjB,WAAA,CAAYU,WAAA,CAAY;IACxBQ,UAAA,CAAWf,KAAK;EAClB,GACA;IACEQ,SAAA,EAAW;EAAA,CAEf;EAEAU,cAAA,CAAehB,OAAO;EAEf,OAAAF,KAAA;AACT;AAEO,SAASmB,eAIdvB,OAAA,EAMgD;EACzC,OAAAD,kBAAA,CACLyB,QAAA,CAAS;IAAA,OAAAT,aAAA;MACPU,kBAAA,EAAAA,kBAAA;MACAC,oBAAA,EAAAA,oBAAA;MACAC,UAAA,EAAYC;IAAA,GACTzB,KAAA,CAAMH,OAAO;EAAA,CAChB,CACJ;AACF;AAEO,SAAS6B,qBACd7B,OAAA,EASwC;EACjC,OAAAD,kBAAA,CACLyB,QAAA,CAAS;IAAA,OAAAT,aAAA;MACPN,gBAAA,EAAkB,SAAlBA,iBAAA;QAAA,OAAyB,OAAOqB,QAAA,KAAa,cAAcC,MAAA,GAAS;MAAA;MACpEN,kBAAA,EAAoBO,iBAAA;MACpBN,oBAAA,EAAsBO,mBAAA;MACtBN,UAAA,EAAYO,YAAA;MACZC,aAAA,EAAe,SAAfA,cAAA;QAAA,OACE,OAAOL,QAAA,KAAa,cAAcC,MAAA,CAAOK,OAAA,GAAU;MAAA;IAAA,GAClDjC,KAAA,CAAMH,OAAO;EAAA,CAChB,CACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}