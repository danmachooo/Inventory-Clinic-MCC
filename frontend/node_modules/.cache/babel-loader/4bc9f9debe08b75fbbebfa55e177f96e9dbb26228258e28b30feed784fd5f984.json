{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nvar API_URL = 'http://localhost:5000';\n\n// Ref variables for state management\n\nexport default {\n  __name: 'Reports',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var reportType = ref('monthly');\n    var selectedMonth = ref(new Date().toISOString().slice(0, 7));\n    var selectedYear = ref(new Date().getFullYear());\n    var availableYears = ref(Array.from({\n      length: 5\n    }, function (_, i) {\n      return new Date().getFullYear() - i;\n    }));\n    var reportData = ref([]);\n    var narrativeReport = ref('');\n    var isLoading = ref(false);\n    var error = ref(null);\n    var isGeneratingPDF = ref(false);\n    var reportTitle = computed(function () {\n      if (reportType.value === 'monthly') {\n        return new Date(selectedMonth.value).toLocaleString('default', {\n          month: 'long',\n          year: 'numeric'\n        });\n      } else {\n        return selectedYear.value.toString();\n      }\n    });\n\n    // Fetch Report Data\n    var fetchReport = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              isLoading.value = true;\n              error.value = null;\n              _context.prev = 2;\n              params = {\n                type: reportType.value,\n                year: reportType.value === 'yearly' ? selectedYear.value : selectedMonth.value.split('-')[0],\n                month: reportType.value === 'monthly' ? selectedMonth.value.split('-')[1] : undefined\n              };\n              _context.next = 6;\n              return axios.get(\"\".concat(API_URL, \"/api/inventory/report\"), {\n                params: params\n              });\n            case 6:\n              response = _context.sent;\n              reportData.value = response.data.data;\n              narrativeReport.value = generateNarrativeReport(reportData.value);\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Error fetching report:', _context.t0);\n              error.value = 'Failed to fetch report data. Please try again.';\n            case 15:\n              _context.prev = 15;\n              isLoading.value = false;\n              return _context.finish(15);\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 11, 15, 18]]);\n      }));\n      return function fetchReport() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Print Report\n    var printReport = function printReport() {\n      window.print();\n    };\n\n    // Other methods (like downloadPDF) remain the same...\n    onMounted(fetchReport);\n    var __returned__ = {\n      API_URL: API_URL,\n      reportType: reportType,\n      selectedMonth: selectedMonth,\n      selectedYear: selectedYear,\n      availableYears: availableYears,\n      reportData: reportData,\n      narrativeReport: narrativeReport,\n      isLoading: isLoading,\n      error: error,\n      isGeneratingPDF: isGeneratingPDF,\n      reportTitle: reportTitle,\n      fetchReport: fetchReport,\n      printReport: printReport,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted,\n      get axios() {\n        return axios;\n      },\n      get jsPDF() {\n        return jsPDF;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","jsPDF","API_URL","reportType","selectedMonth","Date","toISOString","slice","selectedYear","getFullYear","availableYears","Array","from","length","_","i","reportData","narrativeReport","isLoading","error","isGeneratingPDF","reportTitle","value","toLocaleString","month","year","toString","fetchReport","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","response","wrap","_callee$","_context","prev","next","type","split","undefined","get","concat","sent","data","generateNarrativeReport","t0","console","finish","stop","apply","arguments","printReport","window","print"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/Reports.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <h1 class=\"text-3xl font-bold text-gray-800 mb-6\">Inventory Reports</h1>\r\n\r\n    <!-- Report Type and Date Selection -->\r\n    <div class=\"mb-6 flex flex-wrap items-center gap-4\">\r\n      <div class=\"flex items-center\">\r\n        <label for=\"reportType\" class=\"mr-2 text-gray-700\">Report Type:</label>\r\n        <select\r\n          id=\"reportType\"\r\n          v-model=\"reportType\"\r\n          @change=\"fetchReport\"\r\n          class=\"border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option value=\"monthly\">Monthly</option>\r\n          <option value=\"yearly\">Yearly</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div v-if=\"reportType === 'monthly'\" class=\"flex items-center\">\r\n        <label for=\"monthYear\" class=\"mr-2 text-gray-700\">Select Month:</label>\r\n        <input\r\n          id=\"monthYear\"\r\n          v-model=\"selectedMonth\"\r\n          type=\"month\"\r\n          @change=\"fetchReport\"\r\n          class=\"border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n      </div>\r\n\r\n      <div v-else class=\"flex items-center\">\r\n        <label for=\"year\" class=\"mr-2 text-gray-700\">Select Year:</label>\r\n        <select\r\n          id=\"year\"\r\n          v-model=\"selectedYear\"\r\n          @change=\"fetchReport\"\r\n          class=\"border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">\r\n            {{ year }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"isLoading\" class=\"text-center py-8\">\r\n      <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto\"></div>\r\n      <p class=\"mt-4 text-gray-600\">Loading report data...</p>\r\n    </div>\r\n\r\n    <!-- Error Message -->\r\n    <div v-if=\"error\" class=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\" role=\"alert\">\r\n      <p class=\"font-bold\">Error</p>\r\n      <p>{{ error }}</p>\r\n    </div>\r\n\r\n    <!-- Report Content -->\r\n    <div v-if=\"!isLoading && !error\" class=\"print:block\">\r\n      <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n        Inventory Report for {{ reportTitle }}\r\n      </h2>\r\n\r\n      <!-- Inventory Items Table -->\r\n      <div class=\"mb-8\">\r\n        <h3 class=\"text-xl font-semibold text-gray-700 mb-3\">Inventory Items</h3>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full bg-white border border-gray-300\">\r\n            <thead>\r\n              <tr class=\"bg-gray-100\">\r\n                <th class=\"py-2 px-4 border-b text-left\">Item Name</th>\r\n                <th class=\"py-2 px-4 border-b text-left\">Batch Name</th>\r\n                <th class=\"py-2 px-4 border-b text-right\">Batch Quantity</th>\r\n                <th class=\"py-2 px-4 border-b text-right\">Total Disbursed</th>\r\n                <th class=\"py-2 px-4 border-b text-right\">Total Remaining</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(item, index) in reportData\" :key=\"index\" class=\"hover:bg-gray-50\">\r\n                <td class=\"py-2 px-4 border-b\">{{ item.itemName }}</td>\r\n                <td class=\"py-2 px-4 border-b\">{{ item.batchName }}</td>\r\n                <td class=\"py-2 px-4 border-b text-right\">{{ item.batchQuantity }}</td>\r\n                <td class=\"py-2 px-4 border-b text-right\">{{ item.totalDisbursed }}</td>\r\n                <td class=\"py-2 px-4 border-b text-right\">{{ item.totalRemaining }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Narrative Report -->\r\n      <div class=\"mb-8 bg-gray-100 p-6 rounded-lg\">\r\n        <h3 class=\"text-xl font-semibold text-gray-700 mb-3\">Executive Summary</h3>\r\n        <div class=\"text-gray-700 prose\" v-html=\"narrativeReport\"></div>\r\n      </div>\r\n\r\n      <!-- Action Buttons -->\r\n      <div class=\"mt-6 flex justify-center space-x-4 print:hidden\">\r\n        <button\r\n          @click=\"downloadPDF\"\r\n          class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          :disabled=\"isGeneratingPDF\"\r\n        >\r\n          {{ isGeneratingPDF ? 'Generating PDF...' : 'Download PDF Report' }}\r\n        </button>\r\n        <button\r\n          @click=\"printReport\"\r\n          class=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n        >\r\n          Print Report\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\n// Ref variables for state management\r\nconst reportType = ref('monthly');\r\nconst selectedMonth = ref(new Date().toISOString().slice(0, 7));\r\nconst selectedYear = ref(new Date().getFullYear());\r\nconst availableYears = ref(Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i));\r\nconst reportData = ref([]);\r\nconst narrativeReport = ref('');\r\nconst isLoading = ref(false);\r\nconst error = ref(null);\r\nconst isGeneratingPDF = ref(false);\r\n\r\nconst reportTitle = computed(() => {\r\n  if (reportType.value === 'monthly') {\r\n    return new Date(selectedMonth.value).toLocaleString('default', { month: 'long', year: 'numeric' });\r\n  } else {\r\n    return selectedYear.value.toString();\r\n  }\r\n});\r\n\r\n// Fetch Report Data\r\nconst fetchReport = async () => {\r\n  isLoading.value = true;\r\n  error.value = null;\r\n\r\n  try {\r\n    const params = {\r\n      type: reportType.value,\r\n      year: reportType.value === 'yearly' ? selectedYear.value : selectedMonth.value.split('-')[0],\r\n      month: reportType.value === 'monthly' ? selectedMonth.value.split('-')[1] : undefined,\r\n    };\r\n\r\n    const response = await axios.get(`${API_URL}/api/inventory/report`, { params });\r\n    reportData.value = response.data.data;\r\n    narrativeReport.value = generateNarrativeReport(reportData.value);\r\n  } catch (err) {\r\n    console.error('Error fetching report:', err);\r\n    error.value = 'Failed to fetch report data. Please try again.';\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\n// Print Report\r\nconst printReport = () => {\r\n  window.print();\r\n};\r\n\r\n// Other methods (like downloadPDF) remain the same...\r\nonMounted(fetchReport);\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}