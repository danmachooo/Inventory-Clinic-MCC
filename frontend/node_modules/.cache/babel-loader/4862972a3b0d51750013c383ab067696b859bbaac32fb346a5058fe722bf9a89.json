{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { ref, computed } from 'vue';\nimport { useAuthStore } from './store/authStore';\nimport Sidebar from './components/Sidebar.vue';\nimport Header from './components/Header.vue';\nexport default {\n  __name: 'App',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var authStore = useAuthStore();\n    var isLoggedIn = computed(function () {\n      return authStore.isLoggedIn;\n    });\n    var sidebarOpen = ref(true);\n    var toggleSidebar = function toggleSidebar() {\n      sidebarOpen.value = !sidebarOpen.value;\n    };\n    var __returned__ = {\n      authStore: authStore,\n      isLoggedIn: isLoggedIn,\n      sidebarOpen: sidebarOpen,\n      toggleSidebar: toggleSidebar,\n      ref: ref,\n      computed: computed,\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      Sidebar: Sidebar,\n      Header: Header\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useAuthStore","Sidebar","Header","authStore","isLoggedIn","sidebarOpen","toggleSidebar","value"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/App.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex h-screen bg-gray-100\">\r\n    <Sidebar v-if=\"isLoggedIn\" :is-open=\"sidebarOpen\" @toggle-sidebar=\"toggleSidebar\" />\r\n    <div class=\"flex-1 flex flex-col overflow-hidden\">\r\n      <Header v-if=\"isLoggedIn\" @toggle-sidebar=\"toggleSidebar\" />\r\n      <main class=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\">\r\n        <router-view></router-view>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { useAuthStore } from './store/authStore'\r\nimport Sidebar from './components/Sidebar.vue'\r\nimport Header from './components/Header.vue'\r\n\r\nconst authStore = useAuthStore()\r\nconst isLoggedIn = computed(() => authStore.isLoggedIn)\r\nconst sidebarOpen = ref(true)\r\n\r\nconst toggleSidebar = () => {\r\n  sidebarOpen.value = !sidebarOpen.value\r\n}\r\n</script>"],"mappings":";AAaA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;;;;;;IAE5C,IAAMC,SAAS,GAAGH,YAAY,CAAC,CAAC;IAChC,IAAMI,UAAU,GAAGL,QAAQ,CAAC;MAAA,OAAMI,SAAS,CAACC,UAAU;IAAA,EAAC;IACvD,IAAMC,WAAW,GAAGP,GAAG,CAAC,IAAI,CAAC;IAE7B,IAAMQ,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;MAC1BD,WAAW,CAACE,KAAK,GAAG,CAACF,WAAW,CAACE,KAAK;IACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}