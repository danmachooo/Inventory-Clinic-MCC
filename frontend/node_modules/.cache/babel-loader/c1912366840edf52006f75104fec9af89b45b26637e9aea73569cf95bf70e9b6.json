{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Swal from 'sweetalert2';\nimport Dashboard from '@/views/Dashboard.vue';\nimport Inventory from '@/views/Inventory.vue';\nimport BatchManagement from '@/views/BatchManagement.vue';\nimport Transactions from '@/views/Transactions.vue';\nimport Reports from '@/views/Reports.vue';\nimport Settings from '@/views/Settings.vue';\nimport Notifications from '@/views/Notifications.vue';\nimport VoucherLogin from '@/views/VoucherLogin.vue';\nvar routes = [{\n  path: '/voucher-login',\n  component: VoucherLogin\n}, {\n  path: '/voucher-login',\n  component: VoucherLogin\n}, {\n  path: '/dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/inventory',\n  component: Inventory,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/batch-management',\n  component: BatchManagement,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/batch-management/:id',\n  component: BatchManagement,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/transactions',\n  component: Transactions,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/reports',\n  component: Reports,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/settings',\n  component: Settings,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/notifications',\n  component: Notifications,\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  var isAuthenticated = !!localStorage.getItem('authToken'); // Check if auth token exists\n\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Access Denied',\n      text: 'You must log in to access this page.',\n      confirmButtonText: 'Go to Login'\n    }).then(function () {\n      next('/'); // Redirect to the login page after SweetAlert is dismissed\n    });\n  } else {\n    next(); // Proceed to the requested route\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Swal","Dashboard","Inventory","BatchManagement","Transactions","Reports","Settings","Notifications","VoucherLogin","routes","path","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","fire","icon","title","text","confirmButtonText","then"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Swal from 'sweetalert2';\r\nimport Dashboard from '@/views/Dashboard.vue';\r\nimport Inventory from '@/views/Inventory.vue';\r\nimport BatchManagement from '@/views/BatchManagement.vue';\r\nimport Transactions from '@/views/Transactions.vue';\r\nimport Reports from '@/views/Reports.vue';\r\nimport Settings from '@/views/Settings.vue';\r\nimport Notifications from '@/views/Notifications.vue';\r\nimport VoucherLogin from '@/views/VoucherLogin.vue';\r\n\r\nconst routes = [\r\n  { path: '/voucher-login', component: VoucherLogin },\r\n  { path: '/voucher-login', component: VoucherLogin },\r\n  \r\n  { path: '/dashboard', component: Dashboard, meta: { requiresAuth: true } },\r\n  { path: '/inventory', component: Inventory, meta: { requiresAuth: true } },\r\n  { path: '/batch-management', component: BatchManagement, meta: { requiresAuth: true } },\r\n  { path: '/batch-management/:id', component: BatchManagement, meta: { requiresAuth: true } },\r\n  { path: '/transactions', component: Transactions, meta: { requiresAuth: true } },\r\n  { path: '/reports', component: Reports, meta: { requiresAuth: true } },\r\n  { path: '/settings', component: Settings, meta: { requiresAuth: true } },\r\n  { path: '/notifications', component: Notifications, meta: { requiresAuth: true } },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = !!localStorage.getItem('authToken'); // Check if auth token exists\r\n\r\n  if (to.meta.requiresAuth && !isAuthenticated) {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Access Denied',\r\n      text: 'You must log in to access this page.',\r\n      confirmButtonText: 'Go to Login',\r\n    }).then(() => {\r\n      next('/'); // Redirect to the login page after SweetAlert is dismissed\r\n    });\r\n  } else {\r\n    next(); // Proceed to the requested route\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,IAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEH;AAAa,CAAC,EACnD;EAAEE,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEH;AAAa,CAAC,EAEnD;EAAEE,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEV,SAAS;EAAEW,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC1E;EAAEH,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAET,SAAS;EAAEU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC1E;EAAEH,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAER,eAAe;EAAES,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACvF;EAAEH,IAAI,EAAE,uBAAuB;EAAEC,SAAS,EAAER,eAAe;EAAES,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC3F;EAAEH,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEP,YAAY;EAAEQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAChF;EAAEH,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEN,OAAO;EAAEO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACtE;EAAEH,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEL,QAAQ;EAAEM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACxE;EAAEH,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEJ,aAAa;EAAEK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,CACnF;AAED,IAAMC,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BU,MAAM,EAANA;AACF,CAAC,CAAC;AAEFK,MAAM,CAACE,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;EAE7D,IAAIL,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,eAAe,EAAE;IAC5CpB,IAAI,CAACuB,IAAI,CAAC;MACRC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,sCAAsC;MAC5CC,iBAAiB,EAAE;IACrB,CAAC,CAAC,CAACC,IAAI,CAAC,YAAM;MACZT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,CAAC,CAAC;EACJ,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}