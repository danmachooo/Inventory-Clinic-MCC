{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"flex h-screen bg-gray-100\"\n};\nvar _hoisted_2 = {\n  \"class\": \"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Conditional rendering based on user login status \"), $setup.isLoggedIn ? (_openBlock(), _createBlock($setup[\"Sidebar\"], {\n    key: 0,\n    \"is-open\": $setup.sidebarOpen,\n    onToggleSidebar: $setup.toggleSidebar\n  }, null, 8 /* PROPS */, [\"is-open\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n    \"class\": _normalizeClass($setup.isLoggedIn ? 'flex-1 flex flex-col overflow-hidden' : 'flex-1 flex justify-center items-center')\n  }, [$setup.isLoggedIn ? (_openBlock(), _createBlock($setup[\"Header\"], {\n    key: 0,\n    onToggleSidebar: $setup.toggleSidebar\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"main\", _hoisted_2, [_createVNode(_component_router_view)])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createCommentVNode","$setup","isLoggedIn","_createBlock","key","sidebarOpen","onToggleSidebar","toggleSidebar","_createElementVNode","_normalizeClass","_hoisted_2","_createVNode","_component_router_view"],"sources":["C:\\Inventory-Clinic-MCC\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex h-screen bg-gray-100\">\r\n    <!-- Conditional rendering based on user login status -->\r\n    <Sidebar v-if=\"isLoggedIn\" :is-open=\"sidebarOpen\" @toggle-sidebar=\"toggleSidebar\" />\r\n    <div :class=\"isLoggedIn ? 'flex-1 flex flex-col overflow-hidden' : 'flex-1 flex justify-center items-center'\">\r\n      <Header v-if=\"isLoggedIn\" @toggle-sidebar=\"toggleSidebar\" />\r\n      <main class=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\">\r\n        <router-view></router-view>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport Sidebar from './components/Sidebar.vue'\r\nimport Header from './components/Header.vue'\r\n\r\n// Reactive state for user authentication status\r\nconst isLoggedIn = ref(false)\r\nconst sidebarOpen = ref(true)\r\nconst router = useRouter()\r\n\r\n// Function to check if the user is authenticated\r\nconst checkAuth = () => {\r\n  const token = localStorage.getItem('authToken') // Replace 'authToken' with your actual key\r\n  isLoggedIn.value = !!token // Set to true if token exists\r\n  if (!isLoggedIn.value) {\r\n    router.push('/login') // Redirect to login if not authenticated\r\n  }\r\n}\r\n\r\n// Call checkAuth when the component is mounted\r\nonMounted(() => {\r\n  checkAuth()\r\n})\r\n\r\n// Function to toggle the sidebar\r\nconst toggleSidebar = () => {\r\n  sidebarOpen.value = !sidebarOpen.value\r\n}\r\n</script>\r\n"],"mappings":";;EACO,SAAM;AAA2B;;EAK5B,SAAM;AAAsD;;;uBALtEA,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,sDAAyD,EAC1CC,MAAA,CAAAC,UAAU,I,cAAzBC,YAAA,CAAoFF,MAAA;IAHxFG,GAAA;IAGgC,SAAO,EAAEH,MAAA,CAAAI,WAAW;IAAGC,eAAc,EAAEL,MAAA,CAAAM;0CAHvEP,mBAAA,gBAIIQ,mBAAA,CAKM;IALA,SAJVC,eAAA,CAIiBR,MAAA,CAAAC,UAAU;MACPD,MAAA,CAAAC,UAAU,I,cAAxBC,YAAA,CAA4DF,MAAA;IALlEG,GAAA;IAKiCE,eAAc,EAAEL,MAAA,CAAAM;QALjDP,mBAAA,gBAMMQ,mBAAA,CAEO,QAFPE,UAEO,GADLC,YAAA,CAA2BC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}