{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"bg-white shadow-sm\"\n};\nvar _hoisted_2 = {\n  \"class\": \"flex items-center justify-between p-4\"\n};\nvar _hoisted_3 = {\n  \"class\": \"relative\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"absolute right-8 top-1/2 -translate-y-1/2 bg-white border border-gray-200 rounded-lg shadow-lg p-3 max-w-xs animate-bounce\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"absolute -top-1 -right-1 block h-3 w-3 rounded-full bg-red-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"header\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('toggle-sidebar');\n    }),\n    \"class\": \"text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-md\"\n  }, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    \"class\": \"sr-only\"\n  }, \"Toggle Sidebar\", -1 /* HOISTED */)), _createVNode($setup[\"Menu\"], {\n    \"class\": \"h-6 w-6\"\n  })]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_Transition, {\n    name: \"fade\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$setup.showToastNotification ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", {\n        \"class\": \"text-sm text-gray-800\"\n      }, \"You have new notifications\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"button\", {\n    onClick: $setup.showNotification,\n    \"class\": \"text-gray-500 hover:text-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-md relative\"\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    \"class\": \"sr-only\"\n  }, \"Notifications\", -1 /* HOISTED */)), _createVNode($setup[\"Bell\"], {\n    \"class\": \"h-6 w-6\"\n  }), $setup.unreadNotifications ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5)) : _createCommentVNode(\"v-if\", true)])])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","$emit","_createVNode","$setup","_hoisted_3","_Transition","name","_withCtx","showToastNotification","_hoisted_4","_createCommentVNode","_","showNotification","unreadNotifications","_hoisted_5"],"sources":["C:\\Inventory-Clinic-MCC\\frontend\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <header class=\"bg-white shadow-sm\">\r\n    <div class=\"flex items-center justify-between p-4\">\r\n      <button @click=\"$emit('toggle-sidebar')\" class=\"text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-md\">\r\n        <span class=\"sr-only\">Toggle Sidebar</span>\r\n        <Menu class=\"h-6 w-6\" />\r\n      </button>\r\n      \r\n      <div class=\"relative\">\r\n        <Transition name=\"fade\">\r\n          <div v-if=\"showToastNotification\" class=\"absolute right-8 top-1/2 -translate-y-1/2 bg-white border border-gray-200 rounded-lg shadow-lg p-3 max-w-xs animate-bounce\">\r\n            <p class=\"text-sm text-gray-800\">You have new notifications</p>\r\n          </div>\r\n        </Transition>\r\n        <button @click=\"showNotification\" class=\"text-gray-500 hover:text-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-md relative\">\r\n          <span class=\"sr-only\">Notifications</span>\r\n          <Bell class=\"h-6 w-6\" />\r\n          <span v-if=\"unreadNotifications\" class=\"absolute -top-1 -right-1 block h-3 w-3 rounded-full bg-red-500\"></span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { Menu, Bell } from 'lucide-vue-next'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst unreadNotifications = ref(false)\r\nconst showToastNotification = ref(false)\r\nconst router = useRouter()\r\nlet toastInterval = null\r\nlet fetchInterval = null\r\n\r\nconst fetchNotifications = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/inventory/notifications')\r\n    const data = await response.json()\r\n    const hasUnreadNotifications = data.data.some(notification => !notification.seen)\r\n    if (hasUnreadNotifications && !unreadNotifications.value) {\r\n      showToast()\r\n    }\r\n    unreadNotifications.value = hasUnreadNotifications\r\n  } catch (error) {\r\n    console.error('Error fetching notifications:', error)\r\n  }\r\n}\r\n\r\nconst showToast = () => {\r\n  showToastNotification.value = true\r\n  setTimeout(() => {\r\n    showToastNotification.value = false\r\n  }, 5000)\r\n\r\n  // Clear existing interval if any\r\n  if (toastInterval) clearInterval(toastInterval)\r\n\r\n  // Set up new interval\r\n  toastInterval = setInterval(() => {\r\n    if (unreadNotifications.value) {\r\n      showToastNotification.value = true\r\n      setTimeout(() => {\r\n        showToastNotification.value = false\r\n      }, 5000)\r\n    } else {\r\n      clearInterval(toastInterval)\r\n    }\r\n  }, 60000) // Show again after 1 minute\r\n}\r\n\r\nconst showNotification = () => {\r\n  router.push('/notifications')\r\n}\r\n\r\nonMounted(() => {\r\n  fetchNotifications()\r\n  // Set up polling to check for new notifications every 15 seconds\r\n  fetchInterval = setInterval(fetchNotifications, 15000)\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (fetchInterval) clearInterval(fetchInterval)\r\n  if (toastInterval) clearInterval(toastInterval)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 100% {\r\n    transform: translateY(-50%) translateX(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-60%) translateX(0);\r\n  }\r\n}\r\n\r\n.animate-bounce {\r\n  animation: bounce 1s infinite;\r\n}\r\n</style>"],"mappings":";;EACU,SAAM;AAAoB;;EAC3B,SAAM;AAAuC;;EAM3C,SAAM;AAAU;;EAR3BA,GAAA;EAU4C,SAAM;;;EAVlDA,GAAA;EAiB2C,SAAM;;;uBAhB/CC,mBAAA,CAoBS,UApBTC,UAoBS,GAnBPC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJD,mBAAA,CAGS;IAHAE,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,IAAA,CAAAC,KAAK;IAAA;IAAoB,SAAM;gCAC7CN,mBAAA,CAA2C;IAArC,SAAM;EAAS,GAAC,gBAAc,sBACpCO,YAAA,CAAwBC,MAAA;IAAlB,SAAM;EAAS,G,GAGvBR,mBAAA,CAWM,OAXNS,UAWM,GAVJF,YAAA,CAIaG,WAAA;IAJDC,IAAI,EAAC;EAAM;IAT/B,WAAAC,QAAA,CAUU;MAAA,OAEM,CAFKJ,MAAA,CAAAK,qBAAqB,I,cAAhCf,mBAAA,CAEM,OAFNgB,UAEM,EAAAX,MAAA,QAAAA,MAAA,OADJH,mBAAA,CAA+D;QAA5D,SAAM;MAAuB,GAAC,4BAA0B,oB,MAXvEe,mBAAA,e;;IAAAC,CAAA;MAcQhB,mBAAA,CAIS;IAJAE,OAAK,EAAEM,MAAA,CAAAS,gBAAgB;IAAE,SAAM;gCACtCjB,mBAAA,CAA0C;IAApC,SAAM;EAAS,GAAC,eAAa,sBACnCO,YAAA,CAAwBC,MAAA;IAAlB,SAAM;EAAS,IACTA,MAAA,CAAAU,mBAAmB,I,cAA/BpB,mBAAA,CAA+G,QAA/GqB,UAA+G,KAjBzHJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}