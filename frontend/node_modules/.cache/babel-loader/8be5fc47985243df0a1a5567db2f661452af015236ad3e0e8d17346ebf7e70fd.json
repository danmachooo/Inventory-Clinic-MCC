{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nvar API_URL = 'http://localhost:5000';\nexport default {\n  __name: 'Reports',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var reportType = ref('monthly');\n    var selectedMonth = ref(new Date().toISOString().slice(0, 7));\n    var selectedYear = ref(new Date().getFullYear());\n    var availableYears = ref(Array.from({\n      length: 5\n    }, function (_, i) {\n      return new Date().getFullYear() - i;\n    }));\n    var reportData = ref([]);\n    var narrativeReport = ref('');\n    var isLoading = ref(false);\n    var error = ref(null);\n    var isGeneratingPDF = ref(false);\n    var reportTitle = computed(function () {\n      if (reportType.value === 'monthly') {\n        return new Date(selectedMonth.value).toLocaleString('default', {\n          month: 'long',\n          year: 'numeric'\n        });\n      } else {\n        return selectedYear.value.toString();\n      }\n    });\n    var fetchReport = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              isLoading.value = true;\n              error.value = null;\n              _context.prev = 2;\n              params = {\n                type: reportType.value,\n                year: reportType.value === 'yearly' ? selectedYear.value : selectedMonth.value.split('-')[0],\n                month: reportType.value === 'monthly' ? selectedMonth.value.split('-')[1] : undefined\n              };\n              _context.next = 6;\n              return axios.get(\"\".concat(API_URL, \"/api/inventory/report\"), {\n                params: params\n              });\n            case 6:\n              response = _context.sent;\n              reportData.value = response.data.data;\n              narrativeReport.value = generateNarrativeReport(reportData.value);\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Error fetching report:', _context.t0);\n              error.value = 'Failed to fetch report data. Please try again.';\n            case 15:\n              _context.prev = 15;\n              isLoading.value = false;\n              return _context.finish(15);\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 11, 15, 18]]);\n      }));\n      return function fetchReport() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var generateNarrativeReport = function generateNarrativeReport(data) {\n      var report = '<p>During this reporting period, the following key observations were made:</p>';\n      var totalItems = data.length;\n      var totalQuantity = data.reduce(function (sum, item) {\n        return sum + item.batchQuantity;\n      }, 0);\n      var totalDisbursed = data.reduce(function (sum, item) {\n        return sum + item.totalDisbursed;\n      }, 0);\n      var totalRemaining = data.reduce(function (sum, item) {\n        return sum + item.totalRemaining;\n      }, 0);\n      var lowStockItems = data.filter(function (item) {\n        return item.totalRemaining < item.batchQuantity * 0.2;\n      });\n      var expiredItems = data.filter(function (item) {\n        return item.totalRemaining === 0;\n      });\n      report += \"<p>The inventory consists of \".concat(totalItems, \" unique items, with a total initial quantity of \").concat(totalQuantity, \" units. \\n             \").concat(totalDisbursed, \" units have been disbursed, leaving a remaining stock of \").concat(totalRemaining, \" units.</p>\");\n      if (lowStockItems.length > 0) {\n        report += \"<p>\".concat(lowStockItems.length, \" item(s) are running low on stock (less than 20% remaining). \\n               These items may require restocking soon: \").concat(lowStockItems.map(function (item) {\n          return item.itemName;\n        }).join(', '), \".</p>\");\n      }\n      if (expiredItems.length > 0) {\n        report += \"<p>\".concat(expiredItems.length, \" item(s) have been fully depleted or expired: \\n               \").concat(expiredItems.map(function (item) {\n          return item.itemName;\n        }).join(', '), \". Consider reviewing these items for potential reordering.</p>\");\n      }\n      return report;\n    };\n    var downloadPDF = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var doc, splitNarrativeReport;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              isGeneratingPDF.value = true;\n              try {\n                doc = new jsPDF(); // Title\n                doc.setFontSize(18);\n                doc.text(\"Inventory Report for \".concat(reportTitle.value), 14, 20);\n\n                // Narrative Report\n                doc.setFontSize(12);\n                splitNarrativeReport = doc.splitTextToSize(narrativeReport.value.replace(/<[^>]+>/g, ''), 180);\n                doc.text(splitNarrativeReport, 14, 30);\n\n                // Inventory Items Table\n                doc.autoTable({\n                  startY: doc.lastAutoTable ? doc.lastAutoTable.finalY + 10 : 70,\n                  head: [['Item Name', 'Batch Name', 'Batch Quantity', 'Total Disbursed', 'Total Remaining']],\n                  body: reportData.value.map(function (item) {\n                    return [item.itemName, item.batchName, item.batchQuantity, item.totalDisbursed, item.totalRemaining];\n                  })\n                });\n\n                // Save the PDF\n                doc.save(\"Inventory_Report_\".concat(reportTitle.value.replace(' ', '_'), \".pdf\"));\n              } catch (err) {\n                console.error('Error generating PDF:', err);\n                error.value = 'Failed to generate PDF. Please try again.';\n              } finally {\n                isGeneratingPDF.value = false;\n              }\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function downloadPDF() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var printReport = function printReport() {\n      window.print();\n    };\n    onMounted(fetchReport);\n    var __returned__ = {\n      API_URL: API_URL,\n      reportType: reportType,\n      selectedMonth: selectedMonth,\n      selectedYear: selectedYear,\n      availableYears: availableYears,\n      reportData: reportData,\n      narrativeReport: narrativeReport,\n      isLoading: isLoading,\n      error: error,\n      isGeneratingPDF: isGeneratingPDF,\n      reportTitle: reportTitle,\n      fetchReport: fetchReport,\n      generateNarrativeReport: generateNarrativeReport,\n      downloadPDF: downloadPDF,\n      printReport: printReport,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted,\n      get axios() {\n        return axios;\n      },\n      get jsPDF() {\n        return jsPDF;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","jsPDF","API_URL","reportType","selectedMonth","Date","toISOString","slice","selectedYear","getFullYear","availableYears","Array","from","length","_","i","reportData","narrativeReport","isLoading","error","isGeneratingPDF","reportTitle","value","toLocaleString","month","year","toString","fetchReport","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","response","wrap","_callee$","_context","prev","next","type","split","undefined","get","concat","sent","data","generateNarrativeReport","t0","console","finish","stop","apply","arguments","report","totalItems","totalQuantity","reduce","sum","item","batchQuantity","totalDisbursed","totalRemaining","lowStockItems","filter","expiredItems","map","itemName","join","downloadPDF","_ref3","_callee2","doc","splitNarrativeReport","_callee2$","_context2","setFontSize","text","splitTextToSize","replace","autoTable","startY","lastAutoTable","finalY","head","body","batchName","save","err","printReport","window","print"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/Reports.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <h1 class=\"text-3xl font-bold text-gray-800 mb-6\">Inventory Reports</h1>\r\n\r\n    <!-- Report Type and Date Selection -->\r\n    <div class=\"mb-6 flex flex-wrap items-center gap-4\">\r\n      <div class=\"flex items-center\">\r\n        <label for=\"reportType\" class=\"mr-2 text-gray-700\">Report Type:</label>\r\n        <select\r\n          id=\"reportType\"\r\n          v-model=\"reportType\"\r\n          @change=\"fetchReport\"\r\n          class=\"border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option value=\"monthly\">Monthly</option>\r\n          <option value=\"yearly\">Yearly</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div v-if=\"reportType === 'monthly'\" class=\"flex items-center\">\r\n        <label for=\"monthYear\" class=\"mr-2 text-gray-700\">Select Month:</label>\r\n        <input\r\n          id=\"monthYear\"\r\n          v-model=\"selectedMonth\"\r\n          type=\"month\"\r\n          @change=\"fetchReport\"\r\n          class=\"border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n      </div>\r\n\r\n      <div v-else class=\"flex items-center\">\r\n        <label for=\"year\" class=\"mr-2 text-gray-700\">Select Year:</label>\r\n        <select\r\n          id=\"year\"\r\n          v-model=\"selectedYear\"\r\n          @change=\"fetchReport\"\r\n          class=\"border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">\r\n            {{ year }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"isLoading\" class=\"text-center py-8\">\r\n      <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto\"></div>\r\n      <p class=\"mt-4 text-gray-600\">Loading report data...</p>\r\n    </div>\r\n\r\n    <!-- Error Message -->\r\n    <div v-if=\"error\" class=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\" role=\"alert\">\r\n      <p class=\"font-bold\">Error</p>\r\n      <p>{{ error }}</p>\r\n    </div>\r\n\r\n    <!-- Report Content -->\r\n    <div v-if=\"!isLoading && !error\" class=\"print:block\">\r\n      <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n        Inventory Report for {{ reportTitle }}\r\n      </h2>\r\n\r\n      <!-- Narrative Report -->\r\n      <div class=\"mb-8 bg-gray-100 p-6 rounded-lg\">\r\n        <h3 class=\"text-xl font-semibold text-gray-700 mb-3\">Narrative Report</h3>\r\n        <div class=\"text-gray-700 prose\" v-html=\"narrativeReport\"></div>\r\n      </div>\r\n\r\n      <!-- Inventory Items Table -->\r\n      <div class=\"mb-8\">\r\n        <h3 class=\"text-xl font-semibold text-gray-700 mb-3\">Inventory Items</h3>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full bg-white border border-gray-300\">\r\n            <thead>\r\n              <tr class=\"bg-gray-100\">\r\n                <th class=\"py-2 px-4 border-b text-left\">Item Name</th>\r\n                <th class=\"py-2 px-4 border-b text-left\">Batch Name</th>\r\n                <th class=\"py-2 px-4 border-b text-right\">Batch Quantity</th>\r\n                <th class=\"py-2 px-4 border-b text-right\">Total Disbursed</th>\r\n                <th class=\"py-2 px-4 border-b text-right\">Total Remaining</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(item, index) in reportData\" :key=\"index\" class=\"hover:bg-gray-50\">\r\n                <td class=\"py-2 px-4 border-b\">{{ item.itemName }}</td>\r\n                <td class=\"py-2 px-4 border-b\">{{ item.batchName }}</td>\r\n                <td class=\"py-2 px-4 border-b text-right\">{{ item.batchQuantity }}</td>\r\n                <td class=\"py-2 px-4 border-b text-right\">{{ item.totalDisbursed }}</td>\r\n                <td class=\"py-2 px-4 border-b text-right\">{{ item.totalRemaining }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Action Buttons -->\r\n      <div class=\"mt-6 flex justify-center space-x-4 print:hidden\">\r\n        <button\r\n          @click=\"downloadPDF\"\r\n          class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          :disabled=\"isGeneratingPDF\"\r\n        >\r\n          {{ isGeneratingPDF ? 'Generating PDF...' : 'Download PDF Report' }}\r\n        </button>\r\n        <button\r\n          @click=\"printReport\"\r\n          class=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n        >\r\n          Print Report\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nconst reportType = ref('monthly');\r\nconst selectedMonth = ref(new Date().toISOString().slice(0, 7));\r\nconst selectedYear = ref(new Date().getFullYear());\r\nconst availableYears = ref(Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i));\r\n\r\nconst reportData = ref([]);\r\nconst narrativeReport = ref('');\r\nconst isLoading = ref(false);\r\nconst error = ref(null);\r\nconst isGeneratingPDF = ref(false);\r\n\r\nconst reportTitle = computed(() => {\r\n  if (reportType.value === 'monthly') {\r\n    return new Date(selectedMonth.value).toLocaleString('default', { month: 'long', year: 'numeric' });\r\n  } else {\r\n    return selectedYear.value.toString();\r\n  }\r\n});\r\n\r\nconst fetchReport = async () => {\r\n  isLoading.value = true;\r\n  error.value = null;\r\n\r\n  try {\r\n    const params = {\r\n      type: reportType.value,\r\n      year: reportType.value === 'yearly' ? selectedYear.value : selectedMonth.value.split('-')[0],\r\n      month: reportType.value === 'monthly' ? selectedMonth.value.split('-')[1] : undefined,\r\n    };\r\n\r\n    const response = await axios.get(`${API_URL}/api/inventory/report`, { params });\r\n    reportData.value = response.data.data;\r\n    narrativeReport.value = generateNarrativeReport(reportData.value);\r\n  } catch (err) {\r\n    console.error('Error fetching report:', err);\r\n    error.value = 'Failed to fetch report data. Please try again.';\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\nconst generateNarrativeReport = (data) => {\r\n  let report = '<p>During this reporting period, the following key observations were made:</p>';\r\n\r\n  const totalItems = data.length;\r\n  const totalQuantity = data.reduce((sum, item) => sum + item.batchQuantity, 0);\r\n  const totalDisbursed = data.reduce((sum, item) => sum + item.totalDisbursed, 0);\r\n  const totalRemaining = data.reduce((sum, item) => sum + item.totalRemaining, 0);\r\n\r\n  const lowStockItems = data.filter(item => item.totalRemaining < item.batchQuantity * 0.2);\r\n  const expiredItems = data.filter(item => item.totalRemaining === 0);\r\n\r\n  report += `<p>The inventory consists of ${totalItems} unique items, with a total initial quantity of ${totalQuantity} units. \r\n             ${totalDisbursed} units have been disbursed, leaving a remaining stock of ${totalRemaining} units.</p>`;\r\n\r\n  if (lowStockItems.length > 0) {\r\n    report += `<p>${lowStockItems.length} item(s) are running low on stock (less than 20% remaining). \r\n               These items may require restocking soon: ${lowStockItems.map(item => item.itemName).join(', ')}.</p>`;\r\n  }\r\n\r\n  if (expiredItems.length > 0) {\r\n    report += `<p>${expiredItems.length} item(s) have been fully depleted or expired: \r\n               ${expiredItems.map(item => item.itemName).join(', ')}. Consider reviewing these items for potential reordering.</p>`;\r\n  }\r\n\r\n  return report;\r\n};\r\n\r\nconst downloadPDF = async () => {\r\n  isGeneratingPDF.value = true;\r\n\r\n  try {\r\n    const doc = new jsPDF();\r\n\r\n    // Title\r\n    doc.setFontSize(18);\r\n    doc.text(`Inventory Report for ${reportTitle.value}`, 14, 20);\r\n\r\n    // Narrative Report\r\n    doc.setFontSize(12);\r\n    const splitNarrativeReport = doc.splitTextToSize(narrativeReport.value.replace(/<[^>]+>/g, ''), 180);\r\n    doc.text(splitNarrativeReport, 14, 30);\r\n\r\n    // Inventory Items Table\r\n    doc.autoTable({\r\n      startY: doc.lastAutoTable ? doc.lastAutoTable.finalY + 10 : 70,\r\n      head: [['Item Name', 'Batch Name', 'Batch Quantity', 'Total Disbursed', 'Total Remaining']],\r\n      body: reportData.value.map(item => [\r\n        item.itemName,\r\n        item.batchName,\r\n        item.batchQuantity,\r\n        item.totalDisbursed,\r\n        item.totalRemaining,\r\n      ]),\r\n    });\r\n\r\n    // Save the PDF\r\n    doc.save(`Inventory_Report_${reportTitle.value.replace(' ', '_')}.pdf`);\r\n  } catch (err) {\r\n    console.error('Error generating PDF:', err);\r\n    error.value = 'Failed to generate PDF. Please try again.';\r\n  } finally {\r\n    isGeneratingPDF.value = false;\r\n  }\r\n};\r\n\r\nconst printReport = () => {\r\n  window.print();\r\n};\r\n\r\nonMounted(fetchReport);\r\n</script>\r\n\r\n<style>\r\n@media print {\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n  .print\\\\:block, .print\\\\:block * {\r\n    visibility: visible;\r\n  }\r\n  .print\\\\:block {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}