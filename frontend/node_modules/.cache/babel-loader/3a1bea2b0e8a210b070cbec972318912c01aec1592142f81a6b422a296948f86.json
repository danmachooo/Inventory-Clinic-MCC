{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"min-h-screen flex items-center justify-center bg-gray-100\"\n};\nvar _hoisted_2 = {\n  \"class\": \"w-full max-w-md bg-white rounded-lg shadow-md p-6\"\n};\nvar _hoisted_3 = {\n  \"class\": \"mb-4\"\n};\nvar _hoisted_4 = {\n  \"class\": \"mb-4\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"text-red-500 text-center mt-4\"\n};\nvar _hoisted_6 = {\n  key: 1,\n  \"class\": \"text-green-500 text-center mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    \"class\": \"text-2xl font-bold text-gray-800 text-center mb-6\"\n  }, \"Set Your Password\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleSetPassword, [\"prevent\"])\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    \"for\": \"email\",\n    \"class\": \"block text-sm font-medium text-gray-700\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.email = $event;\n    }),\n    type: \"email\",\n    id: \"email\",\n    \"class\": \"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\",\n    placeholder: \"Enter your email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    \"for\": \"password\",\n    \"class\": \"block text-sm font-medium text-gray-700\"\n  }, \"New Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.password = $event;\n    }),\n    type: \"password\",\n    id: \"password\",\n    \"class\": \"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\",\n    placeholder: \"Enter new password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), _cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    \"class\": \"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring focus:ring-indigo-500 focus:ring-opacity-50\"\n  }, \" Set Password \", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.successMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($setup.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_withModifiers","$setup","handleSetPassword","_hoisted_3","_cache","$event","email","type","id","placeholder","required","_hoisted_4","password","errorMessage","_hoisted_5","_toDisplayString","_createCommentVNode","successMessage","_hoisted_6"],"sources":["C:\\Inventory-Clinic-MCC\\frontend\\src\\views\\SetPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div class=\"w-full max-w-md bg-white rounded-lg shadow-md p-6\">\r\n        <h2 class=\"text-2xl font-bold text-gray-800 text-center mb-6\">Set Your Password</h2>\r\n        <form @submit.prevent=\"handleSetPassword\">\r\n          <div class=\"mb-4\">\r\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              v-model=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">New Password</label>\r\n            <input\r\n              v-model=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"Enter new password\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring focus:ring-indigo-500 focus:ring-opacity-50\"\r\n          >\r\n            Set Password\r\n          </button>\r\n        </form>\r\n        <p v-if=\"errorMessage\" class=\"text-red-500 text-center mt-4\">{{ errorMessage }}</p>\r\n        <p v-if=\"successMessage\" class=\"text-green-500 text-center mt-4\">{{ successMessage }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onBeforeMount } from \"vue\";\r\n  import { useRouter } from \"vue-router\";\r\n  import axios from \"axios\";\r\n  \r\n  const email = ref(\"\");\r\n  const password = ref(\"\");\r\n  const errorMessage = ref(\"\");\r\n  const successMessage = ref(\"\");\r\n  const router = useRouter();\r\n  const hasAdmin = ref(false);\r\n  \r\n  const handleSetPassword = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/set-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: email.value, password: password.value }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (response.ok) {\r\n        successMessage.value = \"Password set successfully. Redirecting to login...\";\r\n        setTimeout(() => router.push(\"/login\"), 2000); // Redirect to login after 2s\r\n      } else {\r\n        errorMessage.value = data.error || \"Failed to set password.\";\r\n      }\r\n    } catch (error) {\r\n      errorMessage.value = \"An error occurred. Please try again.\";\r\n      console.error(\"Setting password failed:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAdmin = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/auth/has-admins');\r\n      hasAdmin.value = response.data.hasAdmins; // Check if the admin exists\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n    }\r\n  };\r\n  \r\n  // Check admin status before component is mounted\r\n  onBeforeMount(() => {\r\n    fetchAdmin();\r\n    if (!hasAdmin.value) { \r\n      router.push('/voucher-login'); \r\n    }\r\n  });\r\n  </script>\r\n  "],"mappings":";;EACS,SAAM;AAA2D;;EAC/D,SAAM;AAAmD;;EAGrD,SAAM;AAAM;;EAWZ,SAAM;AAAM;;EAhB3BA,GAAA;EAkC+B,SAAM;;;EAlCrCA,GAAA;EAmCiC,SAAM;;;uBAlCnCC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,CAkCM,OAlCNC,UAkCM,G,0BAjCJD,mBAAA,CAAoF;IAAhF,SAAM;EAAmD,GAAC,mBAAiB,sBAC/EA,mBAAA,CA6BO;IA7BAE,QAAM,EAJrBC,cAAA,CAI+BC,MAAA,CAAAC,iBAAiB;MACtCL,mBAAA,CAUM,OAVNM,UAUM,G,0BATJN,mBAAA,CAAgF;IAAzE,OAAI,OAAO;IAAC,SAAM;KAA0C,OAAK,sB,gBACxEA,mBAAA,CAOE;IAdd,uBAAAO,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAQuBJ,MAAA,CAAAK,KAAK,GAAAD,MAAA;IAAA;IACdE,IAAI,EAAC,OAAO;IACZC,EAAE,EAAC,OAAO;IACV,SAAM,2HAA2H;IACjIC,WAAW,EAAC,kBAAkB;IAC9BC,QAAQ,EAAR;iDALST,MAAA,CAAAK,KAAK,E,KAQlBT,mBAAA,CAUM,OAVNc,UAUM,G,0BATJd,mBAAA,CAA0F;IAAnF,OAAI,UAAU;IAAC,SAAM;KAA0C,cAAY,sB,gBAClFA,mBAAA,CAOE;IAzBd,uBAAAO,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAmBuBJ,MAAA,CAAAW,QAAQ,GAAAP,MAAA;IAAA;IACjBE,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IACb,SAAM,2HAA2H;IACjIC,WAAW,EAAC,oBAAoB;IAChCC,QAAQ,EAAR;iDALST,MAAA,CAAAW,QAAQ,E,+BAQrBf,mBAAA,CAKS;IAJPU,IAAI,EAAC,QAAQ;IACb,SAAM;KACP,gBAED,qB,4BAEON,MAAA,CAAAY,YAAY,I,cAArBlB,mBAAA,CAAmF,KAAnFmB,UAAmF,EAAAC,gBAAA,CAAnBd,MAAA,CAAAY,YAAY,oBAlCpFG,mBAAA,gBAmCiBf,MAAA,CAAAgB,cAAc,I,cAAvBtB,mBAAA,CAAyF,KAAzFuB,UAAyF,EAAAH,gBAAA,CAArBd,MAAA,CAAAgB,cAAc,oBAnC1FD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}