{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Lenovo Pc/OneDrive - Department of Education/Desktop/MCDL-MINSU-CLINIC/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Lenovo Pc/OneDrive - Department of Education/Desktop/MCDL-MINSU-CLINIC/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _typeof from \"C:/Users/Lenovo Pc/OneDrive - Department of Education/Desktop/MCDL-MINSU-CLINIC/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.reflect.set.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.self.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/*!\r\n * pinia v2.2.8\r\n * (c) 2024 Eduardo San Martin Morote\r\n * @license MIT\r\n */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\r\n * setActivePinia must be called to handle SSR at the top of functions like\r\n * `fetch`, `setup`, `serverPrefetch` and others\r\n */\nvar activePinia;\n/**\r\n * Sets or unsets the active pinia. Used in SSR and internally when calling\r\n * actions and getters\r\n *\r\n * @param pinia - Pinia instance\r\n */\n// @ts-expect-error: cannot constrain the type of the return\nvar setActivePinia = function setActivePinia(pinia) {\n  return activePinia = pinia;\n};\n/**\r\n * Get the currently active pinia if there is any.\r\n */\nvar getActivePinia = function getActivePinia() {\n  return hasInjectionContext() && inject(piniaSymbol) || activePinia;\n};\nvar piniaSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia') : /* istanbul ignore next */Symbol();\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n  return o && _typeof(o) === 'object' && Object.prototype.toString.call(o) === '[object Object]' && typeof o.toJSON !== 'function';\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\r\n * Possible types for SubscriptionCallback\r\n */\nvar MutationType;\n(function (MutationType) {\n  /**\r\n   * Direct mutation of the state:\r\n   *\r\n   * - `store.name = 'new name'`\r\n   * - `store.$state.name = 'new name'`\r\n   * - `store.list.push('new item')`\r\n   */\n  MutationType[\"direct\"] = \"direct\";\n  /**\r\n   * Mutated the state with `$patch` and an object\r\n   *\r\n   * - `store.$patch({ name: 'newName' })`\r\n   */\n  MutationType[\"patchObject\"] = \"patch object\";\n  /**\r\n   * Mutated the state with `$patch` and a function\r\n   *\r\n   * - `store.$patch(state => state.name = 'newName')`\r\n   */\n  MutationType[\"patchFunction\"] = \"patch function\";\n  // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\nvar IS_CLIENT = typeof window !== 'undefined';\n\n/*\r\n * FileSaver.js A saveAs() FileSaver implementation.\r\n *\r\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\r\n * Morote.\r\n *\r\n * License : MIT\r\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = /*#__PURE__*/function () {\n  return (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window.window === window ? window : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self.self === self ? self : (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === 'object' && global.global === global ? global : (typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis)) === 'object' ? globalThis : {\n    HTMLElement: null\n  };\n}();\nfunction bom(blob) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$autoBom = _ref.autoBom,\n    autoBom = _ref$autoBom === void 0 ? false : _ref$autoBom;\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xfeff), blob], {\n      type: blob.type\n    });\n  }\n  return blob;\n}\nfunction download(url, name, opts) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts);\n  };\n  xhr.onerror = function () {\n    console.error('could not download file');\n  };\n  xhr.send();\n}\nfunction corsEnabled(url) {\n  var xhr = new XMLHttpRequest();\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false);\n  try {\n    xhr.send();\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'));\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n    node.dispatchEvent(evt);\n  }\n}\nvar _navigator = (typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === 'object' ? navigator : {\n  userAgent: ''\n};\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = /*#__PURE__*/function () {\n  return /Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent);\n}();\nvar saveAs = !IS_CLIENT ? function () {} // noop\n:\n// Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\ntypeof HTMLAnchorElement !== 'undefined' && 'download' in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs :\n// Use msSaveOrOpenBlob as a second approach\n'msSaveOrOpenBlob' in _navigator ? msSaveAs :\n// Fallback to using FileReader and a popup\nfileSaverSaveAs;\nfunction downloadSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n  var a = document.createElement('a');\n  a.download = name;\n  a.rel = 'noopener'; // tabnabbing\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob;\n    if (a.origin !== location.origin) {\n      if (corsEnabled(a.href)) {\n        download(blob, name, opts);\n      } else {\n        a.target = '_blank';\n        click(a);\n      }\n    } else {\n      click(a);\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob);\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 4e4); // 40s\n    setTimeout(function () {\n      click(a);\n    }, 0);\n  }\n}\nfunction msSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts);\n    } else {\n      var a = document.createElement('a');\n      a.href = blob;\n      a.target = '_blank';\n      setTimeout(function () {\n        click(a);\n      });\n    }\n  } else {\n    // @ts-ignore: works on windows\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n  }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank');\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...';\n  }\n  if (typeof blob === 'string') return download(blob, name, opts);\n  var force = blob.type === 'application/octet-stream';\n  var isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n  var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n  if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== 'undefined') {\n    // Safari doesn't allow downloading of blob URLs\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      var url = reader.result;\n      if (typeof url !== 'string') {\n        popup = null;\n        throw new Error('Wrong reader.result type');\n      }\n      url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n      if (popup) {\n        popup.location.href = url;\n      } else {\n        location.assign(url);\n      }\n      popup = null; // reverse-tabnabbing #460\n    };\n    reader.readAsDataURL(blob);\n  } else {\n    var url = URL.createObjectURL(blob);\n    if (popup) popup.location.assign(url);else location.href = url;\n    popup = null; // reverse-tabnabbing #460\n    setTimeout(function () {\n      URL.revokeObjectURL(url);\n    }, 4e4); // 40s\n  }\n}\n\n/**\r\n * Shows a toast or console.log\r\n *\r\n * @param message - message to log\r\n * @param type - different color of the tooltip\r\n */\nfunction toastMessage(message, type) {\n  var piniaMessage = '🍍 ' + message;\n  if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n    // No longer available :(\n    __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n  } else if (type === 'error') {\n    console.error(piniaMessage);\n  } else if (type === 'warn') {\n    console.warn(piniaMessage);\n  } else {\n    console.log(piniaMessage);\n  }\n}\nfunction isPinia(o) {\n  return '_a' in o && 'install' in o;\n}\n\n/**\r\n * This file contain devtools actions, they are not Pinia actions.\r\n */\n// ---\nfunction checkClipboardAccess() {\n  if (!('clipboard' in navigator)) {\n    toastMessage(\"Your browser doesn't support the Clipboard API\", 'error');\n    return true;\n  }\n}\nfunction checkNotFocusedError(error) {\n  if (error instanceof Error && error.message.toLowerCase().includes('document is not focused')) {\n    toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n    return true;\n  }\n  return false;\n}\nfunction actionGlobalCopyState(_x) {\n  return _actionGlobalCopyState.apply(this, arguments);\n}\nfunction _actionGlobalCopyState() {\n  _actionGlobalCopyState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(pinia) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!checkClipboardAccess()) {\n            _context4.next = 2;\n            break;\n          }\n          return _context4.abrupt(\"return\");\n        case 2:\n          _context4.prev = 2;\n          _context4.next = 5;\n          return navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        case 5:\n          toastMessage('Global state copied to clipboard.');\n          _context4.next = 14;\n          break;\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](2);\n          if (!checkNotFocusedError(_context4.t0)) {\n            _context4.next = 12;\n            break;\n          }\n          return _context4.abrupt(\"return\");\n        case 12:\n          toastMessage(\"Failed to serialize the state. Check the console for more details.\", 'error');\n          console.error(_context4.t0);\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n  return _actionGlobalCopyState.apply(this, arguments);\n}\nfunction actionGlobalPasteState(_x2) {\n  return _actionGlobalPasteState.apply(this, arguments);\n}\nfunction _actionGlobalPasteState() {\n  _actionGlobalPasteState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(pinia) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!checkClipboardAccess()) {\n            _context5.next = 2;\n            break;\n          }\n          return _context5.abrupt(\"return\");\n        case 2:\n          _context5.prev = 2;\n          _context5.t0 = loadStoresState;\n          _context5.t1 = pinia;\n          _context5.t2 = JSON;\n          _context5.next = 8;\n          return navigator.clipboard.readText();\n        case 8:\n          _context5.t3 = _context5.sent;\n          _context5.t4 = _context5.t2.parse.call(_context5.t2, _context5.t3);\n          (0, _context5.t0)(_context5.t1, _context5.t4);\n          toastMessage('Global state pasted from clipboard.');\n          _context5.next = 20;\n          break;\n        case 14:\n          _context5.prev = 14;\n          _context5.t5 = _context5[\"catch\"](2);\n          if (!checkNotFocusedError(_context5.t5)) {\n            _context5.next = 18;\n            break;\n          }\n          return _context5.abrupt(\"return\");\n        case 18:\n          toastMessage(\"Failed to deserialize the state from clipboard. Check the console for more details.\", 'error');\n          console.error(_context5.t5);\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[2, 14]]);\n  }));\n  return _actionGlobalPasteState.apply(this, arguments);\n}\nfunction actionGlobalSaveState(_x3) {\n  return _actionGlobalSaveState.apply(this, arguments);\n}\nfunction _actionGlobalSaveState() {\n  _actionGlobalSaveState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(pinia) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          try {\n            saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n              type: 'text/plain;charset=utf-8'\n            }), 'pinia-state.json');\n          } catch (error) {\n            toastMessage(\"Failed to export the state as JSON. Check the console for more details.\", 'error');\n            console.error(error);\n          }\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _actionGlobalSaveState.apply(this, arguments);\n}\nvar fileInput;\nfunction getFileOpener() {\n  if (!fileInput) {\n    fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.json';\n  }\n  function openFile() {\n    return new Promise(function (resolve, reject) {\n      fileInput.onchange = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var files, file;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              files = fileInput.files;\n              if (files) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", resolve(null));\n            case 3:\n              file = files.item(0);\n              if (file) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", resolve(null));\n            case 6:\n              _context.t0 = resolve;\n              _context.next = 9;\n              return file.text();\n            case 9:\n              _context.t1 = _context.sent;\n              _context.t2 = file;\n              _context.t3 = {\n                text: _context.t1,\n                file: _context.t2\n              };\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t3));\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      // @ts-ignore: TODO: changed from 4.3 to 4.4\n      fileInput.oncancel = function () {\n        return resolve(null);\n      };\n      fileInput.onerror = reject;\n      fileInput.click();\n    });\n  }\n  return openFile;\n}\nfunction actionGlobalOpenStateFile(_x4) {\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\nfunction _actionGlobalOpenStateFile() {\n  _actionGlobalOpenStateFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(pinia) {\n    var _open, result, text, file;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _open = getFileOpener();\n          _context7.next = 4;\n          return _open();\n        case 4:\n          result = _context7.sent;\n          if (result) {\n            _context7.next = 7;\n            break;\n          }\n          return _context7.abrupt(\"return\");\n        case 7:\n          text = result.text, file = result.file;\n          loadStoresState(pinia, JSON.parse(text));\n          toastMessage(\"Global state imported from \\\"\".concat(file.name, \"\\\".\"));\n          _context7.next = 16;\n          break;\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          toastMessage(\"Failed to import the state from JSON. Check the console for more details.\", 'error');\n          console.error(_context7.t0);\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[0, 12]]);\n  }));\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\nfunction loadStoresState(pinia, state) {\n  for (var key in state) {\n    var storeState = pinia.state.value[key];\n    // store is already instantiated, patch it\n    if (storeState) {\n      Object.assign(storeState, state[key]);\n    } else {\n      // store is not instantiated, set the initial state\n      pinia.state.value[key] = state[key];\n    }\n  }\n}\nfunction formatDisplay(display) {\n  return {\n    _custom: {\n      display: display\n    }\n  };\n}\nvar PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nvar PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n  return isPinia(store) ? {\n    id: PINIA_ROOT_ID,\n    label: PINIA_ROOT_LABEL\n  } : {\n    id: store.$id,\n    label: store.$id\n  };\n}\nfunction formatStoreForInspectorState(store) {\n  if (isPinia(store)) {\n    var storeNames = Array.from(store._s.keys());\n    var storeMap = store._s;\n    var _state = {\n      state: storeNames.map(function (storeId) {\n        return {\n          editable: true,\n          key: storeId,\n          value: store.state.value[storeId]\n        };\n      }),\n      getters: storeNames.filter(function (id) {\n        return storeMap.get(id)._getters;\n      }).map(function (id) {\n        var store = storeMap.get(id);\n        return {\n          editable: false,\n          key: id,\n          value: store._getters.reduce(function (getters, key) {\n            getters[key] = store[key];\n            return getters;\n          }, {})\n        };\n      })\n    };\n    return _state;\n  }\n  var state = {\n    state: Object.keys(store.$state).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store.$state[key]\n      };\n    })\n  };\n  // avoid adding empty getters\n  if (store._getters && store._getters.length) {\n    state.getters = store._getters.map(function (getterName) {\n      return {\n        editable: false,\n        key: getterName,\n        value: store[getterName]\n      };\n    });\n  }\n  if (store._customProperties.size) {\n    state.customProperties = Array.from(store._customProperties).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store[key]\n      };\n    });\n  }\n  return state;\n}\nfunction formatEventData(events) {\n  if (!events) return {};\n  if (Array.isArray(events)) {\n    // TODO: handle add and delete for arrays and objects\n    return events.reduce(function (data, event) {\n      data.keys.push(event.key);\n      data.operations.push(event.type);\n      data.oldValue[event.key] = event.oldValue;\n      data.newValue[event.key] = event.newValue;\n      return data;\n    }, {\n      oldValue: {},\n      keys: [],\n      operations: [],\n      newValue: {}\n    });\n  } else {\n    return {\n      operation: formatDisplay(events.type),\n      key: formatDisplay(events.key),\n      oldValue: events.oldValue,\n      newValue: events.newValue\n    };\n  }\n}\nfunction formatMutationType(type) {\n  switch (type) {\n    case MutationType.direct:\n      return 'mutation';\n    case MutationType.patchFunction:\n      return '$patch';\n    case MutationType.patchObject:\n      return '$patch';\n    default:\n      return 'unknown';\n  }\n}\n\n// timeline can be paused when directly changing the state\nvar isTimelineActive = true;\nvar componentStateTypes = [];\nvar MUTATIONS_LAYER_ID = 'pinia:mutations';\nvar INSPECTOR_ID = 'pinia';\nvar assign$1 = Object.assign;\n/**\r\n * Gets the displayed name of a store in devtools\r\n *\r\n * @param id - id of the store\r\n * @returns a formatted string\r\n */\nvar getStoreType = function getStoreType(id) {\n  return '🍍 ' + id;\n};\n/**\r\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\r\n * as soon as it is added to the application.\r\n *\r\n * @param app - Vue application\r\n * @param pinia - pinia instance\r\n */\nfunction registerPiniaDevtools(app, pinia) {\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app\n  }, function (api) {\n    if (typeof api.now !== 'function') {\n      toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n    }\n    api.addTimelineLayer({\n      id: MUTATIONS_LAYER_ID,\n      label: \"Pinia \\uD83C\\uDF4D\",\n      color: 0xe5df88\n    });\n    api.addInspector({\n      id: INSPECTOR_ID,\n      label: 'Pinia 🍍',\n      icon: 'storage',\n      treeFilterPlaceholder: 'Search stores',\n      actions: [{\n        icon: 'content_copy',\n        action: function action() {\n          actionGlobalCopyState(pinia);\n        },\n        tooltip: 'Serialize and copy the state'\n      }, {\n        icon: 'content_paste',\n        action: function () {\n          var _action = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return actionGlobalPasteState(pinia);\n                case 2:\n                  api.sendInspectorTree(INSPECTOR_ID);\n                  api.sendInspectorState(INSPECTOR_ID);\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          function action() {\n            return _action.apply(this, arguments);\n          }\n          return action;\n        }(),\n        tooltip: 'Replace the state with the content of your clipboard'\n      }, {\n        icon: 'save',\n        action: function action() {\n          actionGlobalSaveState(pinia);\n        },\n        tooltip: 'Save the state as a JSON file'\n      }, {\n        icon: 'folder_open',\n        action: function () {\n          var _action2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return actionGlobalOpenStateFile(pinia);\n                case 2:\n                  api.sendInspectorTree(INSPECTOR_ID);\n                  api.sendInspectorState(INSPECTOR_ID);\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }));\n          function action() {\n            return _action2.apply(this, arguments);\n          }\n          return action;\n        }(),\n        tooltip: 'Import the state from a JSON file'\n      }],\n      nodeActions: [{\n        icon: 'restore',\n        tooltip: 'Reset the state (with \"$reset\")',\n        action: function action(nodeId) {\n          var store = pinia._s.get(nodeId);\n          if (!store) {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it wasn't found.\"), 'warn');\n          } else if (typeof store.$reset !== 'function') {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it doesn't have a \\\"$reset\\\" method implemented.\"), 'warn');\n          } else {\n            store.$reset();\n            toastMessage(\"Store \\\"\".concat(nodeId, \"\\\" reset.\"));\n          }\n        }\n      }]\n    });\n    api.on.inspectComponent(function (payload, ctx) {\n      var proxy = payload.componentInstance && payload.componentInstance.proxy;\n      if (proxy && proxy._pStores) {\n        var piniaStores = payload.componentInstance.proxy._pStores;\n        Object.values(piniaStores).forEach(function (store) {\n          payload.instanceData.state.push({\n            type: getStoreType(store.$id),\n            key: 'state',\n            editable: true,\n            value: store._isOptionsAPI ? {\n              _custom: {\n                value: toRaw(store.$state),\n                actions: [{\n                  icon: 'restore',\n                  tooltip: 'Reset the state of this store',\n                  action: function action() {\n                    return store.$reset();\n                  }\n                }]\n              }\n            } :\n            // NOTE: workaround to unwrap transferred refs\n            Object.keys(store.$state).reduce(function (state, key) {\n              state[key] = store.$state[key];\n              return state;\n            }, {})\n          });\n          if (store._getters && store._getters.length) {\n            payload.instanceData.state.push({\n              type: getStoreType(store.$id),\n              key: 'getters',\n              editable: false,\n              value: store._getters.reduce(function (getters, key) {\n                try {\n                  getters[key] = store[key];\n                } catch (error) {\n                  // @ts-expect-error: we just want to show it in devtools\n                  getters[key] = error;\n                }\n                return getters;\n              }, {})\n            });\n          }\n        });\n      }\n    });\n    api.on.getInspectorTree(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var stores = [pinia];\n        stores = stores.concat(Array.from(pinia._s.values()));\n        payload.rootNodes = (payload.filter ? stores.filter(function (store) {\n          return '$id' in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase());\n        }) : stores).map(formatStoreForInspectorTree);\n      }\n    });\n    // Expose pinia instance as $pinia to window\n    globalThis.$pinia = pinia;\n    api.on.getInspectorState(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n        if (!inspectedStore) {\n          // this could be the selected store restored for a different project\n          // so it's better not to say anything here\n          return;\n        }\n        if (inspectedStore) {\n          // Expose selected store as $store to window\n          if (payload.nodeId !== PINIA_ROOT_ID) globalThis.$store = toRaw(inspectedStore);\n          payload.state = formatStoreForInspectorState(inspectedStore);\n        }\n      }\n    });\n    api.on.editInspectorState(function (payload, ctx) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n        if (!inspectedStore) {\n          return toastMessage(\"store \\\"\".concat(payload.nodeId, \"\\\" not found\"), 'error');\n        }\n        var path = payload.path;\n        if (!isPinia(inspectedStore)) {\n          // access only the state\n          if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) {\n            path.unshift('$state');\n          }\n        } else {\n          // Root access, we can omit the `.value` because the devtools API does it for us\n          path.unshift('state');\n        }\n        isTimelineActive = false;\n        payload.set(inspectedStore, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n    api.on.editComponentState(function (payload) {\n      if (payload.type.startsWith('🍍')) {\n        var storeId = payload.type.replace(/^🍍\\s*/, '');\n        var store = pinia._s.get(storeId);\n        if (!store) {\n          return toastMessage(\"store \\\"\".concat(storeId, \"\\\" not found\"), 'error');\n        }\n        var path = payload.path;\n        if (path[0] !== 'state') {\n          return toastMessage(\"Invalid path for store \\\"\".concat(storeId, \"\\\":\\n\").concat(path, \"\\nOnly state can be modified.\"));\n        }\n        // rewrite the first entry to be able to directly set the state as\n        // well as any other path\n        path[0] = '$state';\n        isTimelineActive = false;\n        payload.set(store, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n  });\n}\nfunction addStoreToDevtools(app, store) {\n  if (!componentStateTypes.includes(getStoreType(store.$id))) {\n    componentStateTypes.push(getStoreType(store.$id));\n  }\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app,\n    settings: {\n      logStoreChanges: {\n        label: 'Notify about new/deleted stores',\n        type: 'boolean',\n        defaultValue: true\n      }\n      // useEmojis: {\n      //   label: 'Use emojis in messages ⚡️',\n      //   type: 'boolean',\n      //   defaultValue: true,\n      // },\n    }\n  }, function (api) {\n    // gracefully handle errors\n    var now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n    store.$onAction(function (_ref2) {\n      var after = _ref2.after,\n        onError = _ref2.onError,\n        name = _ref2.name,\n        args = _ref2.args;\n      var groupId = runningActionId++;\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🛫 ' + name,\n          subtitle: 'start',\n          data: {\n            store: formatDisplay(store.$id),\n            action: formatDisplay(name),\n            args: args\n          },\n          groupId: groupId\n        }\n      });\n      after(function (result) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: '🛬 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              result: result\n            },\n            groupId: groupId\n          }\n        });\n      });\n      onError(function (error) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            logType: 'error',\n            title: '💥 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              error: error\n            },\n            groupId: groupId\n          }\n        });\n      });\n    }, true);\n    store._customProperties.forEach(function (name) {\n      watch(function () {\n        return unref(store[name]);\n      }, function (newValue, oldValue) {\n        api.notifyComponentUpdate();\n        api.sendInspectorState(INSPECTOR_ID);\n        if (isTimelineActive) {\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              title: 'Change',\n              subtitle: name,\n              data: {\n                newValue: newValue,\n                oldValue: oldValue\n              },\n              groupId: activeAction\n            }\n          });\n        }\n      }, {\n        deep: true\n      });\n    });\n    store.$subscribe(function (_ref3, state) {\n      var events = _ref3.events,\n        type = _ref3.type;\n      api.notifyComponentUpdate();\n      api.sendInspectorState(INSPECTOR_ID);\n      if (!isTimelineActive) return;\n      // rootStore.state[store.id] = state\n      var eventData = {\n        time: now(),\n        title: formatMutationType(type),\n        data: assign$1({\n          store: formatDisplay(store.$id)\n        }, formatEventData(events)),\n        groupId: activeAction\n      };\n      if (type === MutationType.patchFunction) {\n        eventData.subtitle = '⤵️';\n      } else if (type === MutationType.patchObject) {\n        eventData.subtitle = '🧩';\n      } else if (events && !Array.isArray(events)) {\n        eventData.subtitle = events.type;\n      }\n      if (events) {\n        eventData.data['rawEvent(s)'] = {\n          _custom: {\n            display: 'DebuggerEvent',\n            type: 'object',\n            tooltip: 'raw DebuggerEvent[]',\n            value: events\n          }\n        };\n      }\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: eventData\n      });\n    }, {\n      detached: true,\n      flush: 'sync'\n    });\n    var hotUpdate = store._hotUpdate;\n    store._hotUpdate = markRaw(function (newStore) {\n      hotUpdate(newStore);\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🔥 ' + store.$id,\n          subtitle: 'HMR update',\n          data: {\n            store: formatDisplay(store.$id),\n            info: formatDisplay(\"HMR update\")\n          }\n        }\n      });\n      // update the devtools too\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n    });\n    var $dispose = store.$dispose;\n    store.$dispose = function () {\n      $dispose();\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n      api.getSettings().logStoreChanges && toastMessage(\"Disposed \\\"\".concat(store.$id, \"\\\" store \\uD83D\\uDDD1\"));\n    };\n    // trigger an update so it can display new registered stores\n    api.notifyComponentUpdate();\n    api.sendInspectorTree(INSPECTOR_ID);\n    api.sendInspectorState(INSPECTOR_ID);\n    api.getSettings().logStoreChanges && toastMessage(\"\\\"\".concat(store.$id, \"\\\" store installed \\uD83C\\uDD95\"));\n  });\n}\nvar runningActionId = 0;\nvar activeAction;\n/**\r\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\r\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\r\n * mutation to the action.\r\n *\r\n * @param store - store to patch\r\n * @param actionNames - list of actionst to patch\r\n */\nfunction patchActionForGrouping(store, actionNames, wrapWithProxy) {\n  // original actions of the store as they are given by pinia. We are going to override them\n  var actions = actionNames.reduce(function (storeActions, actionName) {\n    // use toRaw to avoid tracking #541\n    storeActions[actionName] = toRaw(store)[actionName];\n    return storeActions;\n  }, {});\n  var _loop = function _loop(actionName) {\n    store[actionName] = function () {\n      // the running action id is incremented in a before action hook\n      var _actionId = runningActionId;\n      var trackedStore = wrapWithProxy ? new Proxy(store, {\n        get: function get() {\n          activeAction = _actionId;\n          return Reflect.get.apply(Reflect, arguments);\n        },\n        set: function set() {\n          activeAction = _actionId;\n          return Reflect.set.apply(Reflect, arguments);\n        }\n      }) : store;\n      // For Setup Stores we need https://github.com/tc39/proposal-async-context\n      activeAction = _actionId;\n      var retValue = actions[actionName].apply(trackedStore, arguments);\n      // this is safer as async actions in Setup Stores would associate mutations done outside of the action\n      activeAction = undefined;\n      return retValue;\n    };\n  };\n  for (var actionName in actions) {\n    _loop(actionName);\n  }\n}\n/**\r\n * pinia.use(devtoolsPlugin)\r\n */\nfunction devtoolsPlugin(_ref4) {\n  var app = _ref4.app,\n    store = _ref4.store,\n    options = _ref4.options;\n  // HMR module\n  if (store.$id.startsWith('__hot:')) {\n    return;\n  }\n  // detect option api vs setup api\n  store._isOptionsAPI = !!options.state;\n  // Do not overwrite actions mocked by @pinia/testing (#2298)\n  if (!store._p._testing) {\n    patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);\n    // Upgrade the HMR to also update the new actions\n    var originalHotUpdate = store._hotUpdate;\n    toRaw(store)._hotUpdate = function (newStore) {\n      originalHotUpdate.apply(this, arguments);\n      patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);\n    };\n  }\n  addStoreToDevtools(app,\n  // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n  store);\n}\n\n/**\r\n * Creates a Pinia instance to be used by the application\r\n */\nfunction createPinia() {\n  var scope = effectScope(true);\n  // NOTE: here we could check the window object for a state and directly set it\n  // if there is anything like it with Vue 3 SSR\n  var state = scope.run(function () {\n    return ref({});\n  });\n  var _p = [];\n  // plugins added before calling app.use(pinia)\n  var toBeInstalled = [];\n  var pinia = markRaw({\n    install: function install(app) {\n      // this allows calling useStore() outside of a component setup after\n      // installing pinia's plugin\n      setActivePinia(pinia);\n      if (!isVue2) {\n        pinia._a = app;\n        app.provide(piniaSymbol, pinia);\n        app.config.globalProperties.$pinia = pinia;\n        /* istanbul ignore else */\n        if ((process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT) {\n          registerPiniaDevtools(app, pinia);\n        }\n        toBeInstalled.forEach(function (plugin) {\n          return _p.push(plugin);\n        });\n        toBeInstalled = [];\n      }\n    },\n    use: function use(plugin) {\n      if (!this._a && !isVue2) {\n        toBeInstalled.push(plugin);\n      } else {\n        _p.push(plugin);\n      }\n      return this;\n    },\n    _p: _p,\n    // it's actually undefined here\n    // @ts-expect-error\n    _a: null,\n    _e: scope,\n    _s: new Map(),\n    state: state\n  });\n  // pinia devtools rely on dev only features so they cannot be forced unless\n  // the dev build of Vue is used. Avoid old browsers like IE11.\n  if ((process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT && typeof Proxy !== 'undefined') {\n    pinia.use(devtoolsPlugin);\n  }\n  return pinia;\n}\n/**\r\n * Dispose a Pinia instance by stopping its effectScope and removing the state, plugins and stores. This is mostly\r\n * useful in tests, with both a testing pinia or a regular pinia and in applications that use multiple pinia instances.\r\n * Once disposed, the pinia instance cannot be used anymore.\r\n *\r\n * @param pinia - pinia instance\r\n */\nfunction disposePinia(pinia) {\n  pinia._e.stop();\n  pinia._s.clear();\n  pinia._p.splice(0);\n  pinia.state.value = {};\n  // @ts-expect-error: non valid\n  pinia._a = null;\n}\n\n/**\r\n * Checks if a function is a `StoreDefinition`.\r\n *\r\n * @param fn - object to test\r\n * @returns true if `fn` is a StoreDefinition\r\n */\nvar isUseStore = function isUseStore(fn) {\n  return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\r\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\r\n * remove any key not existing in `newState` and recursively merge plain\r\n * objects.\r\n *\r\n * @param newState - new state object to be patched\r\n * @param oldState - old state that should be used to patch newState\r\n * @returns - newState\r\n */\nfunction patchObject(newState, oldState) {\n  // no need to go through symbols because they cannot be serialized anyway\n  for (var key in oldState) {\n    var subPatch = oldState[key];\n    // skip the whole sub tree\n    if (!(key in newState)) {\n      continue;\n    }\n    var targetValue = newState[key];\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && !isRef(subPatch) && !isReactive(subPatch)) {\n      newState[key] = patchObject(targetValue, subPatch);\n    } else {\n      // objects are either a bit more complex (e.g. refs) or primitives, so we\n      // just set the whole thing\n      if (isVue2) {\n        set(newState, key, subPatch);\n      } else {\n        newState[key] = subPatch;\n      }\n    }\n  }\n  return newState;\n}\n/**\r\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\r\n *\r\n * @example\r\n * ```js\r\n * const useUser = defineStore(...)\r\n * if (import.meta.hot) {\r\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\r\n * }\r\n * ```\r\n *\r\n * @param initialUseStore - return of the defineStore to hot update\r\n * @param hot - `import.meta.hot`\r\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n  // strip as much as possible from iife.prod\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return function () {};\n  }\n  return function (newModule) {\n    var pinia = hot.data.pinia || initialUseStore._pinia;\n    if (!pinia) {\n      // this store is still not used\n      return;\n    }\n    // preserve the pinia instance across loads\n    hot.data.pinia = pinia;\n    // console.log('got data', newStore)\n    for (var exportName in newModule) {\n      var useStore = newModule[exportName];\n      // console.log('checking for', exportName)\n      if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n        // console.log('Accepting update for', useStore.$id)\n        var id = useStore.$id;\n        if (id !== initialUseStore.$id) {\n          console.warn(\"The id of the store changed from \\\"\".concat(initialUseStore.$id, \"\\\" to \\\"\").concat(id, \"\\\". Reloading.\"));\n          // return import.meta.hot.invalidate()\n          return hot.invalidate();\n        }\n        var existingStore = pinia._s.get(id);\n        if (!existingStore) {\n          console.log(\"[Pinia]: skipping hmr because store doesn't exist yet\");\n          return;\n        }\n        useStore(pinia, existingStore);\n      }\n    }\n  };\n}\nvar noop = function noop() {};\nfunction addSubscription(subscriptions, callback, detached) {\n  var onCleanup = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  subscriptions.push(callback);\n  var removeSubscription = function removeSubscription() {\n    var idx = subscriptions.indexOf(callback);\n    if (idx > -1) {\n      subscriptions.splice(idx, 1);\n      onCleanup();\n    }\n  };\n  if (!detached && getCurrentScope()) {\n    onScopeDispose(removeSubscription);\n  }\n  return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  subscriptions.slice().forEach(function (callback) {\n    callback.apply(void 0, args);\n  });\n}\nvar fallbackRunWithContext = function fallbackRunWithContext(fn) {\n  return fn();\n};\n/**\r\n * Marks a function as an action for `$onAction`\r\n * @internal\r\n */\nvar ACTION_MARKER = Symbol();\n/**\r\n * Action name symbol. Allows to add a name to an action after defining it\r\n * @internal\r\n */\nvar ACTION_NAME = Symbol();\nfunction mergeReactiveObjects(target, patchToApply) {\n  // Handle Map instances\n  if (target instanceof Map && patchToApply instanceof Map) {\n    patchToApply.forEach(function (value, key) {\n      return target.set(key, value);\n    });\n  } else if (target instanceof Set && patchToApply instanceof Set) {\n    // Handle Set instances\n    patchToApply.forEach(target.add, target);\n  }\n  // no need to go through symbols because they cannot be serialized anyway\n  for (var key in patchToApply) {\n    if (!patchToApply.hasOwnProperty(key)) continue;\n    var subPatch = patchToApply[key];\n    var targetValue = target[key];\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !isRef(subPatch) && !isReactive(subPatch)) {\n      // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n      // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n      // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n      target[key] = mergeReactiveObjects(targetValue, subPatch);\n    } else {\n      // @ts-expect-error: subPatch is a valid value\n      target[key] = subPatch;\n    }\n  }\n  return target;\n}\nvar skipHydrateSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia:skipHydration') : /* istanbul ignore next */Symbol();\nvar skipHydrateMap = /*#__PURE__*/new WeakMap();\n/**\r\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\r\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\r\n *\r\n * @param obj - target object\r\n * @returns obj\r\n */\nfunction skipHydrate(obj) {\n  return isVue2 ?\n  // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n  /* istanbul ignore next */\n  skipHydrateMap.set(obj, 1) && obj : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\r\n * Returns whether a value should be hydrated\r\n *\r\n * @param obj - target variable\r\n * @returns true if `obj` should be hydrated\r\n */\nfunction shouldHydrate(obj) {\n  return isVue2 ? /* istanbul ignore next */!skipHydrateMap.has(obj) : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nvar assign = Object.assign;\nfunction isComputed(o) {\n  return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n  var state = options.state,\n    actions = options.actions,\n    getters = options.getters;\n  var initialState = pinia.state.value[id];\n  var store;\n  function setup() {\n    if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(pinia.state.value, id, state ? state() : {});\n      } else {\n        pinia.state.value[id] = state ? state() : {};\n      }\n    }\n    // avoid creating a state in pinia.state.value\n    var localState = process.env.NODE_ENV !== 'production' && hot ?\n    // use ref() to unwrap refs inside state TODO: check if this is still necessary\n    toRefs(ref(state ? state() : {}).value) : toRefs(pinia.state.value[id]);\n    return assign(localState, actions, Object.keys(getters || {}).reduce(function (computedGetters, name) {\n      if (process.env.NODE_ENV !== 'production' && name in localState) {\n        console.warn(\"[\\uD83C\\uDF4D]: A getter cannot have the same name as another state property. Rename one of them. Found with \\\"\".concat(name, \"\\\" in store \\\"\").concat(id, \"\\\".\"));\n      }\n      computedGetters[name] = markRaw(computed(function () {\n        setActivePinia(pinia);\n        // it was created just before\n        var store = pinia._s.get(id);\n        // allow cross using stores\n        /* istanbul ignore if */\n        if (isVue2 && !store._r) return;\n        // @ts-expect-error\n        // return getters![name].call(context, context)\n        // TODO: avoid reading the getter while assigning with a global variable\n        return getters[name].call(store, store);\n      }));\n      return computedGetters;\n    }, {}));\n  }\n  store = createSetupStore(id, setup, options, pinia, hot, true);\n  return store;\n}\nfunction createSetupStore($id, setup) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var pinia = arguments.length > 3 ? arguments[3] : undefined;\n  var hot = arguments.length > 4 ? arguments[4] : undefined;\n  var isOptionsStore = arguments.length > 5 ? arguments[5] : undefined;\n  var scope;\n  var optionsForPlugin = assign({\n    actions: {}\n  }, options);\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && !pinia._e.active) {\n    throw new Error('Pinia destroyed');\n  }\n  // watcher options for $subscribe\n  var $subscribeOptions = {\n    deep: true\n  };\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production' && !isVue2) {\n    $subscribeOptions.onTrigger = function (event) {\n      /* istanbul ignore else */\n      if (isListening) {\n        debuggerEvents = event;\n        // avoid triggering this while the store is being built and the state is being set in pinia\n      } else if (isListening == false && !store._hotUpdating) {\n        // let patch send all the events together later\n        /* istanbul ignore else */\n        if (Array.isArray(debuggerEvents)) {\n          debuggerEvents.push(event);\n        } else {\n          console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n        }\n      }\n    };\n  }\n  // internal state\n  var isListening; // set to true at the end\n  var isSyncListening; // set to true at the end\n  var subscriptions = [];\n  var actionSubscriptions = [];\n  var debuggerEvents;\n  var initialState = pinia.state.value[$id];\n  // avoid setting the state for option stores if it is set\n  // by the setup\n  if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n    /* istanbul ignore if */\n    if (isVue2) {\n      set(pinia.state.value, $id, {});\n    } else {\n      pinia.state.value[$id] = {};\n    }\n  }\n  var hotState = ref({});\n  // avoid triggering too many listeners\n  // https://github.com/vuejs/pinia/issues/1129\n  var activeListener;\n  function $patch(partialStateOrMutator) {\n    var subscriptionMutation;\n    isListening = isSyncListening = false;\n    // reset the debugger events since patches are sync\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      debuggerEvents = [];\n    }\n    if (typeof partialStateOrMutator === 'function') {\n      partialStateOrMutator(pinia.state.value[$id]);\n      subscriptionMutation = {\n        type: MutationType.patchFunction,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    } else {\n      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n      subscriptionMutation = {\n        type: MutationType.patchObject,\n        payload: partialStateOrMutator,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    }\n    var myListenerId = activeListener = Symbol();\n    nextTick().then(function () {\n      if (activeListener === myListenerId) {\n        isListening = true;\n      }\n    });\n    isSyncListening = true;\n    // because we paused the watcher, we need to manually call the subscriptions\n    triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n  }\n  var $reset = isOptionsStore ? function $reset() {\n    var state = options.state;\n    var newState = state ? state() : {};\n    // we use a patch to group all changes into one single subscription\n    this.$patch(function ($state) {\n      // @ts-expect-error: FIXME: shouldn't error?\n      assign($state, newState);\n    });\n  } : /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' ? function () {\n    throw new Error(\"\\uD83C\\uDF4D: Store \\\"\".concat($id, \"\\\" is built using the setup syntax and does not implement $reset().\"));\n  } : noop;\n  function $dispose() {\n    scope.stop();\n    subscriptions = [];\n    actionSubscriptions = [];\n    pinia._s[\"delete\"]($id);\n  }\n  /**\r\n   * Helper that wraps function so it can be tracked with $onAction\r\n   * @param fn - action to wrap\r\n   * @param name - name of the action\r\n   */\n  var action = function action(fn) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (ACTION_MARKER in fn) {\n      fn[ACTION_NAME] = name;\n      return fn;\n    }\n    var _wrappedAction = function wrappedAction() {\n      setActivePinia(pinia);\n      var args = Array.from(arguments);\n      var afterCallbackList = [];\n      var onErrorCallbackList = [];\n      function after(callback) {\n        afterCallbackList.push(callback);\n      }\n      function onError(callback) {\n        onErrorCallbackList.push(callback);\n      }\n      // @ts-expect-error\n      triggerSubscriptions(actionSubscriptions, {\n        args: args,\n        name: _wrappedAction[ACTION_NAME],\n        store: store,\n        after: after,\n        onError: onError\n      });\n      var ret;\n      try {\n        ret = fn.apply(this && this.$id === $id ? this : store, args);\n        // handle sync errors\n      } catch (error) {\n        triggerSubscriptions(onErrorCallbackList, error);\n        throw error;\n      }\n      if (ret instanceof Promise) {\n        return ret.then(function (value) {\n          triggerSubscriptions(afterCallbackList, value);\n          return value;\n        })[\"catch\"](function (error) {\n          triggerSubscriptions(onErrorCallbackList, error);\n          return Promise.reject(error);\n        });\n      }\n      // trigger after callbacks\n      triggerSubscriptions(afterCallbackList, ret);\n      return ret;\n    };\n    _wrappedAction[ACTION_MARKER] = true;\n    _wrappedAction[ACTION_NAME] = name; // will be set later\n    // @ts-expect-error: we are intentionally limiting the returned type to just Fn\n    // because all the added properties are internals that are exposed through `$onAction()` only\n    return _wrappedAction;\n  };\n  var _hmrPayload = /*#__PURE__*/markRaw({\n    actions: {},\n    getters: {},\n    state: [],\n    hotState: hotState\n  });\n  var partialStore = {\n    _p: pinia,\n    // _s: scope,\n    $id: $id,\n    $onAction: addSubscription.bind(null, actionSubscriptions),\n    $patch: $patch,\n    $reset: $reset,\n    $subscribe: function $subscribe(callback) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var removeSubscription = addSubscription(subscriptions, callback, options.detached, function () {\n        return stopWatcher();\n      });\n      var stopWatcher = scope.run(function () {\n        return watch(function () {\n          return pinia.state.value[$id];\n        }, function (state) {\n          if (options.flush === 'sync' ? isSyncListening : isListening) {\n            callback({\n              storeId: $id,\n              type: MutationType.direct,\n              events: debuggerEvents\n            }, state);\n          }\n        }, assign({}, $subscribeOptions, options));\n      });\n      return removeSubscription;\n    },\n    $dispose: $dispose\n  };\n  /* istanbul ignore if */\n  if (isVue2) {\n    // start as non ready\n    partialStore._r = false;\n  }\n  var store = reactive(process.env.NODE_ENV !== 'production' || (process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT ? assign({\n    _hmrPayload: _hmrPayload,\n    _customProperties: markRaw(new Set()) // devtools custom properties\n  }, partialStore\n  // must be added later\n  // setupStore\n  ) : partialStore);\n  // store the partial store now so the setup of stores can instantiate each other before they are finished without\n  // creating infinite loops.\n  pinia._s.set($id, store);\n  var runWithContext = pinia._a && pinia._a.runWithContext || fallbackRunWithContext;\n  // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n  var setupStore = runWithContext(function () {\n    return pinia._e.run(function () {\n      return (scope = effectScope()).run(function () {\n        return setup({\n          action: action\n        });\n      });\n    });\n  });\n  // overwrite existing actions to support $onAction\n  for (var key in setupStore) {\n    var prop = setupStore[key];\n    if (isRef(prop) && !isComputed(prop) || isReactive(prop)) {\n      // mark it as a piece of state to be serialized\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        set(hotState.value, key, toRef(setupStore, key));\n        // createOptionStore directly sets the state in pinia.state.value so we\n        // can just skip that\n      } else if (!isOptionsStore) {\n        // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n        if (initialState && shouldHydrate(prop)) {\n          if (isRef(prop)) {\n            prop.value = initialState[key];\n          } else {\n            // probably a reactive object, lets recursively assign\n            // @ts-expect-error: prop is unknown\n            mergeReactiveObjects(prop, initialState[key]);\n          }\n        }\n        // transfer the ref to the pinia state to keep everything in sync\n        /* istanbul ignore if */\n        if (isVue2) {\n          set(pinia.state.value[$id], key, prop);\n        } else {\n          pinia.state.value[$id][key] = prop;\n        }\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.state.push(key);\n      }\n      // action\n    } else if (typeof prop === 'function') {\n      var actionValue = process.env.NODE_ENV !== 'production' && hot ? prop : action(prop, key);\n      // this a hot module replacement store because the hotUpdate method needs\n      // to do it with the right context\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(setupStore, key, actionValue);\n      } else {\n        // @ts-expect-error\n        setupStore[key] = actionValue;\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.actions[key] = prop;\n      }\n      // list actions so they can be used in plugins\n      // @ts-expect-error\n      optionsForPlugin.actions[key] = prop;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // add getters for devtools\n      if (isComputed(prop)) {\n        _hmrPayload.getters[key] = isOptionsStore ?\n        // @ts-expect-error\n        options.getters[key] : prop;\n        if (IS_CLIENT) {\n          var getters = setupStore._getters || (\n          // @ts-expect-error: same\n          setupStore._getters = markRaw([]));\n          getters.push(key);\n        }\n      }\n    }\n  }\n  // add the state, getters, and action properties\n  /* istanbul ignore if */\n  if (isVue2) {\n    Object.keys(setupStore).forEach(function (key) {\n      set(store, key, setupStore[key]);\n    });\n  } else {\n    assign(store, setupStore);\n    // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n    // Make `storeToRefs()` work with `reactive()` #799\n    assign(toRaw(store), setupStore);\n  }\n  // use this instead of a computed with setter to be able to create it anywhere\n  // without linking the computed lifespan to wherever the store is first\n  // created.\n  Object.defineProperty(store, '$state', {\n    get: function get() {\n      return process.env.NODE_ENV !== 'production' && hot ? hotState.value : pinia.state.value[$id];\n    },\n    set: function set(state) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        throw new Error('cannot set hotState');\n      }\n      $patch(function ($state) {\n        // @ts-expect-error: FIXME: shouldn't error?\n        assign($state, state);\n      });\n    }\n  });\n  // add the hotUpdate before plugins to allow them to override it\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    store._hotUpdate = markRaw(function (newStore) {\n      store._hotUpdating = true;\n      newStore._hmrPayload.state.forEach(function (stateKey) {\n        if (stateKey in store.$state) {\n          var newStateTarget = newStore.$state[stateKey];\n          var oldStateSource = store.$state[stateKey];\n          if (_typeof(newStateTarget) === 'object' && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {\n            patchObject(newStateTarget, oldStateSource);\n          } else {\n            // transfer the ref\n            newStore.$state[stateKey] = oldStateSource;\n          }\n        }\n        // patch direct access properties to allow store.stateProperty to work as\n        // store.$state.stateProperty\n        set(store, stateKey, toRef(newStore.$state, stateKey));\n      });\n      // remove deleted state properties\n      Object.keys(store.$state).forEach(function (stateKey) {\n        if (!(stateKey in newStore.$state)) {\n          del(store, stateKey);\n        }\n      });\n      // avoid devtools logging this as a mutation\n      isListening = false;\n      isSyncListening = false;\n      pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n      isSyncListening = true;\n      nextTick().then(function () {\n        isListening = true;\n      });\n      for (var actionName in newStore._hmrPayload.actions) {\n        var actionFn = newStore[actionName];\n        set(store, actionName, action(actionFn, actionName));\n      }\n      // TODO: does this work in both setup and option store?\n      var _loop2 = function _loop2() {\n        var getter = newStore._hmrPayload.getters[getterName];\n        var getterValue = isOptionsStore ?\n        // special handling of options api\n        computed(function () {\n          setActivePinia(pinia);\n          return getter.call(store, store);\n        }) : getter;\n        set(store, getterName, getterValue);\n      };\n      for (var getterName in newStore._hmrPayload.getters) {\n        _loop2();\n      }\n      // remove deleted getters\n      Object.keys(store._hmrPayload.getters).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.getters)) {\n          del(store, key);\n        }\n      });\n      // remove old actions\n      Object.keys(store._hmrPayload.actions).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.actions)) {\n          del(store, key);\n        }\n      });\n      // update the values used in devtools and to allow deleting new properties later on\n      store._hmrPayload = newStore._hmrPayload;\n      store._getters = newStore._getters;\n      store._hotUpdating = false;\n    });\n  }\n  if ((process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT) {\n    var nonEnumerable = {\n      writable: true,\n      configurable: true,\n      // avoid warning on devtools trying to display this property\n      enumerable: false\n    };\n    ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach(function (p) {\n      Object.defineProperty(store, p, assign({\n        value: store[p]\n      }, nonEnumerable));\n    });\n  }\n  /* istanbul ignore if */\n  if (isVue2) {\n    // mark the store as ready before plugins\n    store._r = true;\n  }\n  // apply all plugins\n  pinia._p.forEach(function (extender) {\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT) {\n      var extensions = scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      });\n      Object.keys(extensions || {}).forEach(function (key) {\n        return store._customProperties.add(key);\n      });\n      assign(store, extensions);\n    } else {\n      assign(store, scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      }));\n    }\n  });\n  if (process.env.NODE_ENV !== 'production' && store.$state && _typeof(store.$state) === 'object' && typeof store.$state.constructor === 'function' && !store.$state.constructor.toString().includes('[native code]')) {\n    console.warn(\"[\\uD83C\\uDF4D]: The \\\"state\\\" must be a plain object. It cannot be\\n\" + \"\\tstate: () => new MyClass()\\n\" + \"Found in store \\\"\".concat(store.$id, \"\\\".\"));\n  }\n  // only apply hydrate to option stores with an initial state in pinia\n  if (initialState && isOptionsStore && options.hydrate) {\n    options.hydrate(store.$state, initialState);\n  }\n  isListening = true;\n  isSyncListening = true;\n  return store;\n}\n// allows unused stores to be tree shaken\n/*! #__NO_SIDE_EFFECTS__ */\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n  var id;\n  var options;\n  var isSetupStore = typeof setup === 'function';\n  if (typeof idOrOptions === 'string') {\n    id = idOrOptions;\n    // the option store setup will contain the actual options in this case\n    options = isSetupStore ? setupOptions : setup;\n  } else {\n    options = idOrOptions;\n    id = idOrOptions.id;\n    if (process.env.NODE_ENV !== 'production' && typeof id !== 'string') {\n      throw new Error(\"[\\uD83C\\uDF4D]: \\\"defineStore()\\\" must be passed a store id as its first argument.\");\n    }\n  }\n  function useStore(pinia, hot) {\n    var hasContext = hasInjectionContext();\n    pinia =\n    // in test mode, ignore the argument provided as we can always retrieve a\n    // pinia instance with getActivePinia()\n    (process.env.NODE_ENV === 'test' && activePinia && activePinia._testing ? null : pinia) || (hasContext ? inject(piniaSymbol, null) : null);\n    if (pinia) setActivePinia(pinia);\n    if (process.env.NODE_ENV !== 'production' && !activePinia) {\n      throw new Error(\"[\\uD83C\\uDF4D]: \\\"getActivePinia()\\\" was called but there was no active Pinia. Are you trying to use a store before calling \\\"app.use(pinia)\\\"?\\n\" + \"See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.\\n\" + \"This will fail in production.\");\n    }\n    pinia = activePinia;\n    if (!pinia._s.has(id)) {\n      // creating the store registers it in `pinia._s`\n      if (isSetupStore) {\n        createSetupStore(id, setup, options, pinia);\n      } else {\n        createOptionsStore(id, options, pinia);\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        // @ts-expect-error: not the right inferred type\n        useStore._pinia = pinia;\n      }\n    }\n    var store = pinia._s.get(id);\n    if (process.env.NODE_ENV !== 'production' && hot) {\n      var hotId = '__hot:' + id;\n      var newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);\n      hot._hotUpdate(newStore);\n      // cleanup the state properties and the store from the cache\n      delete pinia.state.value[hotId];\n      pinia._s[\"delete\"](hotId);\n    }\n    if (process.env.NODE_ENV !== 'production' && IS_CLIENT) {\n      var currentInstance = getCurrentInstance();\n      // save stores in instances to access them devtools\n      if (currentInstance && currentInstance.proxy &&\n      // avoid adding stores that are just built for hot module replacement\n      !hot) {\n        var vm = currentInstance.proxy;\n        var cache = '_pStores' in vm ? vm._pStores : vm._pStores = {};\n        cache[id] = store;\n      }\n    }\n    // StoreGeneric cannot be casted towards Store\n    return store;\n  }\n  useStore.$id = id;\n  return useStore;\n}\nvar mapStoreSuffix = 'Store';\n/**\r\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\r\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\r\n * interface if you are using TypeScript.\r\n *\r\n * @param suffix - new suffix\r\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n  mapStoreSuffix = suffix;\n}\n/**\r\n * Allows using stores without the composition API (`setup()`) by generating an\r\n * object to be spread in the `computed` field of a component. It accepts a list\r\n * of store definitions.\r\n *\r\n * @example\r\n * ```js\r\n * export default {\r\n *   computed: {\r\n *     // other computed properties\r\n *     ...mapStores(useUserStore, useCartStore)\r\n *   },\r\n *\r\n *   created() {\r\n *     this.userStore // store with id \"user\"\r\n *     this.cartStore // store with id \"cart\"\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @param stores - list of stores to map to an object\r\n */\nfunction mapStores() {\n  for (var _len2 = arguments.length, stores = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    stores[_key2] = arguments[_key2];\n  }\n  if (process.env.NODE_ENV !== 'production' && Array.isArray(stores[0])) {\n    console.warn(\"[\\uD83C\\uDF4D]: Directly pass all stores to \\\"mapStores()\\\" without putting them in an array:\\n\" + \"Replace\\n\" + \"\\tmapStores([useAuthStore, useCartStore])\\n\" + \"with\\n\" + \"\\tmapStores(useAuthStore, useCartStore)\\n\" + \"This will fail in production if not fixed.\");\n    stores = stores[0];\n  }\n  return stores.reduce(function (reduced, useStore) {\n    // @ts-expect-error: $id is added by defineStore\n    reduced[useStore.$id + mapStoreSuffix] = function () {\n      return useStore(this.$pinia);\n    };\n    return reduced;\n  }, {});\n}\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\nfunction mapState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    reduced[key] = function () {\n      // @ts-expect-error: FIXME: should work?\n      return useStore(this.$pinia)[key];\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var store = useStore(this.$pinia);\n      var storeKey = keysOrMapper[key];\n      // for some reason TS is unable to infer the type of storeKey to be a\n      // function\n      return typeof storeKey === 'function' ? storeKey.call(this, store) :\n      // @ts-expect-error: FIXME: should work?\n      store[storeKey];\n    };\n    return reduced;\n  }, {});\n}\n/**\r\n * Alias for `mapState()`. You should use `mapState()` instead.\r\n * @deprecated use `mapState()` instead.\r\n */\nvar mapGetters = mapState;\n/**\r\n * Allows directly using actions from your store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `methods` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\nfunction mapActions(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore;\n      // @ts-expect-error: FIXME: should work?\n      return (_useStore = useStore(this.$pinia))[key].apply(_useStore, arguments);\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore2;\n      // @ts-expect-error: FIXME: should work?\n      return (_useStore2 = useStore(this.$pinia))[keysOrMapper[key]].apply(_useStore2, arguments);\n    };\n    return reduced;\n  }, {});\n}\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        // @ts-expect-error: FIXME: should work?\n        return useStore(this.$pinia)[key];\n      },\n      set: function set(value) {\n        // @ts-expect-error: FIXME: should work?\n        return useStore(this.$pinia)[key] = value;\n      }\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        // @ts-expect-error: FIXME: should work?\n        return useStore(this.$pinia)[keysOrMapper[key]];\n      },\n      set: function set(value) {\n        // @ts-expect-error: FIXME: should work?\n        return useStore(this.$pinia)[keysOrMapper[key]] = value;\n      }\n    };\n    return reduced;\n  }, {});\n}\n\n/**\r\n * Creates an object of references with all the state, getters, and plugin-added\r\n * state properties of the store. Similar to `toRefs()` but specifically\r\n * designed for Pinia stores so methods and non reactive properties are\r\n * completely ignored.\r\n *\r\n * @param store - store to extract the refs from\r\n */\nfunction storeToRefs(store) {\n  // See https://github.com/vuejs/pinia/issues/852\n  // It's easier to just use toRefs() even if it includes more stuff\n  if (isVue2) {\n    // @ts-expect-error: toRefs include methods and others\n    return toRefs(store);\n  } else {\n    var rawStore = toRaw(store);\n    var refs = {};\n    var _loop3 = function _loop3(key) {\n      var value = rawStore[key];\n      // There is no native method to check for a computed\n      // https://github.com/vuejs/core/pull/4165\n      if (value.effect) {\n        // @ts-expect-error: too hard to type correctly\n        refs[key] =\n        // ...\n        computed({\n          get: function get() {\n            return store[key];\n          },\n          set: function set(value) {\n            store[key] = value;\n          }\n        });\n      } else if (isRef(value) || isReactive(value)) {\n        // @ts-expect-error: the key is state or getter\n        refs[key] =\n        // ---\n        toRef(store, key);\n      }\n    };\n    for (var key in rawStore) {\n      _loop3(key);\n    }\n    return refs;\n  }\n}\n\n/**\r\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\r\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\r\n * https://pinia.vuejs.org/ssr/nuxt.html.\r\n *\r\n * @example\r\n * ```js\r\n * import Vue from 'vue'\r\n * import { PiniaVuePlugin, createPinia } from 'pinia'\r\n *\r\n * Vue.use(PiniaVuePlugin)\r\n * const pinia = createPinia()\r\n *\r\n * new Vue({\r\n *   el: '#app',\r\n *   // ...\r\n *   pinia,\r\n * })\r\n * ```\r\n *\r\n * @param _Vue - `Vue` imported from 'vue'.\r\n */\nvar PiniaVuePlugin = function PiniaVuePlugin(_Vue) {\n  // Equivalent of\n  // app.config.globalProperties.$pinia = pinia\n  _Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      var options = this.$options;\n      if (options.pinia) {\n        var pinia = options.pinia;\n        // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n        /* istanbul ignore else */\n        if (!this._provided) {\n          var provideCache = {};\n          Object.defineProperty(this, '_provided', {\n            get: function get() {\n              return provideCache;\n            },\n            set: function set(v) {\n              return Object.assign(provideCache, v);\n            }\n          });\n        }\n        this._provided[piniaSymbol] = pinia;\n        // propagate the pinia instance in an SSR friendly way\n        // avoid adding it to nuxt twice\n        /* istanbul ignore else */\n        if (!this.$pinia) {\n          this.$pinia = pinia;\n        }\n        pinia._a = this;\n        if (IS_CLIENT) {\n          // this allows calling useStore() outside of a component setup after\n          // installing pinia's plugin\n          setActivePinia(pinia);\n        }\n        if ((process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT) {\n          registerPiniaDevtools(pinia._a, pinia);\n        }\n      } else if (!this.$pinia && options.parent && options.parent.$pinia) {\n        this.$pinia = options.parent.$pinia;\n      }\n    },\n    destroyed: function destroyed() {\n      delete this._pStores;\n    }\n  });\n};\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, disposePinia, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, shouldHydrate, skipHydrate, storeToRefs };","map":{"version":3,"names":["hasInjectionContext","inject","toRaw","watch","unref","markRaw","effectScope","ref","isVue2","isRef","isReactive","set","getCurrentScope","onScopeDispose","getCurrentInstance","reactive","toRef","del","nextTick","computed","toRefs","setupDevtoolsPlugin","activePinia","setActivePinia","pinia","getActivePinia","piniaSymbol","process","env","NODE_ENV","Symbol","isPlainObject","o","_typeof","Object","prototype","toString","call","toJSON","MutationType","IS_CLIENT","window","_global","self","global","globalThis","HTMLElement","bom","blob","_ref","arguments","length","undefined","_ref$autoBom","autoBom","test","type","Blob","String","fromCharCode","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","_navigator","navigator","userAgent","isMacOSWebView","HTMLAnchorElement","downloadSaveAs","msSaveAs","fileSaverSaveAs","a","createElement","rel","href","origin","location","target","URL","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","isChromeIOS","FileReader","reader","onloadend","result","Error","replace","assign","readAsDataURL","toastMessage","message","piniaMessage","__VUE_DEVTOOLS_TOAST__","warn","log","isPinia","checkClipboardAccess","checkNotFocusedError","toLowerCase","includes","actionGlobalCopyState","_x","_actionGlobalCopyState","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","wrap","_callee4$","_context4","prev","next","abrupt","clipboard","writeText","JSON","stringify","state","value","t0","stop","actionGlobalPasteState","_x2","_actionGlobalPasteState","_callee5","_callee5$","_context5","loadStoresState","t1","t2","readText","t3","sent","t4","parse","t5","actionGlobalSaveState","_x3","_actionGlobalSaveState","_callee6","_callee6$","_context6","fileInput","getFileOpener","accept","openFile","Promise","resolve","reject","onchange","_callee","files","file","_callee$","_context","item","text","oncancel","actionGlobalOpenStateFile","_x4","_actionGlobalOpenStateFile","_callee7","_open","_callee7$","_context7","concat","key","storeState","formatDisplay","display","_custom","PINIA_ROOT_LABEL","PINIA_ROOT_ID","formatStoreForInspectorTree","store","id","label","$id","formatStoreForInspectorState","storeNames","Array","from","_s","keys","storeMap","map","storeId","editable","getters","filter","get","_getters","reduce","$state","getterName","_customProperties","size","customProperties","formatEventData","events","isArray","data","event","push","operations","oldValue","newValue","operation","formatMutationType","direct","patchFunction","patchObject","isTimelineActive","componentStateTypes","MUTATIONS_LAYER_ID","INSPECTOR_ID","assign$1","getStoreType","registerPiniaDevtools","app","logo","packageName","homepage","api","now","addTimelineLayer","color","addInspector","icon","treeFilterPlaceholder","actions","action","tooltip","_action","_callee2","_callee2$","_context2","sendInspectorTree","sendInspectorState","_action2","_callee3","_callee3$","_context3","nodeActions","nodeId","$reset","on","inspectComponent","payload","ctx","proxy","componentInstance","_pStores","piniaStores","values","forEach","instanceData","_isOptionsAPI","getInspectorTree","inspectorId","stores","rootNodes","$pinia","getInspectorState","inspectedStore","$store","editInspectorState","path","has","unshift","editComponentState","startsWith","addStoreToDevtools","settings","logStoreChanges","defaultValue","bind","Date","$onAction","_ref2","after","onError","args","groupId","runningActionId","addTimelineEvent","layerId","time","subtitle","activeAction","logType","notifyComponentUpdate","deep","$subscribe","_ref3","eventData","detached","flush","hotUpdate","_hotUpdate","newStore","info","$dispose","getSettings","patchActionForGrouping","actionNames","wrapWithProxy","storeActions","actionName","_loop","_actionId","trackedStore","Proxy","Reflect","retValue","devtoolsPlugin","_ref4","options","_p","_testing","originalHotUpdate","_hmrPayload","createPinia","scope","run","toBeInstalled","install","_a","provide","config","globalProperties","__VUE_PROD_DEVTOOLS__","plugin","use","_e","Map","disposePinia","clear","splice","isUseStore","fn","newState","oldState","subPatch","targetValue","acceptHMRUpdate","initialUseStore","hot","newModule","_pinia","exportName","useStore","invalidate","existingStore","noop","addSubscription","subscriptions","callback","onCleanup","removeSubscription","idx","indexOf","triggerSubscriptions","_len","_key","slice","fallbackRunWithContext","ACTION_MARKER","ACTION_NAME","mergeReactiveObjects","patchToApply","Set","add","hasOwnProperty","skipHydrateSymbol","skipHydrateMap","WeakMap","skipHydrate","obj","defineProperty","shouldHydrate","isComputed","effect","createOptionsStore","initialState","setup","localState","computedGetters","_r","createSetupStore","isOptionsStore","optionsForPlugin","active","$subscribeOptions","onTrigger","isListening","debuggerEvents","_hotUpdating","isSyncListening","actionSubscriptions","hotState","activeListener","$patch","partialStateOrMutator","subscriptionMutation","myListenerId","then","wrappedAction","afterCallbackList","onErrorCallbackList","ret","partialStore","stopWatcher","runWithContext","setupStore","prop","actionValue","stateKey","newStateTarget","oldStateSource","actionFn","_loop2","getter","getterValue","nonEnumerable","writable","configurable","enumerable","p","extender","extensions","constructor","hydrate","defineStore","idOrOptions","setupOptions","isSetupStore","hasContext","hotId","currentInstance","vm","cache","mapStoreSuffix","setMapStoreSuffix","suffix","mapStores","_len2","_key2","reduced","mapState","keysOrMapper","storeKey","mapGetters","mapActions","_useStore","_useStore2","mapWritableState","storeToRefs","rawStore","refs","_loop3","PiniaVuePlugin","_Vue","mixin","beforeCreate","$options","_provided","provideCache","v","parent","destroyed"],"sources":["C:/Users/Lenovo Pc/OneDrive - Department of Education/Desktop/MCDL-MINSU-CLINIC/Inventory-Clinic-MCC/frontend/node_modules/pinia/dist/pinia.mjs"],"sourcesContent":["/*!\r\n * pinia v2.2.8\r\n * (c) 2024 Eduardo San Martin Morote\r\n * @license MIT\r\n */\r\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\r\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\r\n\r\n/**\r\n * setActivePinia must be called to handle SSR at the top of functions like\r\n * `fetch`, `setup`, `serverPrefetch` and others\r\n */\r\nlet activePinia;\r\n/**\r\n * Sets or unsets the active pinia. Used in SSR and internally when calling\r\n * actions and getters\r\n *\r\n * @param pinia - Pinia instance\r\n */\r\n// @ts-expect-error: cannot constrain the type of the return\r\nconst setActivePinia = (pinia) => (activePinia = pinia);\r\n/**\r\n * Get the currently active pinia if there is any.\r\n */\r\nconst getActivePinia = () => (hasInjectionContext() && inject(piniaSymbol)) || activePinia;\r\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\r\n\r\nfunction isPlainObject(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no) {\r\n    return (o &&\r\n        typeof o === 'object' &&\r\n        Object.prototype.toString.call(o) === '[object Object]' &&\r\n        typeof o.toJSON !== 'function');\r\n}\r\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\r\n// TODO: can we change these to numbers?\r\n/**\r\n * Possible types for SubscriptionCallback\r\n */\r\nvar MutationType;\r\n(function (MutationType) {\r\n    /**\r\n     * Direct mutation of the state:\r\n     *\r\n     * - `store.name = 'new name'`\r\n     * - `store.$state.name = 'new name'`\r\n     * - `store.list.push('new item')`\r\n     */\r\n    MutationType[\"direct\"] = \"direct\";\r\n    /**\r\n     * Mutated the state with `$patch` and an object\r\n     *\r\n     * - `store.$patch({ name: 'newName' })`\r\n     */\r\n    MutationType[\"patchObject\"] = \"patch object\";\r\n    /**\r\n     * Mutated the state with `$patch` and a function\r\n     *\r\n     * - `store.$patch(state => state.name = 'newName')`\r\n     */\r\n    MutationType[\"patchFunction\"] = \"patch function\";\r\n    // maybe reset? for $state = {} and $reset\r\n})(MutationType || (MutationType = {}));\r\n\r\nconst IS_CLIENT = typeof window !== 'undefined';\r\n\r\n/*\r\n * FileSaver.js A saveAs() FileSaver implementation.\r\n *\r\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\r\n * Morote.\r\n *\r\n * License : MIT\r\n */\r\n// The one and only way of getting global scope in all environments\r\n// https://stackoverflow.com/q/3277182/1008999\r\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\r\n    ? window\r\n    : typeof self === 'object' && self.self === self\r\n        ? self\r\n        : typeof global === 'object' && global.global === global\r\n            ? global\r\n            : typeof globalThis === 'object'\r\n                ? globalThis\r\n                : { HTMLElement: null })();\r\nfunction bom(blob, { autoBom = false } = {}) {\r\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n    if (autoBom &&\r\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\r\n    }\r\n    return blob;\r\n}\r\nfunction download(url, name, opts) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url);\r\n    xhr.responseType = 'blob';\r\n    xhr.onload = function () {\r\n        saveAs(xhr.response, name, opts);\r\n    };\r\n    xhr.onerror = function () {\r\n        console.error('could not download file');\r\n    };\r\n    xhr.send();\r\n}\r\nfunction corsEnabled(url) {\r\n    const xhr = new XMLHttpRequest();\r\n    // use sync to avoid popup blocker\r\n    xhr.open('HEAD', url, false);\r\n    try {\r\n        xhr.send();\r\n    }\r\n    catch (e) { }\r\n    return xhr.status >= 200 && xhr.status <= 299;\r\n}\r\n// `a.click()` doesn't work for all browsers (#465)\r\nfunction click(node) {\r\n    try {\r\n        node.dispatchEvent(new MouseEvent('click'));\r\n    }\r\n    catch (e) {\r\n        const evt = document.createEvent('MouseEvents');\r\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\r\n        node.dispatchEvent(evt);\r\n    }\r\n}\r\nconst _navigator = typeof navigator === 'object' ? navigator : { userAgent: '' };\r\n// Detect WebView inside a native macOS app by ruling out all browsers\r\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\r\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\r\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\r\n    /AppleWebKit/.test(_navigator.userAgent) &&\r\n    !/Safari/.test(_navigator.userAgent))();\r\nconst saveAs = !IS_CLIENT\r\n    ? () => { } // noop\r\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\r\n        typeof HTMLAnchorElement !== 'undefined' &&\r\n            'download' in HTMLAnchorElement.prototype &&\r\n            !isMacOSWebView\r\n            ? downloadSaveAs\r\n            : // Use msSaveOrOpenBlob as a second approach\r\n                'msSaveOrOpenBlob' in _navigator\r\n                    ? msSaveAs\r\n                    : // Fallback to using FileReader and a popup\r\n                        fileSaverSaveAs;\r\nfunction downloadSaveAs(blob, name = 'download', opts) {\r\n    const a = document.createElement('a');\r\n    a.download = name;\r\n    a.rel = 'noopener'; // tabnabbing\r\n    // TODO: detect chrome extensions & packaged apps\r\n    // a.target = '_blank'\r\n    if (typeof blob === 'string') {\r\n        // Support regular links\r\n        a.href = blob;\r\n        if (a.origin !== location.origin) {\r\n            if (corsEnabled(a.href)) {\r\n                download(blob, name, opts);\r\n            }\r\n            else {\r\n                a.target = '_blank';\r\n                click(a);\r\n            }\r\n        }\r\n        else {\r\n            click(a);\r\n        }\r\n    }\r\n    else {\r\n        // Support blobs\r\n        a.href = URL.createObjectURL(blob);\r\n        setTimeout(function () {\r\n            URL.revokeObjectURL(a.href);\r\n        }, 4e4); // 40s\r\n        setTimeout(function () {\r\n            click(a);\r\n        }, 0);\r\n    }\r\n}\r\nfunction msSaveAs(blob, name = 'download', opts) {\r\n    if (typeof blob === 'string') {\r\n        if (corsEnabled(blob)) {\r\n            download(blob, name, opts);\r\n        }\r\n        else {\r\n            const a = document.createElement('a');\r\n            a.href = blob;\r\n            a.target = '_blank';\r\n            setTimeout(function () {\r\n                click(a);\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        // @ts-ignore: works on windows\r\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\r\n    }\r\n}\r\nfunction fileSaverSaveAs(blob, name, opts, popup) {\r\n    // Open a popup immediately do go around popup blocker\r\n    // Mostly only available on user interaction and the fileReader is async so...\r\n    popup = popup || open('', '_blank');\r\n    if (popup) {\r\n        popup.document.title = popup.document.body.innerText = 'downloading...';\r\n    }\r\n    if (typeof blob === 'string')\r\n        return download(blob, name, opts);\r\n    const force = blob.type === 'application/octet-stream';\r\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\r\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\r\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\r\n        typeof FileReader !== 'undefined') {\r\n        // Safari doesn't allow downloading of blob URLs\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let url = reader.result;\r\n            if (typeof url !== 'string') {\r\n                popup = null;\r\n                throw new Error('Wrong reader.result type');\r\n            }\r\n            url = isChromeIOS\r\n                ? url\r\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n            if (popup) {\r\n                popup.location.href = url;\r\n            }\r\n            else {\r\n                location.assign(url);\r\n            }\r\n            popup = null; // reverse-tabnabbing #460\r\n        };\r\n        reader.readAsDataURL(blob);\r\n    }\r\n    else {\r\n        const url = URL.createObjectURL(blob);\r\n        if (popup)\r\n            popup.location.assign(url);\r\n        else\r\n            location.href = url;\r\n        popup = null; // reverse-tabnabbing #460\r\n        setTimeout(function () {\r\n            URL.revokeObjectURL(url);\r\n        }, 4e4); // 40s\r\n    }\r\n}\r\n\r\n/**\r\n * Shows a toast or console.log\r\n *\r\n * @param message - message to log\r\n * @param type - different color of the tooltip\r\n */\r\nfunction toastMessage(message, type) {\r\n    const piniaMessage = '🍍 ' + message;\r\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\r\n        // No longer available :(\r\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\r\n    }\r\n    else if (type === 'error') {\r\n        console.error(piniaMessage);\r\n    }\r\n    else if (type === 'warn') {\r\n        console.warn(piniaMessage);\r\n    }\r\n    else {\r\n        console.log(piniaMessage);\r\n    }\r\n}\r\nfunction isPinia(o) {\r\n    return '_a' in o && 'install' in o;\r\n}\r\n\r\n/**\r\n * This file contain devtools actions, they are not Pinia actions.\r\n */\r\n// ---\r\nfunction checkClipboardAccess() {\r\n    if (!('clipboard' in navigator)) {\r\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\r\n        return true;\r\n    }\r\n}\r\nfunction checkNotFocusedError(error) {\r\n    if (error instanceof Error &&\r\n        error.message.toLowerCase().includes('document is not focused')) {\r\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nasync function actionGlobalCopyState(pinia) {\r\n    if (checkClipboardAccess())\r\n        return;\r\n    try {\r\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\r\n        toastMessage('Global state copied to clipboard.');\r\n    }\r\n    catch (error) {\r\n        if (checkNotFocusedError(error))\r\n            return;\r\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nasync function actionGlobalPasteState(pinia) {\r\n    if (checkClipboardAccess())\r\n        return;\r\n    try {\r\n        loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()));\r\n        toastMessage('Global state pasted from clipboard.');\r\n    }\r\n    catch (error) {\r\n        if (checkNotFocusedError(error))\r\n            return;\r\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nasync function actionGlobalSaveState(pinia) {\r\n    try {\r\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\r\n            type: 'text/plain;charset=utf-8',\r\n        }), 'pinia-state.json');\r\n    }\r\n    catch (error) {\r\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nlet fileInput;\r\nfunction getFileOpener() {\r\n    if (!fileInput) {\r\n        fileInput = document.createElement('input');\r\n        fileInput.type = 'file';\r\n        fileInput.accept = '.json';\r\n    }\r\n    function openFile() {\r\n        return new Promise((resolve, reject) => {\r\n            fileInput.onchange = async () => {\r\n                const files = fileInput.files;\r\n                if (!files)\r\n                    return resolve(null);\r\n                const file = files.item(0);\r\n                if (!file)\r\n                    return resolve(null);\r\n                return resolve({ text: await file.text(), file });\r\n            };\r\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\r\n            fileInput.oncancel = () => resolve(null);\r\n            fileInput.onerror = reject;\r\n            fileInput.click();\r\n        });\r\n    }\r\n    return openFile;\r\n}\r\nasync function actionGlobalOpenStateFile(pinia) {\r\n    try {\r\n        const open = getFileOpener();\r\n        const result = await open();\r\n        if (!result)\r\n            return;\r\n        const { text, file } = result;\r\n        loadStoresState(pinia, JSON.parse(text));\r\n        toastMessage(`Global state imported from \"${file.name}\".`);\r\n    }\r\n    catch (error) {\r\n        toastMessage(`Failed to import the state from JSON. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nfunction loadStoresState(pinia, state) {\r\n    for (const key in state) {\r\n        const storeState = pinia.state.value[key];\r\n        // store is already instantiated, patch it\r\n        if (storeState) {\r\n            Object.assign(storeState, state[key]);\r\n        }\r\n        else {\r\n            // store is not instantiated, set the initial state\r\n            pinia.state.value[key] = state[key];\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\nconst PINIA_ROOT_LABEL = '🍍 Pinia (root)';\r\nconst PINIA_ROOT_ID = '_root';\r\nfunction formatStoreForInspectorTree(store) {\r\n    return isPinia(store)\r\n        ? {\r\n            id: PINIA_ROOT_ID,\r\n            label: PINIA_ROOT_LABEL,\r\n        }\r\n        : {\r\n            id: store.$id,\r\n            label: store.$id,\r\n        };\r\n}\r\nfunction formatStoreForInspectorState(store) {\r\n    if (isPinia(store)) {\r\n        const storeNames = Array.from(store._s.keys());\r\n        const storeMap = store._s;\r\n        const state = {\r\n            state: storeNames.map((storeId) => ({\r\n                editable: true,\r\n                key: storeId,\r\n                value: store.state.value[storeId],\r\n            })),\r\n            getters: storeNames\r\n                .filter((id) => storeMap.get(id)._getters)\r\n                .map((id) => {\r\n                const store = storeMap.get(id);\r\n                return {\r\n                    editable: false,\r\n                    key: id,\r\n                    value: store._getters.reduce((getters, key) => {\r\n                        getters[key] = store[key];\r\n                        return getters;\r\n                    }, {}),\r\n                };\r\n            }),\r\n        };\r\n        return state;\r\n    }\r\n    const state = {\r\n        state: Object.keys(store.$state).map((key) => ({\r\n            editable: true,\r\n            key,\r\n            value: store.$state[key],\r\n        })),\r\n    };\r\n    // avoid adding empty getters\r\n    if (store._getters && store._getters.length) {\r\n        state.getters = store._getters.map((getterName) => ({\r\n            editable: false,\r\n            key: getterName,\r\n            value: store[getterName],\r\n        }));\r\n    }\r\n    if (store._customProperties.size) {\r\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\r\n            editable: true,\r\n            key,\r\n            value: store[key],\r\n        }));\r\n    }\r\n    return state;\r\n}\r\nfunction formatEventData(events) {\r\n    if (!events)\r\n        return {};\r\n    if (Array.isArray(events)) {\r\n        // TODO: handle add and delete for arrays and objects\r\n        return events.reduce((data, event) => {\r\n            data.keys.push(event.key);\r\n            data.operations.push(event.type);\r\n            data.oldValue[event.key] = event.oldValue;\r\n            data.newValue[event.key] = event.newValue;\r\n            return data;\r\n        }, {\r\n            oldValue: {},\r\n            keys: [],\r\n            operations: [],\r\n            newValue: {},\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            operation: formatDisplay(events.type),\r\n            key: formatDisplay(events.key),\r\n            oldValue: events.oldValue,\r\n            newValue: events.newValue,\r\n        };\r\n    }\r\n}\r\nfunction formatMutationType(type) {\r\n    switch (type) {\r\n        case MutationType.direct:\r\n            return 'mutation';\r\n        case MutationType.patchFunction:\r\n            return '$patch';\r\n        case MutationType.patchObject:\r\n            return '$patch';\r\n        default:\r\n            return 'unknown';\r\n    }\r\n}\r\n\r\n// timeline can be paused when directly changing the state\r\nlet isTimelineActive = true;\r\nconst componentStateTypes = [];\r\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\r\nconst INSPECTOR_ID = 'pinia';\r\nconst { assign: assign$1 } = Object;\r\n/**\r\n * Gets the displayed name of a store in devtools\r\n *\r\n * @param id - id of the store\r\n * @returns a formatted string\r\n */\r\nconst getStoreType = (id) => '🍍 ' + id;\r\n/**\r\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\r\n * as soon as it is added to the application.\r\n *\r\n * @param app - Vue application\r\n * @param pinia - pinia instance\r\n */\r\nfunction registerPiniaDevtools(app, pinia) {\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia 🍍',\r\n        logo: 'https://pinia.vuejs.org/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.vuejs.org',\r\n        componentStateTypes,\r\n        app,\r\n    }, (api) => {\r\n        if (typeof api.now !== 'function') {\r\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\r\n        }\r\n        api.addTimelineLayer({\r\n            id: MUTATIONS_LAYER_ID,\r\n            label: `Pinia 🍍`,\r\n            color: 0xe5df88,\r\n        });\r\n        api.addInspector({\r\n            id: INSPECTOR_ID,\r\n            label: 'Pinia 🍍',\r\n            icon: 'storage',\r\n            treeFilterPlaceholder: 'Search stores',\r\n            actions: [\r\n                {\r\n                    icon: 'content_copy',\r\n                    action: () => {\r\n                        actionGlobalCopyState(pinia);\r\n                    },\r\n                    tooltip: 'Serialize and copy the state',\r\n                },\r\n                {\r\n                    icon: 'content_paste',\r\n                    action: async () => {\r\n                        await actionGlobalPasteState(pinia);\r\n                        api.sendInspectorTree(INSPECTOR_ID);\r\n                        api.sendInspectorState(INSPECTOR_ID);\r\n                    },\r\n                    tooltip: 'Replace the state with the content of your clipboard',\r\n                },\r\n                {\r\n                    icon: 'save',\r\n                    action: () => {\r\n                        actionGlobalSaveState(pinia);\r\n                    },\r\n                    tooltip: 'Save the state as a JSON file',\r\n                },\r\n                {\r\n                    icon: 'folder_open',\r\n                    action: async () => {\r\n                        await actionGlobalOpenStateFile(pinia);\r\n                        api.sendInspectorTree(INSPECTOR_ID);\r\n                        api.sendInspectorState(INSPECTOR_ID);\r\n                    },\r\n                    tooltip: 'Import the state from a JSON file',\r\n                },\r\n            ],\r\n            nodeActions: [\r\n                {\r\n                    icon: 'restore',\r\n                    tooltip: 'Reset the state (with \"$reset\")',\r\n                    action: (nodeId) => {\r\n                        const store = pinia._s.get(nodeId);\r\n                        if (!store) {\r\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\r\n                        }\r\n                        else if (typeof store.$reset !== 'function') {\r\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it doesn't have a \"$reset\" method implemented.`, 'warn');\r\n                        }\r\n                        else {\r\n                            store.$reset();\r\n                            toastMessage(`Store \"${nodeId}\" reset.`);\r\n                        }\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            const proxy = (payload.componentInstance &&\r\n                payload.componentInstance.proxy);\r\n            if (proxy && proxy._pStores) {\r\n                const piniaStores = payload.componentInstance.proxy._pStores;\r\n                Object.values(piniaStores).forEach((store) => {\r\n                    payload.instanceData.state.push({\r\n                        type: getStoreType(store.$id),\r\n                        key: 'state',\r\n                        editable: true,\r\n                        value: store._isOptionsAPI\r\n                            ? {\r\n                                _custom: {\r\n                                    value: toRaw(store.$state),\r\n                                    actions: [\r\n                                        {\r\n                                            icon: 'restore',\r\n                                            tooltip: 'Reset the state of this store',\r\n                                            action: () => store.$reset(),\r\n                                        },\r\n                                    ],\r\n                                },\r\n                            }\r\n                            : // NOTE: workaround to unwrap transferred refs\r\n                                Object.keys(store.$state).reduce((state, key) => {\r\n                                    state[key] = store.$state[key];\r\n                                    return state;\r\n                                }, {}),\r\n                    });\r\n                    if (store._getters && store._getters.length) {\r\n                        payload.instanceData.state.push({\r\n                            type: getStoreType(store.$id),\r\n                            key: 'getters',\r\n                            editable: false,\r\n                            value: store._getters.reduce((getters, key) => {\r\n                                try {\r\n                                    getters[key] = store[key];\r\n                                }\r\n                                catch (error) {\r\n                                    // @ts-expect-error: we just want to show it in devtools\r\n                                    getters[key] = error;\r\n                                }\r\n                                return getters;\r\n                            }, {}),\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        api.on.getInspectorTree((payload) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                let stores = [pinia];\r\n                stores = stores.concat(Array.from(pinia._s.values()));\r\n                payload.rootNodes = (payload.filter\r\n                    ? stores.filter((store) => '$id' in store\r\n                        ? store.$id\r\n                            .toLowerCase()\r\n                            .includes(payload.filter.toLowerCase())\r\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\r\n                    : stores).map(formatStoreForInspectorTree);\r\n            }\r\n        });\r\n        // Expose pinia instance as $pinia to window\r\n        globalThis.$pinia = pinia;\r\n        api.on.getInspectorState((payload) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\r\n                    ? pinia\r\n                    : pinia._s.get(payload.nodeId);\r\n                if (!inspectedStore) {\r\n                    // this could be the selected store restored for a different project\r\n                    // so it's better not to say anything here\r\n                    return;\r\n                }\r\n                if (inspectedStore) {\r\n                    // Expose selected store as $store to window\r\n                    if (payload.nodeId !== PINIA_ROOT_ID)\r\n                        globalThis.$store = toRaw(inspectedStore);\r\n                    payload.state = formatStoreForInspectorState(inspectedStore);\r\n                }\r\n            }\r\n        });\r\n        api.on.editInspectorState((payload, ctx) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\r\n                    ? pinia\r\n                    : pinia._s.get(payload.nodeId);\r\n                if (!inspectedStore) {\r\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\r\n                }\r\n                const { path } = payload;\r\n                if (!isPinia(inspectedStore)) {\r\n                    // access only the state\r\n                    if (path.length !== 1 ||\r\n                        !inspectedStore._customProperties.has(path[0]) ||\r\n                        path[0] in inspectedStore.$state) {\r\n                        path.unshift('$state');\r\n                    }\r\n                }\r\n                else {\r\n                    // Root access, we can omit the `.value` because the devtools API does it for us\r\n                    path.unshift('state');\r\n                }\r\n                isTimelineActive = false;\r\n                payload.set(inspectedStore, path, payload.state.value);\r\n                isTimelineActive = true;\r\n            }\r\n        });\r\n        api.on.editComponentState((payload) => {\r\n            if (payload.type.startsWith('🍍')) {\r\n                const storeId = payload.type.replace(/^🍍\\s*/, '');\r\n                const store = pinia._s.get(storeId);\r\n                if (!store) {\r\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\r\n                }\r\n                const { path } = payload;\r\n                if (path[0] !== 'state') {\r\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\r\n                }\r\n                // rewrite the first entry to be able to directly set the state as\r\n                // well as any other path\r\n                path[0] = '$state';\r\n                isTimelineActive = false;\r\n                payload.set(store, path, payload.state.value);\r\n                isTimelineActive = true;\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction addStoreToDevtools(app, store) {\r\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\r\n        componentStateTypes.push(getStoreType(store.$id));\r\n    }\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia 🍍',\r\n        logo: 'https://pinia.vuejs.org/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.vuejs.org',\r\n        componentStateTypes,\r\n        app,\r\n        settings: {\r\n            logStoreChanges: {\r\n                label: 'Notify about new/deleted stores',\r\n                type: 'boolean',\r\n                defaultValue: true,\r\n            },\r\n            // useEmojis: {\r\n            //   label: 'Use emojis in messages ⚡️',\r\n            //   type: 'boolean',\r\n            //   defaultValue: true,\r\n            // },\r\n        },\r\n    }, (api) => {\r\n        // gracefully handle errors\r\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\r\n        store.$onAction(({ after, onError, name, args }) => {\r\n            const groupId = runningActionId++;\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: {\r\n                    time: now(),\r\n                    title: '🛫 ' + name,\r\n                    subtitle: 'start',\r\n                    data: {\r\n                        store: formatDisplay(store.$id),\r\n                        action: formatDisplay(name),\r\n                        args,\r\n                    },\r\n                    groupId,\r\n                },\r\n            });\r\n            after((result) => {\r\n                activeAction = undefined;\r\n                api.addTimelineEvent({\r\n                    layerId: MUTATIONS_LAYER_ID,\r\n                    event: {\r\n                        time: now(),\r\n                        title: '🛬 ' + name,\r\n                        subtitle: 'end',\r\n                        data: {\r\n                            store: formatDisplay(store.$id),\r\n                            action: formatDisplay(name),\r\n                            args,\r\n                            result,\r\n                        },\r\n                        groupId,\r\n                    },\r\n                });\r\n            });\r\n            onError((error) => {\r\n                activeAction = undefined;\r\n                api.addTimelineEvent({\r\n                    layerId: MUTATIONS_LAYER_ID,\r\n                    event: {\r\n                        time: now(),\r\n                        logType: 'error',\r\n                        title: '💥 ' + name,\r\n                        subtitle: 'end',\r\n                        data: {\r\n                            store: formatDisplay(store.$id),\r\n                            action: formatDisplay(name),\r\n                            args,\r\n                            error,\r\n                        },\r\n                        groupId,\r\n                    },\r\n                });\r\n            });\r\n        }, true);\r\n        store._customProperties.forEach((name) => {\r\n            watch(() => unref(store[name]), (newValue, oldValue) => {\r\n                api.notifyComponentUpdate();\r\n                api.sendInspectorState(INSPECTOR_ID);\r\n                if (isTimelineActive) {\r\n                    api.addTimelineEvent({\r\n                        layerId: MUTATIONS_LAYER_ID,\r\n                        event: {\r\n                            time: now(),\r\n                            title: 'Change',\r\n                            subtitle: name,\r\n                            data: {\r\n                                newValue,\r\n                                oldValue,\r\n                            },\r\n                            groupId: activeAction,\r\n                        },\r\n                    });\r\n                }\r\n            }, { deep: true });\r\n        });\r\n        store.$subscribe(({ events, type }, state) => {\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n            if (!isTimelineActive)\r\n                return;\r\n            // rootStore.state[store.id] = state\r\n            const eventData = {\r\n                time: now(),\r\n                title: formatMutationType(type),\r\n                data: assign$1({ store: formatDisplay(store.$id) }, formatEventData(events)),\r\n                groupId: activeAction,\r\n            };\r\n            if (type === MutationType.patchFunction) {\r\n                eventData.subtitle = '⤵️';\r\n            }\r\n            else if (type === MutationType.patchObject) {\r\n                eventData.subtitle = '🧩';\r\n            }\r\n            else if (events && !Array.isArray(events)) {\r\n                eventData.subtitle = events.type;\r\n            }\r\n            if (events) {\r\n                eventData.data['rawEvent(s)'] = {\r\n                    _custom: {\r\n                        display: 'DebuggerEvent',\r\n                        type: 'object',\r\n                        tooltip: 'raw DebuggerEvent[]',\r\n                        value: events,\r\n                    },\r\n                };\r\n            }\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: eventData,\r\n            });\r\n        }, { detached: true, flush: 'sync' });\r\n        const hotUpdate = store._hotUpdate;\r\n        store._hotUpdate = markRaw((newStore) => {\r\n            hotUpdate(newStore);\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: {\r\n                    time: now(),\r\n                    title: '🔥 ' + store.$id,\r\n                    subtitle: 'HMR update',\r\n                    data: {\r\n                        store: formatDisplay(store.$id),\r\n                        info: formatDisplay(`HMR update`),\r\n                    },\r\n                },\r\n            });\r\n            // update the devtools too\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(INSPECTOR_ID);\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n        });\r\n        const { $dispose } = store;\r\n        store.$dispose = () => {\r\n            $dispose();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(INSPECTOR_ID);\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n            api.getSettings().logStoreChanges &&\r\n                toastMessage(`Disposed \"${store.$id}\" store 🗑`);\r\n        };\r\n        // trigger an update so it can display new registered stores\r\n        api.notifyComponentUpdate();\r\n        api.sendInspectorTree(INSPECTOR_ID);\r\n        api.sendInspectorState(INSPECTOR_ID);\r\n        api.getSettings().logStoreChanges &&\r\n            toastMessage(`\"${store.$id}\" store installed 🆕`);\r\n    });\r\n}\r\nlet runningActionId = 0;\r\nlet activeAction;\r\n/**\r\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\r\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\r\n * mutation to the action.\r\n *\r\n * @param store - store to patch\r\n * @param actionNames - list of actionst to patch\r\n */\r\nfunction patchActionForGrouping(store, actionNames, wrapWithProxy) {\r\n    // original actions of the store as they are given by pinia. We are going to override them\r\n    const actions = actionNames.reduce((storeActions, actionName) => {\r\n        // use toRaw to avoid tracking #541\r\n        storeActions[actionName] = toRaw(store)[actionName];\r\n        return storeActions;\r\n    }, {});\r\n    for (const actionName in actions) {\r\n        store[actionName] = function () {\r\n            // the running action id is incremented in a before action hook\r\n            const _actionId = runningActionId;\r\n            const trackedStore = wrapWithProxy\r\n                ? new Proxy(store, {\r\n                    get(...args) {\r\n                        activeAction = _actionId;\r\n                        return Reflect.get(...args);\r\n                    },\r\n                    set(...args) {\r\n                        activeAction = _actionId;\r\n                        return Reflect.set(...args);\r\n                    },\r\n                })\r\n                : store;\r\n            // For Setup Stores we need https://github.com/tc39/proposal-async-context\r\n            activeAction = _actionId;\r\n            const retValue = actions[actionName].apply(trackedStore, arguments);\r\n            // this is safer as async actions in Setup Stores would associate mutations done outside of the action\r\n            activeAction = undefined;\r\n            return retValue;\r\n        };\r\n    }\r\n}\r\n/**\r\n * pinia.use(devtoolsPlugin)\r\n */\r\nfunction devtoolsPlugin({ app, store, options }) {\r\n    // HMR module\r\n    if (store.$id.startsWith('__hot:')) {\r\n        return;\r\n    }\r\n    // detect option api vs setup api\r\n    store._isOptionsAPI = !!options.state;\r\n    // Do not overwrite actions mocked by @pinia/testing (#2298)\r\n    if (!store._p._testing) {\r\n        patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);\r\n        // Upgrade the HMR to also update the new actions\r\n        const originalHotUpdate = store._hotUpdate;\r\n        toRaw(store)._hotUpdate = function (newStore) {\r\n            originalHotUpdate.apply(this, arguments);\r\n            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);\r\n        };\r\n    }\r\n    addStoreToDevtools(app, \r\n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\r\n    store);\r\n}\r\n\r\n/**\r\n * Creates a Pinia instance to be used by the application\r\n */\r\nfunction createPinia() {\r\n    const scope = effectScope(true);\r\n    // NOTE: here we could check the window object for a state and directly set it\r\n    // if there is anything like it with Vue 3 SSR\r\n    const state = scope.run(() => ref({}));\r\n    let _p = [];\r\n    // plugins added before calling app.use(pinia)\r\n    let toBeInstalled = [];\r\n    const pinia = markRaw({\r\n        install(app) {\r\n            // this allows calling useStore() outside of a component setup after\r\n            // installing pinia's plugin\r\n            setActivePinia(pinia);\r\n            if (!isVue2) {\r\n                pinia._a = app;\r\n                app.provide(piniaSymbol, pinia);\r\n                app.config.globalProperties.$pinia = pinia;\r\n                /* istanbul ignore else */\r\n                if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\r\n                    registerPiniaDevtools(app, pinia);\r\n                }\r\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\r\n                toBeInstalled = [];\r\n            }\r\n        },\r\n        use(plugin) {\r\n            if (!this._a && !isVue2) {\r\n                toBeInstalled.push(plugin);\r\n            }\r\n            else {\r\n                _p.push(plugin);\r\n            }\r\n            return this;\r\n        },\r\n        _p,\r\n        // it's actually undefined here\r\n        // @ts-expect-error\r\n        _a: null,\r\n        _e: scope,\r\n        _s: new Map(),\r\n        state,\r\n    });\r\n    // pinia devtools rely on dev only features so they cannot be forced unless\r\n    // the dev build of Vue is used. Avoid old browsers like IE11.\r\n    if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT && typeof Proxy !== 'undefined') {\r\n        pinia.use(devtoolsPlugin);\r\n    }\r\n    return pinia;\r\n}\r\n/**\r\n * Dispose a Pinia instance by stopping its effectScope and removing the state, plugins and stores. This is mostly\r\n * useful in tests, with both a testing pinia or a regular pinia and in applications that use multiple pinia instances.\r\n * Once disposed, the pinia instance cannot be used anymore.\r\n *\r\n * @param pinia - pinia instance\r\n */\r\nfunction disposePinia(pinia) {\r\n    pinia._e.stop();\r\n    pinia._s.clear();\r\n    pinia._p.splice(0);\r\n    pinia.state.value = {};\r\n    // @ts-expect-error: non valid\r\n    pinia._a = null;\r\n}\r\n\r\n/**\r\n * Checks if a function is a `StoreDefinition`.\r\n *\r\n * @param fn - object to test\r\n * @returns true if `fn` is a StoreDefinition\r\n */\r\nconst isUseStore = (fn) => {\r\n    return typeof fn === 'function' && typeof fn.$id === 'string';\r\n};\r\n/**\r\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\r\n * remove any key not existing in `newState` and recursively merge plain\r\n * objects.\r\n *\r\n * @param newState - new state object to be patched\r\n * @param oldState - old state that should be used to patch newState\r\n * @returns - newState\r\n */\r\nfunction patchObject(newState, oldState) {\r\n    // no need to go through symbols because they cannot be serialized anyway\r\n    for (const key in oldState) {\r\n        const subPatch = oldState[key];\r\n        // skip the whole sub tree\r\n        if (!(key in newState)) {\r\n            continue;\r\n        }\r\n        const targetValue = newState[key];\r\n        if (isPlainObject(targetValue) &&\r\n            isPlainObject(subPatch) &&\r\n            !isRef(subPatch) &&\r\n            !isReactive(subPatch)) {\r\n            newState[key] = patchObject(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\r\n            // just set the whole thing\r\n            if (isVue2) {\r\n                set(newState, key, subPatch);\r\n            }\r\n            else {\r\n                newState[key] = subPatch;\r\n            }\r\n        }\r\n    }\r\n    return newState;\r\n}\r\n/**\r\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\r\n *\r\n * @example\r\n * ```js\r\n * const useUser = defineStore(...)\r\n * if (import.meta.hot) {\r\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\r\n * }\r\n * ```\r\n *\r\n * @param initialUseStore - return of the defineStore to hot update\r\n * @param hot - `import.meta.hot`\r\n */\r\nfunction acceptHMRUpdate(initialUseStore, hot) {\r\n    // strip as much as possible from iife.prod\r\n    if (!(process.env.NODE_ENV !== 'production')) {\r\n        return () => { };\r\n    }\r\n    return (newModule) => {\r\n        const pinia = hot.data.pinia || initialUseStore._pinia;\r\n        if (!pinia) {\r\n            // this store is still not used\r\n            return;\r\n        }\r\n        // preserve the pinia instance across loads\r\n        hot.data.pinia = pinia;\r\n        // console.log('got data', newStore)\r\n        for (const exportName in newModule) {\r\n            const useStore = newModule[exportName];\r\n            // console.log('checking for', exportName)\r\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\r\n                // console.log('Accepting update for', useStore.$id)\r\n                const id = useStore.$id;\r\n                if (id !== initialUseStore.$id) {\r\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\r\n                    // return import.meta.hot.invalidate()\r\n                    return hot.invalidate();\r\n                }\r\n                const existingStore = pinia._s.get(id);\r\n                if (!existingStore) {\r\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\r\n                    return;\r\n                }\r\n                useStore(pinia, existingStore);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nconst noop = () => { };\r\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\r\n    subscriptions.push(callback);\r\n    const removeSubscription = () => {\r\n        const idx = subscriptions.indexOf(callback);\r\n        if (idx > -1) {\r\n            subscriptions.splice(idx, 1);\r\n            onCleanup();\r\n        }\r\n    };\r\n    if (!detached && getCurrentScope()) {\r\n        onScopeDispose(removeSubscription);\r\n    }\r\n    return removeSubscription;\r\n}\r\nfunction triggerSubscriptions(subscriptions, ...args) {\r\n    subscriptions.slice().forEach((callback) => {\r\n        callback(...args);\r\n    });\r\n}\r\n\r\nconst fallbackRunWithContext = (fn) => fn();\r\n/**\r\n * Marks a function as an action for `$onAction`\r\n * @internal\r\n */\r\nconst ACTION_MARKER = Symbol();\r\n/**\r\n * Action name symbol. Allows to add a name to an action after defining it\r\n * @internal\r\n */\r\nconst ACTION_NAME = Symbol();\r\nfunction mergeReactiveObjects(target, patchToApply) {\r\n    // Handle Map instances\r\n    if (target instanceof Map && patchToApply instanceof Map) {\r\n        patchToApply.forEach((value, key) => target.set(key, value));\r\n    }\r\n    else if (target instanceof Set && patchToApply instanceof Set) {\r\n        // Handle Set instances\r\n        patchToApply.forEach(target.add, target);\r\n    }\r\n    // no need to go through symbols because they cannot be serialized anyway\r\n    for (const key in patchToApply) {\r\n        if (!patchToApply.hasOwnProperty(key))\r\n            continue;\r\n        const subPatch = patchToApply[key];\r\n        const targetValue = target[key];\r\n        if (isPlainObject(targetValue) &&\r\n            isPlainObject(subPatch) &&\r\n            target.hasOwnProperty(key) &&\r\n            !isRef(subPatch) &&\r\n            !isReactive(subPatch)) {\r\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\r\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\r\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\r\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // @ts-expect-error: subPatch is a valid value\r\n            target[key] = subPatch;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\r\n    ? Symbol('pinia:skipHydration')\r\n    : /* istanbul ignore next */ Symbol();\r\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\r\n/**\r\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\r\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\r\n *\r\n * @param obj - target object\r\n * @returns obj\r\n */\r\nfunction skipHydrate(obj) {\r\n    return isVue2\r\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\r\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\r\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\r\n}\r\n/**\r\n * Returns whether a value should be hydrated\r\n *\r\n * @param obj - target variable\r\n * @returns true if `obj` should be hydrated\r\n */\r\nfunction shouldHydrate(obj) {\r\n    return isVue2\r\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\r\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\r\n}\r\nconst { assign } = Object;\r\nfunction isComputed(o) {\r\n    return !!(isRef(o) && o.effect);\r\n}\r\nfunction createOptionsStore(id, options, pinia, hot) {\r\n    const { state, actions, getters } = options;\r\n    const initialState = pinia.state.value[id];\r\n    let store;\r\n    function setup() {\r\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\r\n            /* istanbul ignore if */\r\n            if (isVue2) {\r\n                set(pinia.state.value, id, state ? state() : {});\r\n            }\r\n            else {\r\n                pinia.state.value[id] = state ? state() : {};\r\n            }\r\n        }\r\n        // avoid creating a state in pinia.state.value\r\n        const localState = (process.env.NODE_ENV !== 'production') && hot\r\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\r\n                toRefs(ref(state ? state() : {}).value)\r\n            : toRefs(pinia.state.value[id]);\r\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\r\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\r\n                console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\r\n            }\r\n            computedGetters[name] = markRaw(computed(() => {\r\n                setActivePinia(pinia);\r\n                // it was created just before\r\n                const store = pinia._s.get(id);\r\n                // allow cross using stores\r\n                /* istanbul ignore if */\r\n                if (isVue2 && !store._r)\r\n                    return;\r\n                // @ts-expect-error\r\n                // return getters![name].call(context, context)\r\n                // TODO: avoid reading the getter while assigning with a global variable\r\n                return getters[name].call(store, store);\r\n            }));\r\n            return computedGetters;\r\n        }, {}));\r\n    }\r\n    store = createSetupStore(id, setup, options, pinia, hot, true);\r\n    return store;\r\n}\r\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\r\n    let scope;\r\n    const optionsForPlugin = assign({ actions: {} }, options);\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\r\n        throw new Error('Pinia destroyed');\r\n    }\r\n    // watcher options for $subscribe\r\n    const $subscribeOptions = { deep: true };\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\r\n        $subscribeOptions.onTrigger = (event) => {\r\n            /* istanbul ignore else */\r\n            if (isListening) {\r\n                debuggerEvents = event;\r\n                // avoid triggering this while the store is being built and the state is being set in pinia\r\n            }\r\n            else if (isListening == false && !store._hotUpdating) {\r\n                // let patch send all the events together later\r\n                /* istanbul ignore else */\r\n                if (Array.isArray(debuggerEvents)) {\r\n                    debuggerEvents.push(event);\r\n                }\r\n                else {\r\n                    console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    // internal state\r\n    let isListening; // set to true at the end\r\n    let isSyncListening; // set to true at the end\r\n    let subscriptions = [];\r\n    let actionSubscriptions = [];\r\n    let debuggerEvents;\r\n    const initialState = pinia.state.value[$id];\r\n    // avoid setting the state for option stores if it is set\r\n    // by the setup\r\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\r\n        /* istanbul ignore if */\r\n        if (isVue2) {\r\n            set(pinia.state.value, $id, {});\r\n        }\r\n        else {\r\n            pinia.state.value[$id] = {};\r\n        }\r\n    }\r\n    const hotState = ref({});\r\n    // avoid triggering too many listeners\r\n    // https://github.com/vuejs/pinia/issues/1129\r\n    let activeListener;\r\n    function $patch(partialStateOrMutator) {\r\n        let subscriptionMutation;\r\n        isListening = isSyncListening = false;\r\n        // reset the debugger events since patches are sync\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            debuggerEvents = [];\r\n        }\r\n        if (typeof partialStateOrMutator === 'function') {\r\n            partialStateOrMutator(pinia.state.value[$id]);\r\n            subscriptionMutation = {\r\n                type: MutationType.patchFunction,\r\n                storeId: $id,\r\n                events: debuggerEvents,\r\n            };\r\n        }\r\n        else {\r\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\r\n            subscriptionMutation = {\r\n                type: MutationType.patchObject,\r\n                payload: partialStateOrMutator,\r\n                storeId: $id,\r\n                events: debuggerEvents,\r\n            };\r\n        }\r\n        const myListenerId = (activeListener = Symbol());\r\n        nextTick().then(() => {\r\n            if (activeListener === myListenerId) {\r\n                isListening = true;\r\n            }\r\n        });\r\n        isSyncListening = true;\r\n        // because we paused the watcher, we need to manually call the subscriptions\r\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\r\n    }\r\n    const $reset = isOptionsStore\r\n        ? function $reset() {\r\n            const { state } = options;\r\n            const newState = state ? state() : {};\r\n            // we use a patch to group all changes into one single subscription\r\n            this.$patch(($state) => {\r\n                // @ts-expect-error: FIXME: shouldn't error?\r\n                assign($state, newState);\r\n            });\r\n        }\r\n        : /* istanbul ignore next */\r\n            (process.env.NODE_ENV !== 'production')\r\n                ? () => {\r\n                    throw new Error(`🍍: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\r\n                }\r\n                : noop;\r\n    function $dispose() {\r\n        scope.stop();\r\n        subscriptions = [];\r\n        actionSubscriptions = [];\r\n        pinia._s.delete($id);\r\n    }\r\n    /**\r\n     * Helper that wraps function so it can be tracked with $onAction\r\n     * @param fn - action to wrap\r\n     * @param name - name of the action\r\n     */\r\n    const action = (fn, name = '') => {\r\n        if (ACTION_MARKER in fn) {\r\n            fn[ACTION_NAME] = name;\r\n            return fn;\r\n        }\r\n        const wrappedAction = function () {\r\n            setActivePinia(pinia);\r\n            const args = Array.from(arguments);\r\n            const afterCallbackList = [];\r\n            const onErrorCallbackList = [];\r\n            function after(callback) {\r\n                afterCallbackList.push(callback);\r\n            }\r\n            function onError(callback) {\r\n                onErrorCallbackList.push(callback);\r\n            }\r\n            // @ts-expect-error\r\n            triggerSubscriptions(actionSubscriptions, {\r\n                args,\r\n                name: wrappedAction[ACTION_NAME],\r\n                store,\r\n                after,\r\n                onError,\r\n            });\r\n            let ret;\r\n            try {\r\n                ret = fn.apply(this && this.$id === $id ? this : store, args);\r\n                // handle sync errors\r\n            }\r\n            catch (error) {\r\n                triggerSubscriptions(onErrorCallbackList, error);\r\n                throw error;\r\n            }\r\n            if (ret instanceof Promise) {\r\n                return ret\r\n                    .then((value) => {\r\n                    triggerSubscriptions(afterCallbackList, value);\r\n                    return value;\r\n                })\r\n                    .catch((error) => {\r\n                    triggerSubscriptions(onErrorCallbackList, error);\r\n                    return Promise.reject(error);\r\n                });\r\n            }\r\n            // trigger after callbacks\r\n            triggerSubscriptions(afterCallbackList, ret);\r\n            return ret;\r\n        };\r\n        wrappedAction[ACTION_MARKER] = true;\r\n        wrappedAction[ACTION_NAME] = name; // will be set later\r\n        // @ts-expect-error: we are intentionally limiting the returned type to just Fn\r\n        // because all the added properties are internals that are exposed through `$onAction()` only\r\n        return wrappedAction;\r\n    };\r\n    const _hmrPayload = /*#__PURE__*/ markRaw({\r\n        actions: {},\r\n        getters: {},\r\n        state: [],\r\n        hotState,\r\n    });\r\n    const partialStore = {\r\n        _p: pinia,\r\n        // _s: scope,\r\n        $id,\r\n        $onAction: addSubscription.bind(null, actionSubscriptions),\r\n        $patch,\r\n        $reset,\r\n        $subscribe(callback, options = {}) {\r\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\r\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\r\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\r\n                    callback({\r\n                        storeId: $id,\r\n                        type: MutationType.direct,\r\n                        events: debuggerEvents,\r\n                    }, state);\r\n                }\r\n            }, assign({}, $subscribeOptions, options)));\r\n            return removeSubscription;\r\n        },\r\n        $dispose,\r\n    };\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        // start as non ready\r\n        partialStore._r = false;\r\n    }\r\n    const store = reactive((process.env.NODE_ENV !== 'production') || ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT)\r\n        ? assign({\r\n            _hmrPayload,\r\n            _customProperties: markRaw(new Set()), // devtools custom properties\r\n        }, partialStore\r\n        // must be added later\r\n        // setupStore\r\n        )\r\n        : partialStore);\r\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\r\n    // creating infinite loops.\r\n    pinia._s.set($id, store);\r\n    const runWithContext = (pinia._a && pinia._a.runWithContext) || fallbackRunWithContext;\r\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\r\n    const setupStore = runWithContext(() => pinia._e.run(() => (scope = effectScope()).run(() => setup({ action }))));\r\n    // overwrite existing actions to support $onAction\r\n    for (const key in setupStore) {\r\n        const prop = setupStore[key];\r\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\r\n            // mark it as a piece of state to be serialized\r\n            if ((process.env.NODE_ENV !== 'production') && hot) {\r\n                set(hotState.value, key, toRef(setupStore, key));\r\n                // createOptionStore directly sets the state in pinia.state.value so we\r\n                // can just skip that\r\n            }\r\n            else if (!isOptionsStore) {\r\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\r\n                if (initialState && shouldHydrate(prop)) {\r\n                    if (isRef(prop)) {\r\n                        prop.value = initialState[key];\r\n                    }\r\n                    else {\r\n                        // probably a reactive object, lets recursively assign\r\n                        // @ts-expect-error: prop is unknown\r\n                        mergeReactiveObjects(prop, initialState[key]);\r\n                    }\r\n                }\r\n                // transfer the ref to the pinia state to keep everything in sync\r\n                /* istanbul ignore if */\r\n                if (isVue2) {\r\n                    set(pinia.state.value[$id], key, prop);\r\n                }\r\n                else {\r\n                    pinia.state.value[$id][key] = prop;\r\n                }\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                _hmrPayload.state.push(key);\r\n            }\r\n            // action\r\n        }\r\n        else if (typeof prop === 'function') {\r\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : action(prop, key);\r\n            // this a hot module replacement store because the hotUpdate method needs\r\n            // to do it with the right context\r\n            /* istanbul ignore if */\r\n            if (isVue2) {\r\n                set(setupStore, key, actionValue);\r\n            }\r\n            else {\r\n                // @ts-expect-error\r\n                setupStore[key] = actionValue;\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                _hmrPayload.actions[key] = prop;\r\n            }\r\n            // list actions so they can be used in plugins\r\n            // @ts-expect-error\r\n            optionsForPlugin.actions[key] = prop;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            // add getters for devtools\r\n            if (isComputed(prop)) {\r\n                _hmrPayload.getters[key] = isOptionsStore\r\n                    ? // @ts-expect-error\r\n                        options.getters[key]\r\n                    : prop;\r\n                if (IS_CLIENT) {\r\n                    const getters = setupStore._getters ||\r\n                        // @ts-expect-error: same\r\n                        (setupStore._getters = markRaw([]));\r\n                    getters.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // add the state, getters, and action properties\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        Object.keys(setupStore).forEach((key) => {\r\n            set(store, key, setupStore[key]);\r\n        });\r\n    }\r\n    else {\r\n        assign(store, setupStore);\r\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\r\n        // Make `storeToRefs()` work with `reactive()` #799\r\n        assign(toRaw(store), setupStore);\r\n    }\r\n    // use this instead of a computed with setter to be able to create it anywhere\r\n    // without linking the computed lifespan to wherever the store is first\r\n    // created.\r\n    Object.defineProperty(store, '$state', {\r\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\r\n        set: (state) => {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && hot) {\r\n                throw new Error('cannot set hotState');\r\n            }\r\n            $patch(($state) => {\r\n                // @ts-expect-error: FIXME: shouldn't error?\r\n                assign($state, state);\r\n            });\r\n        },\r\n    });\r\n    // add the hotUpdate before plugins to allow them to override it\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        store._hotUpdate = markRaw((newStore) => {\r\n            store._hotUpdating = true;\r\n            newStore._hmrPayload.state.forEach((stateKey) => {\r\n                if (stateKey in store.$state) {\r\n                    const newStateTarget = newStore.$state[stateKey];\r\n                    const oldStateSource = store.$state[stateKey];\r\n                    if (typeof newStateTarget === 'object' &&\r\n                        isPlainObject(newStateTarget) &&\r\n                        isPlainObject(oldStateSource)) {\r\n                        patchObject(newStateTarget, oldStateSource);\r\n                    }\r\n                    else {\r\n                        // transfer the ref\r\n                        newStore.$state[stateKey] = oldStateSource;\r\n                    }\r\n                }\r\n                // patch direct access properties to allow store.stateProperty to work as\r\n                // store.$state.stateProperty\r\n                set(store, stateKey, toRef(newStore.$state, stateKey));\r\n            });\r\n            // remove deleted state properties\r\n            Object.keys(store.$state).forEach((stateKey) => {\r\n                if (!(stateKey in newStore.$state)) {\r\n                    del(store, stateKey);\r\n                }\r\n            });\r\n            // avoid devtools logging this as a mutation\r\n            isListening = false;\r\n            isSyncListening = false;\r\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\r\n            isSyncListening = true;\r\n            nextTick().then(() => {\r\n                isListening = true;\r\n            });\r\n            for (const actionName in newStore._hmrPayload.actions) {\r\n                const actionFn = newStore[actionName];\r\n                set(store, actionName, action(actionFn, actionName));\r\n            }\r\n            // TODO: does this work in both setup and option store?\r\n            for (const getterName in newStore._hmrPayload.getters) {\r\n                const getter = newStore._hmrPayload.getters[getterName];\r\n                const getterValue = isOptionsStore\r\n                    ? // special handling of options api\r\n                        computed(() => {\r\n                            setActivePinia(pinia);\r\n                            return getter.call(store, store);\r\n                        })\r\n                    : getter;\r\n                set(store, getterName, getterValue);\r\n            }\r\n            // remove deleted getters\r\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\r\n                if (!(key in newStore._hmrPayload.getters)) {\r\n                    del(store, key);\r\n                }\r\n            });\r\n            // remove old actions\r\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\r\n                if (!(key in newStore._hmrPayload.actions)) {\r\n                    del(store, key);\r\n                }\r\n            });\r\n            // update the values used in devtools and to allow deleting new properties later on\r\n            store._hmrPayload = newStore._hmrPayload;\r\n            store._getters = newStore._getters;\r\n            store._hotUpdating = false;\r\n        });\r\n    }\r\n    if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\r\n        const nonEnumerable = {\r\n            writable: true,\r\n            configurable: true,\r\n            // avoid warning on devtools trying to display this property\r\n            enumerable: false,\r\n        };\r\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\r\n            Object.defineProperty(store, p, assign({ value: store[p] }, nonEnumerable));\r\n        });\r\n    }\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        // mark the store as ready before plugins\r\n        store._r = true;\r\n    }\r\n    // apply all plugins\r\n    pinia._p.forEach((extender) => {\r\n        /* istanbul ignore else */\r\n        if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\r\n            const extensions = scope.run(() => extender({\r\n                store: store,\r\n                app: pinia._a,\r\n                pinia,\r\n                options: optionsForPlugin,\r\n            }));\r\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\r\n            assign(store, extensions);\r\n        }\r\n        else {\r\n            assign(store, scope.run(() => extender({\r\n                store: store,\r\n                app: pinia._a,\r\n                pinia,\r\n                options: optionsForPlugin,\r\n            })));\r\n        }\r\n    });\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        store.$state &&\r\n        typeof store.$state === 'object' &&\r\n        typeof store.$state.constructor === 'function' &&\r\n        !store.$state.constructor.toString().includes('[native code]')) {\r\n        console.warn(`[🍍]: The \"state\" must be a plain object. It cannot be\\n` +\r\n            `\\tstate: () => new MyClass()\\n` +\r\n            `Found in store \"${store.$id}\".`);\r\n    }\r\n    // only apply hydrate to option stores with an initial state in pinia\r\n    if (initialState &&\r\n        isOptionsStore &&\r\n        options.hydrate) {\r\n        options.hydrate(store.$state, initialState);\r\n    }\r\n    isListening = true;\r\n    isSyncListening = true;\r\n    return store;\r\n}\r\n// allows unused stores to be tree shaken\r\n/*! #__NO_SIDE_EFFECTS__ */\r\nfunction defineStore(\r\n// TODO: add proper types from above\r\nidOrOptions, setup, setupOptions) {\r\n    let id;\r\n    let options;\r\n    const isSetupStore = typeof setup === 'function';\r\n    if (typeof idOrOptions === 'string') {\r\n        id = idOrOptions;\r\n        // the option store setup will contain the actual options in this case\r\n        options = isSetupStore ? setupOptions : setup;\r\n    }\r\n    else {\r\n        options = idOrOptions;\r\n        id = idOrOptions.id;\r\n        if ((process.env.NODE_ENV !== 'production') && typeof id !== 'string') {\r\n            throw new Error(`[🍍]: \"defineStore()\" must be passed a store id as its first argument.`);\r\n        }\r\n    }\r\n    function useStore(pinia, hot) {\r\n        const hasContext = hasInjectionContext();\r\n        pinia =\r\n            // in test mode, ignore the argument provided as we can always retrieve a\r\n            // pinia instance with getActivePinia()\r\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\r\n                (hasContext ? inject(piniaSymbol, null) : null);\r\n        if (pinia)\r\n            setActivePinia(pinia);\r\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\r\n            throw new Error(`[🍍]: \"getActivePinia()\" was called but there was no active Pinia. Are you trying to use a store before calling \"app.use(pinia)\"?\\n` +\r\n                `See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.\\n` +\r\n                `This will fail in production.`);\r\n        }\r\n        pinia = activePinia;\r\n        if (!pinia._s.has(id)) {\r\n            // creating the store registers it in `pinia._s`\r\n            if (isSetupStore) {\r\n                createSetupStore(id, setup, options, pinia);\r\n            }\r\n            else {\r\n                createOptionsStore(id, options, pinia);\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                // @ts-expect-error: not the right inferred type\r\n                useStore._pinia = pinia;\r\n            }\r\n        }\r\n        const store = pinia._s.get(id);\r\n        if ((process.env.NODE_ENV !== 'production') && hot) {\r\n            const hotId = '__hot:' + id;\r\n            const newStore = isSetupStore\r\n                ? createSetupStore(hotId, setup, options, pinia, true)\r\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\r\n            hot._hotUpdate(newStore);\r\n            // cleanup the state properties and the store from the cache\r\n            delete pinia.state.value[hotId];\r\n            pinia._s.delete(hotId);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && IS_CLIENT) {\r\n            const currentInstance = getCurrentInstance();\r\n            // save stores in instances to access them devtools\r\n            if (currentInstance &&\r\n                currentInstance.proxy &&\r\n                // avoid adding stores that are just built for hot module replacement\r\n                !hot) {\r\n                const vm = currentInstance.proxy;\r\n                const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\r\n                cache[id] = store;\r\n            }\r\n        }\r\n        // StoreGeneric cannot be casted towards Store\r\n        return store;\r\n    }\r\n    useStore.$id = id;\r\n    return useStore;\r\n}\r\n\r\nlet mapStoreSuffix = 'Store';\r\n/**\r\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\r\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\r\n * interface if you are using TypeScript.\r\n *\r\n * @param suffix - new suffix\r\n */\r\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\r\n) {\r\n    mapStoreSuffix = suffix;\r\n}\r\n/**\r\n * Allows using stores without the composition API (`setup()`) by generating an\r\n * object to be spread in the `computed` field of a component. It accepts a list\r\n * of store definitions.\r\n *\r\n * @example\r\n * ```js\r\n * export default {\r\n *   computed: {\r\n *     // other computed properties\r\n *     ...mapStores(useUserStore, useCartStore)\r\n *   },\r\n *\r\n *   created() {\r\n *     this.userStore // store with id \"user\"\r\n *     this.cartStore // store with id \"cart\"\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @param stores - list of stores to map to an object\r\n */\r\nfunction mapStores(...stores) {\r\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\r\n        console.warn(`[🍍]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\r\n            `Replace\\n` +\r\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\r\n            `with\\n` +\r\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\r\n            `This will fail in production if not fixed.`);\r\n        stores = stores[0];\r\n    }\r\n    return stores.reduce((reduced, useStore) => {\r\n        // @ts-expect-error: $id is added by defineStore\r\n        reduced[useStore.$id + mapStoreSuffix] = function () {\r\n            return useStore(this.$pinia);\r\n        };\r\n        return reduced;\r\n    }, {});\r\n}\r\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapState(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            reduced[key] = function () {\r\n                // @ts-expect-error: FIXME: should work?\r\n                return useStore(this.$pinia)[key];\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function () {\r\n                const store = useStore(this.$pinia);\r\n                const storeKey = keysOrMapper[key];\r\n                // for some reason TS is unable to infer the type of storeKey to be a\r\n                // function\r\n                return typeof storeKey === 'function'\r\n                    ? storeKey.call(this, store)\r\n                    : // @ts-expect-error: FIXME: should work?\r\n                        store[storeKey];\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n/**\r\n * Alias for `mapState()`. You should use `mapState()` instead.\r\n * @deprecated use `mapState()` instead.\r\n */\r\nconst mapGetters = mapState;\r\n/**\r\n * Allows directly using actions from your store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `methods` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapActions(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function (...args) {\r\n                // @ts-expect-error: FIXME: should work?\r\n                return useStore(this.$pinia)[key](...args);\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function (...args) {\r\n                // @ts-expect-error: FIXME: should work?\r\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapWritableState(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            // @ts-ignore\r\n            reduced[key] = {\r\n                get() {\r\n                    // @ts-expect-error: FIXME: should work?\r\n                    return useStore(this.$pinia)[key];\r\n                },\r\n                set(value) {\r\n                    // @ts-expect-error: FIXME: should work?\r\n                    return (useStore(this.$pinia)[key] = value);\r\n                },\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-ignore\r\n            reduced[key] = {\r\n                get() {\r\n                    // @ts-expect-error: FIXME: should work?\r\n                    return useStore(this.$pinia)[keysOrMapper[key]];\r\n                },\r\n                set(value) {\r\n                    // @ts-expect-error: FIXME: should work?\r\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\r\n                },\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n\r\n/**\r\n * Creates an object of references with all the state, getters, and plugin-added\r\n * state properties of the store. Similar to `toRefs()` but specifically\r\n * designed for Pinia stores so methods and non reactive properties are\r\n * completely ignored.\r\n *\r\n * @param store - store to extract the refs from\r\n */\r\nfunction storeToRefs(store) {\r\n    // See https://github.com/vuejs/pinia/issues/852\r\n    // It's easier to just use toRefs() even if it includes more stuff\r\n    if (isVue2) {\r\n        // @ts-expect-error: toRefs include methods and others\r\n        return toRefs(store);\r\n    }\r\n    else {\r\n        const rawStore = toRaw(store);\r\n        const refs = {};\r\n        for (const key in rawStore) {\r\n            const value = rawStore[key];\r\n            // There is no native method to check for a computed\r\n            // https://github.com/vuejs/core/pull/4165\r\n            if (value.effect) {\r\n                // @ts-expect-error: too hard to type correctly\r\n                refs[key] =\r\n                    // ...\r\n                    computed({\r\n                        get: () => store[key],\r\n                        set(value) {\r\n                            store[key] = value;\r\n                        },\r\n                    });\r\n            }\r\n            else if (isRef(value) || isReactive(value)) {\r\n                // @ts-expect-error: the key is state or getter\r\n                refs[key] =\r\n                    // ---\r\n                    toRef(store, key);\r\n            }\r\n        }\r\n        return refs;\r\n    }\r\n}\r\n\r\n/**\r\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\r\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\r\n * https://pinia.vuejs.org/ssr/nuxt.html.\r\n *\r\n * @example\r\n * ```js\r\n * import Vue from 'vue'\r\n * import { PiniaVuePlugin, createPinia } from 'pinia'\r\n *\r\n * Vue.use(PiniaVuePlugin)\r\n * const pinia = createPinia()\r\n *\r\n * new Vue({\r\n *   el: '#app',\r\n *   // ...\r\n *   pinia,\r\n * })\r\n * ```\r\n *\r\n * @param _Vue - `Vue` imported from 'vue'.\r\n */\r\nconst PiniaVuePlugin = function (_Vue) {\r\n    // Equivalent of\r\n    // app.config.globalProperties.$pinia = pinia\r\n    _Vue.mixin({\r\n        beforeCreate() {\r\n            const options = this.$options;\r\n            if (options.pinia) {\r\n                const pinia = options.pinia;\r\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\r\n                /* istanbul ignore else */\r\n                if (!this._provided) {\r\n                    const provideCache = {};\r\n                    Object.defineProperty(this, '_provided', {\r\n                        get: () => provideCache,\r\n                        set: (v) => Object.assign(provideCache, v),\r\n                    });\r\n                }\r\n                this._provided[piniaSymbol] = pinia;\r\n                // propagate the pinia instance in an SSR friendly way\r\n                // avoid adding it to nuxt twice\r\n                /* istanbul ignore else */\r\n                if (!this.$pinia) {\r\n                    this.$pinia = pinia;\r\n                }\r\n                pinia._a = this;\r\n                if (IS_CLIENT) {\r\n                    // this allows calling useStore() outside of a component setup after\r\n                    // installing pinia's plugin\r\n                    setActivePinia(pinia);\r\n                }\r\n                if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\r\n                    registerPiniaDevtools(pinia._a, pinia);\r\n                }\r\n            }\r\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\r\n                this.$pinia = options.parent.$pinia;\r\n            }\r\n        },\r\n        destroyed() {\r\n            delete this._pStores;\r\n        },\r\n    });\r\n};\r\n\r\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, disposePinia, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, shouldHydrate, skipHydrate, storeToRefs };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}