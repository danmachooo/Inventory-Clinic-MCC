{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  __name: 'SetPassword',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var email = ref(\"\");\n    var password = ref(\"\");\n    var errorMessage = ref(\"\");\n    var successMessage = ref(\"\");\n    var router = useRouter();\n    var handleSetPassword = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(\"http://localhost:5000/api/auth/set-password\", {\n                email: email.value,\n                password: password.value\n              });\n            case 3:\n              successMessage.value = \"Password set successfully. Redirecting to login...\";\n              setTimeout(function () {\n                return router.push(\"/\");\n              }, 2000);\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              errorMessage.value = ((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || \"Failed to set password.\";\n              console.error(\"Setting password failed:\", _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function handleSetPassword() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var checkAdminStatus = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:5000/api/auth/has-admins');\n            case 3:\n              response = _context2.sent;\n              if (!response.data.hasAdminWithNullPassword) {\n                router.push('/');\n              }\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error checking admin status:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n      return function checkAdminStatus() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    onMounted(checkAdminStatus);\n    var __returned__ = {\n      email: email,\n      password: password,\n      errorMessage: errorMessage,\n      successMessage: successMessage,\n      router: router,\n      handleSetPassword: handleSetPassword,\n      checkAdminStatus: checkAdminStatus,\n      ref: ref,\n      onMounted: onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","axios","email","password","errorMessage","successMessage","router","handleSetPassword","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_error$response","wrap","_callee$","_context","prev","next","post","value","setTimeout","push","t0","response","data","error","console","stop","apply","arguments","checkAdminStatus","_ref3","_callee2","_callee2$","_context2","get","sent","hasAdminWithNullPassword"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/SetPassword.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n    <div class=\"w-full max-w-md bg-white rounded-lg shadow-md p-6\">\r\n      <h2 class=\"text-2xl font-bold text-gray-800 text-center mb-6\">Set Your Password</h2>\r\n      <form @submit.prevent=\"handleSetPassword\">\r\n        <div class=\"mb-4\">\r\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            v-model=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">New Password</label>\r\n          <input\r\n            v-model=\"password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            placeholder=\"Enter new password\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring focus:ring-indigo-500 focus:ring-opacity-50\"\r\n        >\r\n          Set Password\r\n        </button>\r\n      </form>\r\n      <p v-if=\"errorMessage\" class=\"text-red-500 text-center mt-4\">{{ errorMessage }}</p>\r\n      <p v-if=\"successMessage\" class=\"text-green-500 text-center mt-4\">{{ successMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nconst email = ref(\"\");\r\nconst password = ref(\"\");\r\nconst errorMessage = ref(\"\");\r\nconst successMessage = ref(\"\");\r\nconst router = useRouter();\r\n\r\nconst handleSetPassword = async () => {\r\n  try {\r\n    await axios.post(\"http://localhost:5000/api/auth/set-password\", {\r\n      email: email.value,\r\n      password: password.value,\r\n    });\r\n\r\n    successMessage.value = \"Password set successfully. Redirecting to login...\";\r\n    setTimeout(() => router.push(\"/\"), 2000);\r\n  } catch (error) {\r\n    errorMessage.value = error.response?.data?.error || \"Failed to set password.\";\r\n    console.error(\"Setting password failed:\", error);\r\n  }\r\n};\r\n\r\nconst checkAdminStatus = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:5000/api/auth/has-admins');\r\n    if (!response.data.hasAdminWithNullPassword) {\r\n      router.push('/');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error checking admin status:', error);\r\n  }\r\n};\r\n\r\nonMounted(checkAdminStatus);\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}