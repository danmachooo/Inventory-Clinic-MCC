{"ast":null,"code":"// stores/auth.js\nimport { defineStore } from 'pinia';\nexport var useAuthStore = defineStore('auth', {\n  state: function state() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken')\n    };\n  },\n  actions: {\n    login: function login(token) {\n      localStorage.setItem('authToken', token);\n      this.isLoggedIn = true;\n    },\n    logout: function logout() {\n      localStorage.removeItem('authToken');\n      this.isLoggedIn = false;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useAuthStore","state","isLoggedIn","localStorage","getItem","actions","login","token","setItem","logout","removeItem"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/store/authStore.js"],"sourcesContent":["// stores/auth.js\r\nimport { defineStore } from 'pinia'\r\n\r\nexport const useAuthStore = defineStore('auth', {\r\n  state: () => ({\r\n    isLoggedIn: !!localStorage.getItem('authToken'),\r\n  }),\r\n  actions: {\r\n    login(token) {\r\n      localStorage.setItem('authToken', token)\r\n      this.isLoggedIn = true\r\n    },\r\n    logout() {\r\n      localStorage.removeItem('authToken')\r\n      this.isLoggedIn = false\r\n    },\r\n  },\r\n})\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,IAAMC,YAAY,GAAGD,WAAW,CAAC,MAAM,EAAE;EAC9CE,KAAK,EAAE,SAAPA,KAAKA,CAAA;IAAA,OAAS;MACZC,UAAU,EAAE,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW;IAChD,CAAC;EAAA,CAAC;EACFC,OAAO,EAAE;IACPC,KAAK,WAALA,KAAKA,CAACC,KAAK,EAAE;MACXJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAED,KAAK,CAAC;MACxC,IAAI,CAACL,UAAU,GAAG,IAAI;IACxB,CAAC;IACDO,MAAM,WAANA,MAAMA,CAAA,EAAG;MACPN,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;MACpC,IAAI,CAACR,UAAU,GAAG,KAAK;IACzB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}