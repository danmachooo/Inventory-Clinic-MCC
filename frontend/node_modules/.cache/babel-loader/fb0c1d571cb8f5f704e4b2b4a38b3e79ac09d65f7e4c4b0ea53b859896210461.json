{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport { useToast } from 'vue-toast-notification';\nimport { Menu, Bell } from 'lucide-vue-next';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'Header',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var unreadNotifications = ref(false);\n    var $toast = useToast();\n    var router = useRouter();\n    var fetchNotifications = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:5000:api/inventory/notifications');\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              data = _context.sent;\n              unreadNotifications.value = data.data.some(function (notification) {\n                return !notification.seen;\n              });\n              if (unreadNotifications.value) {\n                showToast();\n              }\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching notifications:', _context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      return function fetchNotifications() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var showToast = function showToast() {\n      $toast.info({\n        message: 'A new notification',\n        duration: 0,\n        position: 'top-right',\n        action: {\n          text: 'View',\n          onClick: function onClick(e, toastObject) {\n            router.push('/notifications');\n            toastObject.goAway(0);\n          }\n        }\n      });\n    };\n    var showNotification = function showNotification() {\n      router.push('/notifications');\n    };\n    onMounted(function () {\n      fetchNotifications();\n      // Set up polling to check for new notifications every minute\n      setInterval(fetchNotifications, 60000);\n    });\n    watch(unreadNotifications, function (newValue) {\n      if (newValue) {\n        showToast();\n      }\n    });\n    var __returned__ = {\n      unreadNotifications: unreadNotifications,\n      $toast: $toast,\n      router: router,\n      fetchNotifications: fetchNotifications,\n      showToast: showToast,\n      showNotification: showNotification,\n      ref: ref,\n      onMounted: onMounted,\n      watch: watch,\n      get useToast() {\n        return useToast;\n      },\n      get Menu() {\n        return Menu;\n      },\n      get Bell() {\n        return Bell;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","useToast","Menu","Bell","useRouter","unreadNotifications","$toast","router","fetchNotifications","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","json","value","some","notification","seen","showToast","t0","console","error","stop","apply","arguments","info","message","duration","position","action","text","onClick","e","toastObject","push","goAway","showNotification","setInterval","newValue"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/components/Header.vue"],"sourcesContent":["<template>\r\n  <header class=\"bg-white shadow-sm\">\r\n    <div class=\"flex items-center justify-between p-4\">\r\n      <button @click=\"$emit('toggle-sidebar')\" class=\"text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-md\">\r\n        <span class=\"sr-only\">Toggle Sidebar</span>\r\n        <Menu class=\"h-6 w-6\" />\r\n      </button>\r\n      \r\n      <button @click=\"showNotification\" class=\"text-gray-500 hover:text-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-md relative\">\r\n        <span class=\"sr-only\">Notifications</span>\r\n        <Bell class=\"h-6 w-6\" />\r\n        <span v-if=\"unreadNotifications\" class=\"absolute -top-1 -right-1 block h-3 w-3 rounded-full bg-red-500\"></span>\r\n      </button>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport { useToast } from 'vue-toast-notification'\r\nimport { Menu, Bell } from 'lucide-vue-next'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst unreadNotifications = ref(false)\r\nconst $toast = useToast()\r\nconst router = useRouter()\r\n\r\nconst fetchNotifications = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000:api/inventory/notifications')\r\n    const data = await response.json()\r\n    unreadNotifications.value = data.data.some(notification => !notification.seen)\r\n    if (unreadNotifications.value) {\r\n      showToast()\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching notifications:', error)\r\n  }\r\n}\r\n\r\nconst showToast = () => {\r\n  $toast.info({\r\n    message: 'A new notification',\r\n    duration: 0,\r\n    position: 'top-right',\r\n    action: {\r\n      text: 'View',\r\n      onClick: (e, toastObject) => {\r\n        router.push('/notifications')\r\n        toastObject.goAway(0)\r\n      },\r\n    },\r\n  })\r\n}\r\n\r\nconst showNotification = () => {\r\n  router.push('/notifications')\r\n}\r\n\r\nonMounted(() => {\r\n  fetchNotifications()\r\n  // Set up polling to check for new notifications every minute\r\n  setInterval(fetchNotifications, 60000)\r\n})\r\n\r\nwatch(unreadNotifications, (newValue) => {\r\n  if (newValue) {\r\n    showToast()\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n@import 'vue-toast-notification/dist/theme-sugar.css';\r\n</style>"],"mappings":";;;;;;;;;AAkBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC3C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,IAAI,EAAEC,IAAI,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,YAAY;;;;;;IAEtC,IAAMC,mBAAmB,GAAGP,GAAG,CAAC,KAAK,CAAC;IACtC,IAAMQ,MAAM,GAAGL,QAAQ,CAAC,CAAC;IACzB,IAAMM,MAAM,GAAGH,SAAS,CAAC,CAAC;IAE1B,IAAMI,kBAAkB;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,IAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAC,KAAK,CAAC,mDAAmD,CAAC;YAAA;cAA3EP,QAAQ,GAAAI,QAAA,CAAAI,IAAA;cAAAJ,QAAA,CAAAE,IAAA;cAAA,OACKN,QAAQ,CAACS,IAAI,CAAC,CAAC;YAAA;cAA5BR,IAAI,GAAAG,QAAA,CAAAI,IAAA;cACVjB,mBAAmB,CAACmB,KAAK,GAAGT,IAAI,CAACA,IAAI,CAACU,IAAI,CAAC,UAAAC,YAAY;gBAAA,OAAI,CAACA,YAAY,CAACC,IAAI;cAAA,EAAC;cAC9E,IAAItB,mBAAmB,CAACmB,KAAK,EAAE;gBAC7BI,SAAS,CAAC,CAAC;cACb;cAACV,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA;cAEDY,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAAb,QAAA,CAAAW,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAX,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA,CAExD;MAAA,gBAXKL,kBAAkBA,CAAA;QAAA,OAAAC,KAAA,CAAAwB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAWvB;IAED,IAAMN,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;MACtBtB,MAAM,CAAC6B,IAAI,CAAC;QACVC,OAAO,EAAE,oBAAoB;QAC7BC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,WAAW;QACrBC,MAAM,EAAE;UACNC,IAAI,EAAE,MAAM;UACZC,OAAO,EAAE,SAATA,OAAOA,CAAGC,CAAC,EAAEC,WAAW,EAAK;YAC3BpC,MAAM,CAACqC,IAAI,CAAC,gBAAgB,CAAC;YAC7BD,WAAW,CAACE,MAAM,CAAC,CAAC,CAAC;UACvB;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;MAC7BvC,MAAM,CAACqC,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED7C,SAAS,CAAC,YAAM;MACdS,kBAAkB,CAAC,CAAC;MACpB;MACAuC,WAAW,CAACvC,kBAAkB,EAAE,KAAK,CAAC;IACxC,CAAC,CAAC;IAEFR,KAAK,CAACK,mBAAmB,EAAE,UAAC2C,QAAQ,EAAK;MACvC,IAAIA,QAAQ,EAAE;QACZpB,SAAS,CAAC,CAAC;MACb;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}