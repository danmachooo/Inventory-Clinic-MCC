{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { CheckIcon } from 'lucide-vue-next';\nexport default {\n  __name: 'Settings',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var settings = ref({\n      lowStockThreshold: 10,\n      expiryNotificationDays: 30,\n      emailNotifications: true,\n      pushNotifications: false,\n      defaultReportPeriod: 'monthly',\n      autoGenerateReports: true\n    });\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch('http://localhost:3000/api/settings');\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n          case 6:\n            data = _context.sent;\n            if (data.success) {\n              settings.value = _objectSpread(_objectSpread({}, settings.value), data.data);\n            }\n            _context.next = 13;\n            break;\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Failed to fetch settings:', _context.t0);\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 10]]);\n    })));\n    var saveSettings = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('http://localhost:3000/api/settings', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(settings.value)\n              });\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              data = _context2.sent;\n              if (data.success) {\n                console.log('Settings saved successfully');\n              } else {\n                console.error('Failed to save settings:', data.error);\n              }\n              _context2.next = 13;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error saving settings:', _context2.t0);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      }));\n      return function saveSettings() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var __returned__ = {\n      settings: settings,\n      saveSettings: saveSettings,\n      ref: ref,\n      onMounted: onMounted,\n      get CheckIcon() {\n        return CheckIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","CheckIcon","settings","lowStockThreshold","expiryNotificationDays","emailNotifications","pushNotifications","defaultReportPeriod","autoGenerateReports","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","json","success","value","_objectSpread","t0","console","error","stop","saveSettings","_ref3","_callee2","_callee2$","_context2","method","headers","body","JSON","stringify","log","apply","arguments"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/Settings.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-100\">\r\n    <div class=\"container mx-auto px-4 py-8\">\r\n      <h1 class=\"text-3xl font-bold text-gray-900 mb-6\">Inventory Management Settings</h1>\r\n      \r\n      <div class=\"bg-white shadow-md rounded-lg p-6 mb-6\">\r\n        <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">General Settings</h2>\r\n        <div class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"lowStockThreshold\" class=\"block text-sm font-medium text-gray-700\">Low Stock Threshold</label>\r\n            <input type=\"number\" id=\"lowStockThreshold\" v-model=\"settings.lowStockThreshold\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n          </div>\r\n          <div>\r\n            <label for=\"expiryNotificationDays\" class=\"block text-sm font-medium text-gray-700\">Expiry Notification Days</label>\r\n            <input type=\"number\" id=\"expiryNotificationDays\" v-model=\"settings.expiryNotificationDays\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"bg-white shadow-md rounded-lg p-6 mb-6\">\r\n        <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Notification Preferences</h2>\r\n        <div class=\"space-y-4\">\r\n          <div class=\"flex items-center\">\r\n            <input type=\"checkbox\" id=\"emailNotifications\" v-model=\"settings.emailNotifications\" class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n            <label for=\"emailNotifications\" class=\"ml-2 block text-sm text-gray-900\">Receive email notifications</label>\r\n          </div>\r\n          <div class=\"flex items-center\">\r\n            <input type=\"checkbox\" id=\"pushNotifications\" v-model=\"settings.pushNotifications\" class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n            <label for=\"pushNotifications\" class=\"ml-2 block text-sm text-gray-900\">Receive push notifications</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"bg-white shadow-md rounded-lg p-6 mb-6\">\r\n        <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Report Generation</h2>\r\n        <div class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"defaultReportPeriod\" class=\"block text-sm font-medium text-gray-700\">Default Report Period</label>\r\n            <select id=\"defaultReportPeriod\" v-model=\"settings.defaultReportPeriod\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n              <option value=\"daily\">Daily</option>\r\n              <option value=\"weekly\">Weekly</option>\r\n              <option value=\"monthly\">Monthly</option>\r\n              <option value=\"quarterly\">Quarterly</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"flex items-center\">\r\n            <input type=\"checkbox\" id=\"autoGenerateReports\" v-model=\"settings.autoGenerateReports\" class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n            <label for=\"autoGenerateReports\" class=\"ml-2 block text-sm text-gray-900\">Auto-generate reports</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"flex justify-end\">\r\n        <button @click=\"saveSettings\" class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\r\n          Save Settings\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { CheckIcon } from 'lucide-vue-next'\r\n\r\nconst settings = ref({\r\n  lowStockThreshold: 10,\r\n  expiryNotificationDays: 30,\r\n  emailNotifications: true,\r\n  pushNotifications: false,\r\n  defaultReportPeriod: 'monthly',\r\n  autoGenerateReports: true\r\n})\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/api/settings')\r\n    const data = await response.json()\r\n    if (data.success) {\r\n      settings.value = { ...settings.value, ...data.data }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch settings:', error)\r\n  }\r\n})\r\n\r\nconst saveSettings = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/api/settings', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(settings.value)\r\n    })\r\n    const data = await response.json()\r\n    if (data.success) {\r\n      console.log('Settings saved successfully')\r\n    } else {\r\n      console.error('Failed to save settings:', data.error)\r\n    }\r\n  } catch (error) {\r\n    console.error('Error saving settings:', error)\r\n  }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}