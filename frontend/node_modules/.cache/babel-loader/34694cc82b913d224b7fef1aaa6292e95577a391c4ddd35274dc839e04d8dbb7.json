{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, computed, onMounted } from \"vue\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nexport default {\n  __name: 'Reports',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var reportType = ref(\"monthly\");\n    var selectedMonth = ref(new Date().toISOString().slice(0, 7));\n    var selectedYear = ref(new Date().getFullYear());\n    var availableYears = ref(Array.from({\n      length: 5\n    }, function (_, i) {\n      return new Date().getFullYear() - i;\n    }));\n    var reportData = ref([]);\n    var narrativeReport = ref(\"\");\n    var reportTitle = computed(function () {\n      return reportType.value === \"monthly\" ? new Date(selectedMonth.value).toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      }) : selectedYear.value;\n    });\n    var fetchReport = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"/api/inventory/reports\", {\n                params: {\n                  type: reportType.value,\n                  date: reportType.value === \"monthly\" ? selectedMonth.value : selectedYear.value\n                }\n              });\n            case 3:\n              response = _context.sent;\n              reportData.value = response.data.data;\n              narrativeReport.value = generateNarrativeReport(reportData.value);\n              _context.next = 13;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error fetching report:\", _context.t0);\n              reportData.value = [];\n              narrativeReport.value = \"\";\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n      return function fetchReport() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var generateNarrativeReport = function generateNarrativeReport(data) {\n      var report = \"<p>During this period, the inventory has shown the following notable changes:</p>\";\n      var expiredBatches = data.filter(function (item) {\n        return item.totalRemaining === 0;\n      });\n      var lowStockItems = data.filter(function (item) {\n        return item.totalRemaining < item.batchQuantity * 0.2;\n      });\n      if (expiredBatches.length > 0) {\n        report += \"<p>There \".concat(expiredBatches.length === 1 ? 'is' : 'are', \" \").concat(expiredBatches.length, \" batch\").concat(expiredBatches.length === 1 ? '' : 'es', \" that have been fully depleted or expired. These include \").concat(expiredBatches.map(function (b) {\n          return b.itemName + ' (' + b.batchName + ')';\n        }).join(', '), \". It is recommended to review these items and consider restocking if necessary.</p>\");\n      }\n      if (lowStockItems.length > 0) {\n        report += \"<p>Additionally, \".concat(lowStockItems.length, \" item\").concat(lowStockItems.length === 1 ? '' : 's', \" \").concat(lowStockItems.length === 1 ? 'is' : 'are', \" running low on stock (less than 20% remaining). These items are: \").concat(lowStockItems.map(function (i) {\n          return i.itemName;\n        }).join(', '), \". It is advised to place orders for these items soon to maintain adequate inventory levels.</p>\");\n      }\n      return report;\n    };\n    var downloadPDF = function downloadPDF() {\n      var doc = new jsPDF();\n\n      // Title\n      doc.setFontSize(18);\n      doc.text(\"Inventory Report for \".concat(reportTitle.value), 14, 20);\n\n      // Narrative Report\n      doc.setFontSize(12);\n      doc.html(narrativeReport.value, {\n        callback: function callback(doc) {\n          // Table\n          doc.autoTable({\n            startY: doc.lastAutoTable.finalY + 10,\n            head: [[\"Item Name\", \"Batch Name\", \"Quantity of Batch Item\", \"Total Disbursed\", \"Total Remaining\"]],\n            body: reportData.value.map(function (item) {\n              return [item.itemName, item.batchName, item.batchQuantity, item.totalDisbursed, item.totalRemaining];\n            })\n          });\n\n          // Save PDF\n          doc.save(\"Inventory_Report_\".concat(reportTitle.value.replace(' ', '_'), \".pdf\"));\n        },\n        x: 14,\n        y: 30,\n        width: 180\n      });\n    };\n    var printReport = function printReport() {\n      window.print();\n    };\n    onMounted(fetchReport);\n    var __returned__ = {\n      reportType: reportType,\n      selectedMonth: selectedMonth,\n      selectedYear: selectedYear,\n      availableYears: availableYears,\n      reportData: reportData,\n      narrativeReport: narrativeReport,\n      reportTitle: reportTitle,\n      fetchReport: fetchReport,\n      generateNarrativeReport: generateNarrativeReport,\n      downloadPDF: downloadPDF,\n      printReport: printReport,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted,\n      get axios() {\n        return axios;\n      },\n      get jsPDF() {\n        return jsPDF;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","jsPDF","reportType","selectedMonth","Date","toISOString","slice","selectedYear","getFullYear","availableYears","Array","from","length","_","i","reportData","narrativeReport","reportTitle","value","toLocaleString","month","year","fetchReport","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","params","type","date","sent","data","generateNarrativeReport","t0","console","error","stop","apply","arguments","report","expiredBatches","filter","item","totalRemaining","lowStockItems","batchQuantity","concat","map","b","itemName","batchName","join","downloadPDF","doc","setFontSize","text","html","callback","autoTable","startY","lastAutoTable","finalY","head","body","totalDisbursed","save","replace","x","y","width","printReport","window","print"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/Reports.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-6 py-8\">\r\n    <h1 class=\"text-gray-800 text-3xl font-bold mb-4\">Inventory Reports</h1>\r\n    <p class=\"text-gray-600 mb-6\">View and download monthly and yearly inventory reports.</p>\r\n\r\n    <!-- Report Type Selection -->\r\n    <div class=\"mb-6 flex items-center space-x-4\">\r\n      <label for=\"reportType\" class=\"text-gray-700 font-medium\">Report Type:</label>\r\n      <select\r\n        id=\"reportType\"\r\n        v-model=\"reportType\"\r\n        @change=\"fetchReport\"\r\n        class=\"block w-32 px-3 py-2 border rounded-md text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n      >\r\n        <option value=\"monthly\">Monthly</option>\r\n        <option value=\"yearly\">Yearly</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Date Selection -->\r\n    <div class=\"mb-6 flex items-center space-x-4\">\r\n      <template v-if=\"reportType === 'monthly'\">\r\n        <label for=\"month\" class=\"text-gray-700 font-medium\">Select Month:</label>\r\n        <input\r\n          id=\"month\"\r\n          v-model=\"selectedMonth\"\r\n          type=\"month\"\r\n          @change=\"fetchReport\"\r\n          class=\"block w-48 px-3 py-2 border rounded-md text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n      </template>\r\n      <template v-else>\r\n        <label for=\"year\" class=\"text-gray-700 font-medium\">Select Year:</label>\r\n        <select\r\n          id=\"year\"\r\n          v-model=\"selectedYear\"\r\n          @change=\"fetchReport\"\r\n          class=\"block w-32 px-3 py-2 border rounded-md text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">\r\n            {{ year }}\r\n          </option>\r\n        </select>\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Narrative Report -->\r\n    <div v-if=\"narrativeReport\" class=\"mb-8 bg-white p-6 rounded-lg shadow-md\">\r\n      <h2 class=\"text-xl font-bold text-gray-800 mb-4\">Narrative Report</h2>\r\n      <div v-html=\"narrativeReport\" class=\"text-gray-700 prose\"></div>\r\n    </div>\r\n\r\n    <!-- Report Table -->\r\n    <div v-if=\"reportData.length > 0\" class=\"mb-8\">\r\n      <h2 class=\"text-2xl font-bold text-gray-800 mb-4\">\r\n        Inventory Report for {{ reportTitle }}\r\n      </h2>\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"w-full text-left border-collapse\">\r\n          <thead>\r\n            <tr class=\"bg-gray-100 text-gray-700\">\r\n              <th class=\"px-4 py-2 border\">Item Name</th>\r\n              <th class=\"px-4 py-2 border\">Batch Name</th>\r\n              <th class=\"px-4 py-2 border\">Quantity of Batch Item</th>\r\n              <th class=\"px-4 py-2 border\">Total Disbursed</th>\r\n              <th class=\"px-4 py-2 border\">Total Remaining</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"(item, index) in reportData\"\r\n              :key=\"index\"\r\n              class=\"text-gray-600 hover:bg-gray-50\"\r\n            >\r\n              <td class=\"px-4 py-2 border\">{{ item.itemName }}</td>\r\n              <td class=\"px-4 py-2 border\">{{ item.batchName }}</td>\r\n              <td class=\"px-4 py-2 border\">{{ item.batchQuantity }}</td>\r\n              <td class=\"px-4 py-2 border\">{{ item.totalDisbursed }}</td>\r\n              <td class=\"px-4 py-2 border\">{{ item.totalRemaining }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No Data Message -->\r\n    <div v-else class=\"mb-8 text-center\">\r\n      <p class=\"text-gray-600\">No data available for the selected period.</p>\r\n    </div>\r\n\r\n    <!-- Action Buttons -->\r\n    <div class=\"flex justify-center space-x-4\">\r\n      <button\r\n        @click=\"downloadPDF\"\r\n        class=\"px-6 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n      >\r\n        Download PDF\r\n      </button>\r\n      <button\r\n        @click=\"printReport\"\r\n        class=\"px-6 py-2 bg-green-600 text-white font-medium rounded-md hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n      >\r\n        Print Report\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst reportType = ref(\"monthly\");\r\nconst selectedMonth = ref(new Date().toISOString().slice(0, 7));\r\nconst selectedYear = ref(new Date().getFullYear());\r\nconst availableYears = ref(Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i));\r\nconst reportData = ref([]);\r\nconst narrativeReport = ref(\"\");\r\n\r\nconst reportTitle = computed(() => {\r\n  return reportType.value === \"monthly\"\r\n    ? new Date(selectedMonth.value).toLocaleString('default', { month: 'long', year: 'numeric' })\r\n    : selectedYear.value;\r\n});\r\n\r\nconst fetchReport = async () => {\r\n  try {\r\n    const response = await axios.get(\"/api/inventory/reports\", {\r\n      params: {\r\n        type: reportType.value,\r\n        date: reportType.value === \"monthly\" ? selectedMonth.value : selectedYear.value,\r\n      },\r\n    });\r\n    reportData.value = response.data.data;\r\n    narrativeReport.value = generateNarrativeReport(reportData.value);\r\n  } catch (error) {\r\n    console.error(\"Error fetching report:\", error);\r\n    reportData.value = [];\r\n    narrativeReport.value = \"\";\r\n  }\r\n};\r\n\r\nconst generateNarrativeReport = (data) => {\r\n  let report = \"<p>During this period, the inventory has shown the following notable changes:</p>\";\r\n\r\n  const expiredBatches = data.filter(item => item.totalRemaining === 0);\r\n  const lowStockItems = data.filter(item => item.totalRemaining < item.batchQuantity * 0.2);\r\n\r\n  if (expiredBatches.length > 0) {\r\n    report += `<p>There ${expiredBatches.length === 1 ? 'is' : 'are'} ${expiredBatches.length} batch${expiredBatches.length === 1 ? '' : 'es'} that have been fully depleted or expired. These include ${expiredBatches.map(b => b.itemName + ' (' + b.batchName + ')').join(', ')}. It is recommended to review these items and consider restocking if necessary.</p>`;\r\n  }\r\n\r\n  if (lowStockItems.length > 0) {\r\n    report += `<p>Additionally, ${lowStockItems.length} item${lowStockItems.length === 1 ? '' : 's'} ${lowStockItems.length === 1 ? 'is' : 'are'} running low on stock (less than 20% remaining). These items are: ${lowStockItems.map(i => i.itemName).join(', ')}. It is advised to place orders for these items soon to maintain adequate inventory levels.</p>`;\r\n  }\r\n\r\n  return report;\r\n};\r\n\r\nconst downloadPDF = () => {\r\n  const doc = new jsPDF();\r\n\r\n  // Title\r\n  doc.setFontSize(18);\r\n  doc.text(`Inventory Report for ${reportTitle.value}`, 14, 20);\r\n\r\n  // Narrative Report\r\n  doc.setFontSize(12);\r\n  doc.html(narrativeReport.value, {\r\n    callback: function (doc) {\r\n      // Table\r\n      doc.autoTable({\r\n        startY: doc.lastAutoTable.finalY + 10,\r\n        head: [[\"Item Name\", \"Batch Name\", \"Quantity of Batch Item\", \"Total Disbursed\", \"Total Remaining\"]],\r\n        body: reportData.value.map((item) => [\r\n          item.itemName,\r\n          item.batchName,\r\n          item.batchQuantity,\r\n          item.totalDisbursed,\r\n          item.totalRemaining,\r\n        ]),\r\n      });\r\n\r\n      // Save PDF\r\n      doc.save(`Inventory_Report_${reportTitle.value.replace(' ', '_')}.pdf`);\r\n    },\r\n    x: 14,\r\n    y: 30,\r\n    width: 180,\r\n  });\r\n};\r\n\r\nconst printReport = () => {\r\n  window.print();\r\n};\r\n\r\nonMounted(fetchReport);\r\n</script>\r\n\r\n<style>\r\n@media print {\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n  .container, .container * {\r\n    visibility: visible;\r\n  }\r\n  .container {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}