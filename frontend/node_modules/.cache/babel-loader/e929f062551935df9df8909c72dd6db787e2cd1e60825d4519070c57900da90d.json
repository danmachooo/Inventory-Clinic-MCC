{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport Sidebar from './components/Sidebar.vue';\nimport Header from './components/Header.vue';\nimport { isLoggedIn } from './authState';\nexport default {\n  __name: 'App',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var router = useRouter();\n    var sidebarOpen = ref(true); // Sidebar open state\n\n    // Function to toggle the sidebar\n    var toggleSidebar = function toggleSidebar() {\n      sidebarOpen.value = !sidebarOpen.value;\n    };\n\n    // Watch login status and redirect to login if user is not authenticated\n    watch(isLoggedIn, function (newStatus) {\n      if (!newStatus) {\n        router.push('/');\n      }\n    });\n    var __returned__ = {\n      router: router,\n      sidebarOpen: sidebarOpen,\n      toggleSidebar: toggleSidebar,\n      ref: ref,\n      watch: watch,\n      get useRouter() {\n        return useRouter;\n      },\n      Sidebar: Sidebar,\n      Header: Header,\n      get isLoggedIn() {\n        return isLoggedIn;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","useRouter","Sidebar","Header","isLoggedIn","router","sidebarOpen","toggleSidebar","value","newStatus","push"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/App.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex h-screen bg-gray-100\">\r\n    <!-- Sidebar only if logged in -->\r\n    <Sidebar \r\n      v-if=\"isLoggedIn\" \r\n      :is-open=\"sidebarOpen\" \r\n      @toggle-sidebar=\"toggleSidebar\" \r\n    />\r\n\r\n    <div \r\n      :class=\"[ \r\n        'flex-1 flex flex-col overflow-hidden transition-all duration-300 ease-in-out', \r\n        sidebarOpen ? 'ml-64' : 'ml-0' // Adjust margin based on sidebar state\r\n      ]\"\r\n    >\r\n      <!-- Header for logged-in users -->\r\n      <Header v-if=\"isLoggedIn\" @toggle-sidebar=\"toggleSidebar\" />\r\n\r\n      <!-- Main content area -->\r\n      <main \r\n        class=\"flexoverflow-x-hidden overflow-y-auto bg-gray-100\"\r\n      >\r\n        <router-view></router-view>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport Sidebar from './components/Sidebar.vue'\r\nimport Header from './components/Header.vue'\r\nimport { isLoggedIn } from './authState'\r\n\r\nconst router = useRouter()\r\nconst sidebarOpen = ref(true) // Sidebar open state\r\n\r\n// Function to toggle the sidebar\r\nconst toggleSidebar = () => {\r\n  sidebarOpen.value = !sidebarOpen.value\r\n}\r\n\r\n// Watch login status and redirect to login if user is not authenticated\r\nwatch(isLoggedIn, (newStatus) => {\r\n  if (!newStatus) {\r\n    router.push('/')\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n/* Ensure smooth scaling */\r\n.main {\r\n  transition: margin-left 0.3s ease-in-out;\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";;AA6BA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAK;AAChC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,UAAU,QAAQ,aAAa;;;;;;IAExC,IAAMC,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAC1B,IAAMK,WAAW,GAAGP,GAAG,CAAC,IAAI,CAAC,EAAC;;IAE9B;IACA,IAAMQ,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;MAC1BD,WAAW,CAACE,KAAK,GAAG,CAACF,WAAW,CAACE,KAAK;IACxC,CAAC;;IAED;IACAR,KAAK,CAACI,UAAU,EAAE,UAACK,SAAS,EAAK;MAC/B,IAAI,CAACA,SAAS,EAAE;QACdJ,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC;MAClB;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}