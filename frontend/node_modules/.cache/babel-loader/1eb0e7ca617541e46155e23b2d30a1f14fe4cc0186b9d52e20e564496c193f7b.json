{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"flex h-screen bg-gray-100\"\n};\nvar _hoisted_2 = {\n  \"class\": \"flex-1 flex flex-col overflow-hidden\"\n};\nvar _hoisted_3 = {\n  \"class\": \"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.isLoggedIn ? (_openBlock(), _createBlock($setup[\"Sidebar\"], {\n    key: 0,\n    \"is-open\": $setup.sidebarOpen,\n    onToggleSidebar: $setup.toggleSidebar\n  }, null, 8 /* PROPS */, [\"is-open\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [$setup.isLoggedIn ? (_openBlock(), _createBlock($setup[\"Header\"], {\n    key: 0,\n    onToggleSidebar: $setup.toggleSidebar\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"main\", _hoisted_3, [_createVNode(_component_router_view)])])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","$setup","isLoggedIn","_createBlock","key","sidebarOpen","onToggleSidebar","toggleSidebar","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_router_view"],"sources":["C:\\Inventory-Clinic-MCC\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex h-screen bg-gray-100\">\r\n    <Sidebar v-if=\"isLoggedIn\" :is-open=\"sidebarOpen\" @toggle-sidebar=\"toggleSidebar\" />\r\n    <div class=\"flex-1 flex flex-col overflow-hidden\">\r\n      <Header v-if=\"isLoggedIn\" @toggle-sidebar=\"toggleSidebar\" />\r\n      <main class=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\">\r\n        <router-view></router-view>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { useAuthStore } from './store/authStore'\r\nimport Sidebar from './components/Sidebar.vue'\r\nimport Header from './components/Header.vue'\r\n\r\nconst authStore = useAuthStore()\r\nconst isLoggedIn = computed(() => authStore.isLoggedIn)\r\nconst sidebarOpen = ref(true)\r\n\r\nconst toggleSidebar = () => {\r\n  sidebarOpen.value = !sidebarOpen.value\r\n}\r\n</script>"],"mappings":";;EACO,SAAM;AAA2B;;EAE/B,SAAM;AAAsC;;EAEzC,SAAM;AAAsD;;;uBAJtEA,mBAAA,CAQM,OARNC,UAQM,GAPWC,MAAA,CAAAC,UAAU,I,cAAzBC,YAAA,CAAoFF,MAAA;IAFxFG,GAAA;IAEgC,SAAO,EAAEH,MAAA,CAAAI,WAAW;IAAGC,eAAc,EAAEL,MAAA,CAAAM;0CAFvEC,mBAAA,gBAGIC,mBAAA,CAKM,OALNC,UAKM,GAJUT,MAAA,CAAAC,UAAU,I,cAAxBC,YAAA,CAA4DF,MAAA;IAJlEG,GAAA;IAIiCE,eAAc,EAAEL,MAAA,CAAAM;QAJjDC,mBAAA,gBAKMC,mBAAA,CAEO,QAFPE,UAEO,GADLC,YAAA,CAA2BC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}