'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var objectShallowEqual = function objectShallowEqual(a, b) {
  if (a === b) {
    return true;
  }

  return arrayShallowEqual(Object.keys(a), Object.keys(b)) && arrayShallowEqual(Object.values(a), Object.values(b));
};

var arrayShallowEqual = function arrayShallowEqual(a, b) {
  if (a === b) {
    return true;
  }

  if (a.length !== b.length) {
    return false;
  }

  for (var i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
};

var shallowEqual = function shallowEqual(a, b) {
  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== (typeof b === 'undefined' ? 'undefined' : _typeof(b)) || a === null && b !== null || a !== null && b === null || Array.isArray(a) && !Array.isArray(b) || !Array.isArray(a) && Array.isArray(b)) {
    return false;
  }

  if (Promise.resolve(a) === a && Promise.resolve(b) === b) {
    return a === b;
  }

  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object' && Array.isArray(a)) {
    return arrayShallowEqual(a, b);
  }

  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
    return objectShallowEqual(a, b);
  }

  return a === b;
};

exports.default = shallowEqual;